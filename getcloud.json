{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1.0",
    "title": "Gateway API Specification",
    "description": "This is an API v1.1.0 specification for GET Cloud that allows devices to obtain existing information on GET Cloud and and submit data to GET Cloud.",
    "termsOfService": "https://docs.micropower-group.com/#!doc/topic:GET_User_Terms_and_conditions",
    "contact": {
      "name": "Micropower Group",
      "email": "micropowergroupab@gmail.com"
    }
  },
  "tags": [
    {
      "name": "indexes"
    },
    {
      "name": "devices"
    },
    {
      "name": "pings"
    },
    {
      "name": "gateways"
    }
  ],
  "servers": [
    {
      "url": "https://get-cloud.azurewebsites.net/api/"
    }
  ],
  "paths": {
    "/gateway/software/versions": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "List all available gateway versions",
        "responses": {
          "200": {
            "description": "Successfully returning the list of all available gateway versions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1.0.0",
                        "1.1.0"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/software/latest": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the latest gateway software version",
        "responses": {
          "200": {
            "description": "Successfully returning the latest gateway software version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "sha256": {
                          "type": "string"
                        }
                      },
                      "example": [
                        "1.1.0",
                        "https://www.get-cloud.com/api/v1/gateway/software/1.1.0/mpg_software_1.1.0.tar.gz",
                        "fa72c2cd95b5ea50a76a0cc4ed1714dc93cc37ec98b3bc41597c573887deae47"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/software/{version}": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version is the gateway's version that is to be downloaded.",
            "example": "1.1.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get the download path and hash",
        "responses": {
          "200": {
            "description": "Successfully returning the detail of the requested gateway software version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "sha256": {
                          "type": "string"
                        }
                      },
                      "example": [
                        "1.1.0",
                        "https://www.get-cloud.com/api/v1/gateway/software/1.1.0/mpg_software_1.1.0.tar.gz",
                        "fa72c2cd95b5ea50a76a0cc4ed1714dc93cc37ec98b3bc41597c573887deae47"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/ping": {
      "get": {
        "tags": [
          "pings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Send ping to server",
        "description": "Make an authenticated get request to this endpoint to signal that the device is up and running, without uploading any logs.",
        "responses": {
          "200": {
            "description": "Successfully pinging the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "pings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Send ping to server",
        "description": "Make an authenticated get request to this endpoint to signal that the gateway is up and running.",
        "responses": {
          "200": {
            "description": "Successfully pinging the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/history": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing history logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of history log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/instant": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing instant logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of instant log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/event": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing event logs",
        "responses": {
          "200": {
            "description": "Successfully getting the event of instant log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/status": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid status fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StatusBMUSchema"
                  },
                  {
                    "$ref": "#/components/schemas/StatusChargerSchema"
                  },
                  {
                    "$ref": "#/components/schemas/StatusGatewaySchema"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/statusBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/statusChargerExample"
                },
                "Gateway": {
                  "$ref": "#/components/examples/statusGatewayExample"
                }
              }
            }
          }
        },
        "summary": "Upload status logs for charger or BMU",
        "responses": {
          "200": {
            "description": "Successfully uploading the status log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponsePostStatusBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponsePostStatusChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponsePostStatusGatewayExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get the last reported status for a certain device",
        "responses": {
          "200": {
            "description": "Successfully showing the status of the given device visible for the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseGetStatusBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseGetStatusChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponseGetStatusGatewayExample"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/config": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Upload configuration for charger, BMU, or gateway",
        "requestBody": {
          "description": "The set of valid configuration fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConfigBMUSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigChargerSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigGatewaySchema"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/configBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/configChargerExample"
                },
                "Gateway": {
                  "$ref": "#/components/examples/configGatewayExample"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully uploading the config log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseConfigBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseConfigChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostConfigGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseConfigBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseConfigChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponsePostConfigGatewayExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get the latest configuration of a device",
        "summary": "Get the latest config log",
        "responses": {
          "200": {
            "description": "Successfully showing the configuration of the given device visible for the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseConfigBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseConfigChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetConfigGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseConfigBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseConfigChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponseGetConfigGatewayExample"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "408": {
            "description": "Request timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTimeout"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/history": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid configuration fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HistorySchema"
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/historyBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/historyChargerExample"
                }
              }
            }
          }
        },
        "summary": "Upload history logs for charger or BMU",
        "responses": {
          "200": {
            "description": "Successfully uploading the history logs of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHistorySchema"
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseHistoryBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseHistoryChargerExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/event": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The structure of this endpoint always consists of an array of \"events\", each of which element consists of index, timestamp, type, and values. The structure of values depends on the event type. For instance, in the alarm event, each array element in values contains code and active. In the parameterChanged event, each array element in values contains index, oldValue, and newValue. See \"schema\" for more info.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSchema"
              },
              "examples": {
                "AlarmSolvedInADay": {
                  "$ref": "#/components/examples/AlarmSolvedInADayExample"
                },
                "BaseloadChanged": {
                  "$ref": "#/components/examples/BaseloadChangedExample"
                },
                "ElectrolyteCalibratedAndFirmwareStartup": {
                  "$ref": "#/components/examples/ElectrolyteCalibratedAndFirmwareStartupExample"
                }
              }
            }
          }
        },
        "summary": "Upload status logs for charger or BMU",
        "responses": {
          "200": {
            "description": "Successfully uploading the event log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSchema"
                },
                "examples": {
                  "AlarmSolvedInADay": {
                    "$ref": "#/components/examples/ResponseAlarmSolvedInADayExample"
                  },
                  "BaseloadChanged": {
                    "$ref": "#/components/examples/ResponseBaseloadChangedExample"
                  },
                  "ElectrolyteCalibratedAndFirmwareStartup": {
                    "$ref": "#/components/examples/ResponseElectrolyteCalibratedAndFirmwareStartupExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/instant": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid instant log fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstantSchema"
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/InstantBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/InstantChargerExample"
                }
              }
            }
          }
        },
        "summary": "Upload status logs for charger or BMU",
        "responses": {
          "200": {
            "description": "Successfully uploading the instant log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInstantSchema"
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseInstantBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseInstantChargerExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "examples": {
      "ResponsePostStatusBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "activeAlarms": [],
            "actualCapacity": 680,
            "ahLeft": 453162,
            "batteryCurrent": 84108,
            "batteryTemperature": 288.89,
            "batteryLifeTempAverage": 283.33,
            "batteryVoltage": 26614,
            "Channel": 15,
            "cycles26To50": 23,
            "cycles2To25": 7,
            "cycles51To80": 127,
            "cycles81To90\"": 112,
            "cyclesAbove90": 92,
            "cyclesLeft": 1110,
            "deviceStatus": [
              1,
              7,
              2,
              4,
              29
            ],
            "deviceTime": "2021-12-01T00:31:59Z",
            "ebUnits": 105,
            "electrolyteVoltage": 6694,
            "eventLogCount": 703,
            "eventLogDate": "2021-11-30T22:44:58Z",
            "eventLogIndex": 722,
            "historyLogCount": 361,
            "historyLogDate": "2021-11-28T21:03:11Z",
            "historyLogIndex": 361,
            "instantLogCount": 20519,
            "instantLogIndex": 53200,
            "middleVoltage": 8858,
            "PanId": 19047,
            "serialNumber": 919081023,
            "stateOfCharge": 48,
            "StoppedCyles": 115,
            "timeLeft": 971,
            "totalChargeAh": 162941,
            "totalChargeTime": 18239201,
            "totalChargeWh": 4457527,
            "totalChargeWhAc": 4692133,
            "totalDischargeAh": 158838,
            "totalDischargeTime": 45202721,
            "totalDischargeWh": 3719953,
            "firmware": {
              "main": {
                "type": 11619038,
                "version": 1
              }
            }
          }
        }
      },
      "ResponseGetStatusBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "activeAlarms": [],
            "actualCapacity": 680,
            "ahLeft": 453162,
            "batteryCurrent": 84108,
            "batteryTemperature": 288.89,
            "batteryLifeTempAverage": 283.33,
            "batteryVoltage": 26614,
            "Channel": 15,
            "cycles26To50": 23,
            "cycles2To25": 7,
            "cycles51To80": 127,
            "cycles81To90\"": 112,
            "cyclesAbove90": 92,
            "cyclesLeft": 1110,
            "deviceStatus": [
              1,
              7,
              2,
              4,
              29
            ],
            "deviceTime": "2021-12-01T00:31:59Z",
            "ebUnits": 105,
            "electrolyteVoltage": 6694,
            "eventLogCount": 703,
            "eventLogDate": "2021-11-30T22:44:58Z",
            "eventLogIndex": 722,
            "historyLogCount": 361,
            "historyLogDate": "2021-11-28T21:03:11Z",
            "historyLogIndex": 361,
            "instantLogCount": 20519,
            "instantLogIndex": 53200,
            "middleVoltage": 8858,
            "PanId": 19047,
            "serialNumber": 919081023,
            "stateOfCharge": 48,
            "StoppedCyles": 115,
            "timeLeft": 971,
            "totalChargeAh": 162941,
            "totalChargeTime": 18239201,
            "totalChargeWh": 4457527,
            "totalChargeWhAc": 4692133,
            "totalDischargeAh": 158838,
            "totalDischargeTime": 45202721,
            "totalDischargeWh": 3719953,
            "firmwareType": 11618022,
            "firmwareVersion": 3
          }
        }
      },
      "statusBMUExample": {
        "value": {
          "timestamp": "2022-02-01T11:00:00+01:00",
          "activeAlarms": [],
          "actualCapacity": 680,
          "ahLeft": 453162,
          "batteryCurrent": 84108,
          "batteryTemperature": 288.89,
          "batteryLifeTempAverage": 283.33,
          "batteryVoltage": 26614,
          "Channel": 15,
          "cycles26To50": 23,
          "cycles2To25": 7,
          "cycles51To80": 127,
          "cycles81To90\"": 112,
          "cyclesAbove90": 92,
          "cyclesLeft": 1110,
          "deviceStatus": [
            1,
            7,
            2,
            4,
            29
          ],
          "deviceTime": 1638318719,
          "ebUnits": 105,
          "electrolyteVoltage": 6694,
          "eventLogCount": 703,
          "eventLogDate": 1638312298,
          "eventLogIndex": 722,
          "historyLogCount": 361,
          "historyLogDate": 1638133391,
          "historyLogIndex": 361,
          "instantLogCount": 20519,
          "instantLogIndex": 53200,
          "middleVoltage": 8858,
          "PanId": 19047,
          "serialNumber": 919081023,
          "stateOfCharge": 48,
          "StoppedCyles": 115,
          "timeLeft": 971,
          "totalChargeAh": 162941,
          "totalChargeTime": 18239201,
          "totalChargeWh": 4457527,
          "totalChargeWhAc": 4692133,
          "totalDischargeAh": 158838,
          "totalDischargeTime": 45202721,
          "totalDischargeWh": 3719953,
          "firmware": {
            "main": {
              "type": 11619038,
              "version": 1
            }
          }
        }
      },
      "ResponsePostStatusChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "acPowerConsumption": 1,
            "activeAlarms": [],
            "algorithmName": "1.10-06",
            "algorithmNumber": 1,
            "algorithmVersion": 2,
            "baseLoad": 0,
            "deviceID": 0,
            "cableResistance": 4,
            "capacity": 620,
            "cells": 24,
            "chargerCurrent": 1,
            "chargerTemperature": 257,
            "chargerVoltage": 52106,
            "cycles26To50": 306,
            "cycles2To25": 311,
            "cycles51To80": 1403,
            "cycles81To90": 24,
            "cyclesAbove90": 0,
            "deviceStatus": [
              16,
              13,
              20,
              21
            ],
            "deviceTime": "2021-12-01T01:31:12Z",
            "eventLogCount": 47,
            "eventLogDate": "2020-02-10T01:48:59Z",
            "eventLogIndex": 47,
            "historyLogCount": 1734,
            "historyLogDate": "2021-11-30T02:59:55Z",
            "historyLogIndex": 2044,
            "instantLogCount": 0,
            "instantLogIndex": 0,
            "overVoltageCount": 0,
            "serialNumber": 61101352,
            "totalAcPowerConsumption": 47378179,
            "totalChargeAh": 774138,
            "totalChargeTime": 9350,
            "firmware": {
              "main": {
                "type": 0,
                "version": 1
              },
              "radio": {
                "type": 12,
                "version": 1
              }
            }
          }
        }
      },
      "ResponseGetStatusChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "acPowerConsumption": 1,
            "activeAlarms": [],
            "algorithmName": "1.10-06",
            "algorithmNumber": 1,
            "algorithmVersion": 2,
            "baseLoad": 0,
            "deviceID": 0,
            "cableResistance": 4,
            "capacity": 620,
            "cells": 24,
            "chargerCurrent": 1,
            "chargerTemperature": 257,
            "chargerVoltage": 52106,
            "cycles26To50": 306,
            "cycles2To25": 311,
            "cycles51To80": 1403,
            "cycles81To90": 24,
            "cyclesAbove90": 0,
            "deviceStatus": [
              16,
              13,
              20,
              21
            ],
            "deviceTime": "2021-12-01T01:31:12Z",
            "eventLogCount": 47,
            "eventLogDate": "2020-02-10T01:48:59Z",
            "eventLogIndex": 47,
            "historyLogCount": 1734,
            "historyLogDate": "2021-11-30T02:59:55Z",
            "historyLogIndex": 2044,
            "instantLogCount": 0,
            "instantLogIndex": 0,
            "overVoltageCount": 0,
            "serialNumber": 61101352,
            "totalAcPowerConsumption": 47378179,
            "totalChargeAh": 774138,
            "totalChargeTime": 9350,
            "firmwareType": 0,
            "firmwareVersion": 1,
            "firmwareTypeRadio": 12,
            "firmwareVersionRadio": 1
          }
        }
      },
      "statusChargerExample": {
        "value": {
          "timestamp": "2022-02-01T11:00:00+01:00",
          "acPowerConsumption": 1,
          "activeAlarms": [],
          "algorithmName": "1.10-06",
          "algorithmNumber": 1,
          "algorithmVersion": 2,
          "baseLoad": 0,
          "deviceID": 0,
          "cableResistance": 4,
          "capacity": 620,
          "cells": 24,
          "chargerCurrent": 1,
          "chargerTemperature": 257,
          "chargerVoltage": 52106,
          "cycles26To50": 306,
          "cycles2To25": 311,
          "cycles51To80": 1403,
          "cycles81To90": 24,
          "cyclesAbove90": 0,
          "deviceStatus": [
            16,
            13,
            20,
            21
          ],
          "deviceTime": 1638322272,
          "eventLogCount": 47,
          "eventLogDate": 1581299339,
          "eventLogIndex": 47,
          "historyLogCount": 1734,
          "historyLogDate": 1638241195,
          "historyLogIndex": 2044,
          "instantLogCount": 0,
          "instantLogIndex": 0,
          "overVoltageCount": 0,
          "serialNumber": 61101352,
          "totalAcPowerConsumption": 47378179,
          "totalChargeAh": 774138,
          "totalChargeTime": 9350,
          "firmware": {
            "main": {
              "type": 0,
              "version": 1
            },
            "radio": {
              "type": 12,
              "version": 1
            }
          }
        }
      },
      "ResponsePostStatusGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "timestamp": "2022-02-01T11:00:00+01:00",
            "device": {
              "activeAlarms": [],
              "buildCommit": "15997",
              "deviceStatus": [],
              "foundNodes": 5,
              "freeStorage": 3388,
              "qtVersion": "Qt 5.9.2 (32 bit)",
              "rootFsRelease": 16001,
              "serialNumber": 197689873231825,
              "sshActive": true
            },
            "firmware": {
              "main": {
                "type": 0,
                "version": 1
              },
              "radio": {
                "type": 0,
                "version": 1
              }
            },
            "network": {
              "ethernet": {
                "ethernetMac": "60:64:05:6D:97:BC"
              },
              "wireless": {
                "wirelessLinkQuality": 0,
                "wirelessMac": "C4:F3:12:62:E8:A2",
                "wirelessSignalStrength": -100
              }
            }
          }
        }
      },
      "ResponseGetStatusGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "activeAlarms": [],
            "buildCommit": "16321",
            "deviceStatus": [],
            "ethernetMac": "98:5D:AD:CD:FA:51",
            "firmwareType": 11618015,
            "firmwareVersion": 2,
            "foundNodes": 6,
            "freeStorage": 3374,
            "qtVersion": "Qt 5.9.2 (32 bit)",
            "rootFsRelease": 16325,
            "serialNumber": 267495,
            "sshActive": false,
            "wirelessLinkQuality": 100,
            "wirelessMac": "C4:F3:12:60:0F:70",
            "wirelessSignalStrength": -35
          }
        }
      },
      "statusGatewayExample": {
        "value": {
          "timestamp": "2022-02-01T11:00:00+01:00",
          "device": {
            "activeAlarms": [],
            "buildCommit": "15997",
            "deviceStatus": [],
            "foundNodes": 5,
            "freeStorage": 3388,
            "qtVersion": "Qt 5.9.2 (32 bit)",
            "rootFsRelease": 16001,
            "serialNumber": 197689873231825,
            "sshActive": true
          },
          "firmware": {
            "main": {
              "type": 0,
              "version": 1
            },
            "radio": {
              "type": 0,
              "version": 1
            }
          },
          "network": {
            "ethernet": {
              "ethernetMac": "60:64:05:6D:97:BC"
            },
            "wireless": {
              "wirelessLinkQuality": 0,
              "wirelessMac": "C4:F3:12:62:E8:A2",
              "wirelessSignalStrength": -100
            }
          }
        }
      },
      "ResponseConfigBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "Channel": 15,
            "NodeId": 52560,
            "PanId": 19047,
            "acidSensor": false,
            "ahAvailable": 1020000,
            "algorithmNumber": 8,
            "automaticCalibration": true,
            "baseLoad": 0,
            "batteryTag": "ECOTRUCK",
            "batteryType": 0,
            "bmuType": 1,
            "cableResistance": 0,
            "capacity": 680,
            "cellTap": 6,
            "cells": 18,
            "chargeEfficiency": 95,
            "chargeStateThreshold": 30,
            "cyclesAvailable": 1500,
            "deviceID": 180421615,
            "dischargeStateThreshold": 30,
            "equalizeFunction": 2,
            "equalizeParameter": 6,
            "everyDayUpdateHistoryLog": false,
            "fahrenheitScale": true,
            "highHistoryCurrentIdleLimit": true,
            "instantLogPeriod": 180,
            "securityCode1": 2451,
            "securityCode2": 3562,
            "stateOfChargeLow": 20,
            "temperatureMax": 51.6,
            "voltageBalanceLimit": 1.98,
            "wateringFunction": 2,
            "wateringParameter": 1
          }
        }
      },
      "ResponseConfigChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "Channel": 0,
            "NodeId": 0,
            "PanId": 1,
            "airPumpAlarmHigh": 0,
            "airPumpAlarmLow": 0,
            "airPumpVar": 0,
            "airPumpVar2": 0,
            "algorithmNumber": 27,
            "backlight_delay": 10,
            "baseLoad": 0,
            "batteryTemperatureDefault": 40.556000000000004,
            "batteryType": 0,
            "bbcFunction": 0,
            "bbcGroup": 0,
            "buttonF1Func": 1,
            "buttonF2Func": 0,
            "cableResistance": 0.002,
            "canBps": 2,
            "canMode": 1,
            "canNetworkControl": 0,
            "canNodeId": 1,
            "capacity": 850,
            "cecMode": false,
            "cells": 24,
            "chargingCurves": [],
            "chargingMode": 0,
            "chargingRestrictions": [],
            "chargingVoltageLimit": 0,
            "deviceID": 10891,
            "displayContrast": 60,
            "dplFunction": 0,
            "dplMode": false,
            "dplPowerLimitTotal": 0,
            "dplPriorityFactor": 1,
            "dplSacLimit_default": 50,
            "engineCode": 22,
            "equalizeFunction": 2,
            "equalizeParameter": 0,
            "equalizeVar2": 5,
            "extraChargeFunc": 0,
            "extraChargeVar": 0,
            "extraChargeVar2": 2,
            "extraChargeVar3": 0,
            "iDcLimit": 234,
            "instantLogPeriod": 0,
            "language": 2,
            "ledBrightnessDim": 25,
            "ledBrightnessMax": 80,
            "mainsCurrentLimit": 30,
            "mainsPowerLimit": 20000,
            "parallelControlFunc": 1,
            "pinInSelect": [],
            "pinOutSelect": [],
            "powerGroup": 0,
            "quietDerate": false,
            "radioMode": 1,
            "radioNetworkSettings": 0,
            "remoteInFunc": 0,
            "remoteOutAlarmVar": 0,
            "remoteOutBbcVar": 0,
            "remoteOutFunc": 0,
            "remoteOutPhaseVar": 0,
            "routing": 1,
            "securityCode1": 2451,
            "securityCode2": 3562,
            "timeDateFormat": 2,
            "timeRestriction": false,
            "userParamMode": false,
            "wateringFunction": 0,
            "wateringParameter": 0
          }
        }
      },
      "ResponsePostConfigGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "credential": {
              "cloudUrl": "https://cirrus-staging.attentec.se",
              "cloudUserName": "4744672091489853"
            },
            "device": {
              "deviceID": "464119357",
              "deviceName": "anpassningen-1",
              "securityCode2": "3562"
            },
            "interval": {
              "collectDataMinInterval": 3,
              "periodicUpdateInterval": 10000,
              "removeNodeInterval": 1440,
              "scanNetworkInterval": 60
            },
            "log": {
              "debugLog": true,
              "debugMpaLog": false
            },
            "network": {
              "can": {
                "canBitRate": 125000
              },
              "ethernet": {
                "ethernetAddress": "",
                "ethernetGateway": "",
                "ethernetNetmask": "",
                "ethernetStatic": false
              },
              "wireless": {
                "wirelessAddress": "",
                "wirelessNetmask": "",
                "wirelessSsid": "MP_WLAN"
              },
              "restriction": {
                "networkRestriction": "11:22",
                "nodeRestriction": ""
              }
            }
          }
        }
      },
      "ResponseGetConfigGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "canBitRate": 125000,
            "cloudUrl": "https://cirrus-staging.attentec.se",
            "cloudUserName": "4744672091489853",
            "collectDataMinInterval": 3,
            "debugLog": true,
            "debugMpaLog": false,
            "deviceID": 464119357,
            "deviceName": "anpassningen-1",
            "ethernetAddress": "",
            "ethernetGateway": "",
            "ethernetNetmask": "",
            "ethernetStatic": false,
            "networkRestriction": "11:22",
            "nodeRestriction": "",
            "periodicUpdateInterval": 10000,
            "removeNodeInterval": 1440,
            "scanNetworkInterval": 60,
            "securityCode2": 3562,
            "wirelessAddress": "",
            "wirelessNetmask": "",
            "wirelessSsid": "MP_WLAN"
          }
        }
      },
      "configGatewayExample": {
        "value": {
          "timestamp": "2022-02-01T11:00:00+01:00",
          "credential": {
            "cloudUrl": "https://cirrus-staging.attentec.se",
            "cloudUserName": "4744672091489853"
          },
          "device": {
            "deviceID": "464119357",
            "deviceName": "anpassningen-1",
            "securityCode2": "3562"
          },
          "interval": {
            "collectDataMinInterval": 3,
            "periodicUpdateInterval": 10000,
            "removeNodeInterval": 1440,
            "scanNetworkInterval": 60
          },
          "log": {
            "debugLog": true,
            "debugMpaLog": false
          },
          "network": {
            "can": {
              "canBitRate": 125000
            },
            "ethernet": {
              "ethernetAddress": "",
              "ethernetGateway": "",
              "ethernetNetmask": "",
              "ethernetStatic": false
            },
            "wireless": {
              "wirelessAddress": "",
              "wirelessNetmask": "",
              "wirelessSsid": "MP_WLAN"
            },
            "restriction": {
              "networkRestriction": "11:22",
              "nodeRestriction": ""
            }
          }
        }
      },
      "configChargerExample": {
        "value": {
          "Channel": 0,
          "NodeId": 0,
          "PanId": 1,
          "airPumpAlarmHigh": 0,
          "airPumpAlarmLow": 0,
          "airPumpVar": 0,
          "airPumpVar2": 0,
          "algorithmNumber": 27,
          "backlight_delay": 10,
          "baseLoad": 0,
          "batteryTemperatureDefault": 40.556000000000004,
          "batteryType": 0,
          "bbcFunction": 0,
          "bbcGroup": 0,
          "buttonF1Func": 1,
          "buttonF2Func": 0,
          "cableResistance": 0.002,
          "canBps": 2,
          "canMode": 1,
          "canNetworkControl": 0,
          "canNodeId": 1,
          "capacity": 850,
          "cecMode": false,
          "cells": 24,
          "chargingCurves": [],
          "chargingMode": 0,
          "chargingRestrictions": [],
          "chargingVoltageLimit": 0,
          "deviceID": 10891,
          "displayContrast": 60,
          "dplFunction": 0,
          "dplMode": false,
          "dplPowerLimitTotal": 0,
          "dplPriorityFactor": 1,
          "dplSacLimit_default": 50,
          "engineCode": 22,
          "equalizeFunction": 2,
          "equalizeParameter": 0,
          "equalizeVar2": 5,
          "extraChargeFunc": 0,
          "extraChargeVar": 0,
          "extraChargeVar2": 2,
          "extraChargeVar3": 0,
          "iDcLimit": 234,
          "instantLogPeriod": 0,
          "language": 2,
          "ledBrightnessDim": 25,
          "ledBrightnessMax": 80,
          "mainsCurrentLimit": 30,
          "mainsPowerLimit": 20000,
          "parallelControlFunc": 1,
          "pinInSelect": [],
          "pinOutSelect": [],
          "powerGroup": 0,
          "quietDerate": false,
          "radioMode": 1,
          "radioNetworkSettings": 0,
          "remoteInFunc": 0,
          "remoteOutAlarmVar": 0,
          "remoteOutBbcVar": 0,
          "remoteOutFunc": 0,
          "remoteOutPhaseVar": 0,
          "routing": 1,
          "securityCode1": 2451,
          "securityCode2": 3562,
          "timeDateFormat": 2,
          "timeRestriction": false,
          "userParamMode": false,
          "wateringFunction": 0,
          "wateringParameter": 0
        }
      },
      "configBMUExample": {
        "value": {
          "Channel": 15,
          "NodeId": 52560,
          "PanId": 19047,
          "acidSensor": false,
          "ahAvailable": 1020000,
          "algorithmNumber": 8,
          "automaticCalibration": true,
          "baseLoad": 0,
          "batteryTag": "ECOTRUCK",
          "batteryType": 0,
          "bmuType": 1,
          "cableResistance": 0,
          "capacity": 680,
          "cellTap": 6,
          "cells": 18,
          "chargeEfficiency": 95,
          "chargeStateThreshold": 30,
          "cyclesAvailable": 1500,
          "deviceID": 180421615,
          "dischargeStateThreshold": 30,
          "equalizeFunction": 2,
          "equalizeParameter": 6,
          "everyDayUpdateHistoryLog": false,
          "fahrenheitScale": true,
          "highHistoryCurrentIdleLimit": true,
          "instantLogPeriod": 180,
          "securityCode1": 2451,
          "securityCode2": 3562,
          "stateOfChargeLow": 20,
          "temperatureMax": 51.6,
          "voltageBalanceLimit": 1.98,
          "wateringFunction": 2,
          "wateringParameter": 1
        }
      },
      "historyBMUExample": {
        "value": {
          "fields": [
            "algorithmNumber",
            "algorithmName",
            "algorithmVersion",
            "cableResistance",
            "baseLoad",
            "actualCapacity",
            "cells",
            "dischargeBatteryTemperatureStart",
            "dischargeBatteryTemperatureEnd",
            "dischargeBatteryTemperatureMax",
            "dischargeBatteryTemperatureMin",
            "dischargeVpcStart",
            "dischargeVpcEnd",
            "dischargeAh",
            "dischargeWh",
            "dischargeCurrentMax",
            "dischargeVpcMin",
            "dischargeAhI25",
            "dischargeTimeI25",
            "dischargeAhI15",
            "dischargeTimeI15",
            "dischargeAhI0",
            "dischargeTimeI0",
            "dischargeRegeneratedAh",
            "dischargeRegeneratedWh",
            "dischargeStateOfChargeStart",
            "dischargeStateOfChargeEnd",
            "dischargeRegeneratingTime",
            "chargeTimeStart",
            "chargeTimeEnd",
            "chargeVpcStart",
            "chargeVpcEnd",
            "chargeBatteryTemperatureStart",
            "chargeBatteryTemperatureEnd",
            "chargeBatteryTemperatureMax",
            "chargeBatteryTemperatureMin",
            "chargeAh",
            "chargeWh",
            "chargeCurrentMax",
            "chargeVpcMax",
            "chargeAhI25",
            "chargeTimeI25",
            "chargeAhI15",
            "chargeTimeI15",
            "chargeAhI0",
            "chargeTimeI0",
            "chargeStateOfChargeStart",
            "chargeStateOfChargeEnd",
            "equalizeTime",
            "equalizeAh",
            "equalizeWh",
            "activeAlarms",
            "deviceStatus"
          ],
          "rows": [
            {
              "start": "2021-10-16T10:46:02Z",
              "end": "2021-10-17T20:57:08Z",
              "index": 1,
              "values": [
                0,
                "N/A",
                0,
                0,
                0,
                500,
                0,
                279,
                228,
                296,
                216,
                0,
                0,
                610,
                48416,
                650.7,
                0,
                442,
                6454,
                51,
                1863,
                117,
                72127,
                47,
                3839,
                100,
                0,
                2359,
                1634504228,
                1634533533,
                0,
                0,
                228,
                235,
                258,
                209,
                565,
                52048,
                1297,
                0,
                468,
                13018,
                66,
                2387,
                30,
                1932,
                0,
                100,
                0,
                0,
                0,
                [],
                [
                  1,
                  7
                ]
              ]
            },
            {
              "start": "2021-10-17T10:46:02Z",
              "end": "2021-10-18T20:57:08Z",
              "index": 1,
              "values": [
                0,
                "N/A",
                0,
                0,
                0,
                500,
                0,
                279,
                228,
                296,
                216,
                0,
                0,
                610,
                48416,
                650.7,
                0,
                442,
                6454,
                51,
                1863,
                117,
                72127,
                47,
                3839,
                100,
                0,
                2359,
                1634504228,
                1634533533,
                0,
                0,
                228,
                235,
                258,
                209,
                565,
                52048,
                1297,
                0,
                468,
                13018,
                66,
                2387,
                30,
                1932,
                0,
                100,
                0,
                0,
                0,
                [],
                [
                  1,
                  7
                ]
              ]
            }
          ]
        }
      },
      "historyChargerExample": {
        "value": {
          "fields": [
            "capacity",
            "cells",
            "dischargeVpcStart",
            "dischargeVpcEnd",
            "dischargeBatteryTemperatureStart",
            "dischargeBatteryTemperatureEnd",
            "dischargeBatteryTemperatureMax",
            "dischargeBatteryTemperatureMin",
            "dischargeAh",
            "dischargeWh",
            "dischargeCurrentMax",
            "dischargeVpcMin",
            "dischargeAhI25",
            "dischargeTimeI25",
            "dischargeAhI15",
            "dischargeTimeI15",
            "dischargeAhI0",
            "dischargeTimeI0",
            "dischargeRegeneratedAh",
            "dischargeRegeneratedWh",
            "dischargeStateOfChargeStart",
            "dischargeStateOfChargeEnd",
            "dischargeRegeneratingTime",
            "chargeTimeStart",
            "chargeTimeEnd",
            "chargeVpcStart",
            "chargeVpcEnd",
            "chargeBatteryTemperatureStart",
            "chargeBatteryTemperatureEnd",
            "chargeBatteryTemperatureMax",
            "chargeBatteryTemperatureMin",
            "chargeAh",
            "chargeWh",
            "chargeCurrentMax",
            "chargeVpcMax",
            "chargeAhI25",
            "chargeTimeI25",
            "chargeAhI15",
            "chargeTimeI15",
            "chargeAhI0",
            "chargeTimeI0",
            "chargeStateOfChargeStart",
            "chargeStateOfChargeEnd",
            "algorithmNumber",
            "algorithmName",
            "algorithmVersion",
            "cableResistance",
            "baseLoad",
            "equalizeTime",
            "equalizeAh",
            "equalizeWh",
            "activeAlarms",
            "deviceStatus",
            "dischargeTimeStart",
            "dischargeTimeEnd"
          ],
          "rows": [
            {
              "start": "2022-01-28T11:50:01",
              "end": "2022-01-28-T11:58:00",
              "index": 1,
              "values": [
                6800,
                18,
                2.39,
                1.89,
                26.38889,
                26.88889,
                27.777779,
                23,
                241,
                8684,
                5781,
                1.83,
                83,
                1372,
                61,
                1649,
                97,
                9270,
                1,
                46,
                89,
                50,
                247,
                1538512303,
                1538569647,
                189,
                218,
                26.88889,
                30.055555,
                35.38889,
                26.88889,
                510,
                21771,
                1709,
                2.56,
                55,
                1166,
                274,
                6397,
                180,
                15314,
                50,
                100,
                8,
                "N/A",
                1,
                0,
                0,
                0,
                0,
                0,
                [],
                [],
                1538140453,
                1538512303
              ]
            },
            {
              "start": "2022-01-29T11:50:01",
              "end": "2022-01-29-T11:58:00",
              "index": 1,
              "values": [
                6800,
                18,
                2.39,
                1.89,
                26.38889,
                26.88889,
                27.777779,
                23,
                241,
                8684,
                5781,
                1.83,
                83,
                1372,
                61,
                1649,
                97,
                9270,
                1,
                46,
                89,
                50,
                247,
                1538512303,
                1538569647,
                189,
                218,
                26.88889,
                30.055555,
                35.38889,
                26.88889,
                510,
                21771,
                1709,
                2.56,
                55,
                1166,
                274,
                6397,
                180,
                15314,
                50,
                100,
                8,
                "N/A",
                1,
                0,
                0,
                0,
                0,
                0,
                [],
                [],
                1538140453,
                1538512303
              ]
            }
          ]
        }
      },
      "ResponseHistoryBMUExample": {
        "value": {
          "status": "success",
          "fields": [
            "algorithmNumber",
            "algorithmName",
            "algorithmVersion",
            "cableResistance",
            "baseLoad",
            "actualCapacity",
            "cells",
            "dischargeBatteryTemperatureStart",
            "dischargeBatteryTemperatureEnd",
            "dischargeBatteryTemperatureMax",
            "dischargeBatteryTemperatureMin",
            "dischargeVpcStart",
            "dischargeVpcEnd",
            "dischargeAh",
            "dischargeWh",
            "dischargeCurrentMax",
            "dischargeVpcMin",
            "dischargeAhI25",
            "dischargeTimeI25",
            "dischargeAhI15",
            "dischargeTimeI15",
            "dischargeAhI0",
            "dischargeTimeI0",
            "dischargeRegeneratedAh",
            "dischargeRegeneratedWh",
            "dischargeStateOfChargeStart",
            "dischargeStateOfChargeEnd",
            "dischargeRegeneratingTime",
            "chargeTimeStart",
            "chargeTimeEnd",
            "chargeVpcStart",
            "chargeVpcEnd",
            "chargeBatteryTemperatureStart",
            "chargeBatteryTemperatureEnd",
            "chargeBatteryTemperatureMax",
            "chargeBatteryTemperatureMin",
            "chargeAh",
            "chargeWh",
            "chargeCurrentMax",
            "chargeVpcMax",
            "chargeAhI25",
            "chargeTimeI25",
            "chargeAhI15",
            "chargeTimeI15",
            "chargeAhI0",
            "chargeTimeI0",
            "chargeStateOfChargeStart",
            "chargeStateOfChargeEnd",
            "equalizeTime",
            "equalizeAh",
            "equalizeWh",
            "activeAlarms",
            "deviceStatus"
          ],
          "rows": [
            {
              "start": "2021-10-16T10:46:02Z",
              "end": "2021-10-17T20:57:08Z",
              "index": 1,
              "values": [
                0,
                "N/A",
                0,
                0,
                0,
                500,
                0,
                279,
                228,
                296,
                216,
                0,
                0,
                610,
                48416,
                650.7,
                0,
                442,
                6454,
                51,
                1863,
                117,
                72127,
                47,
                3839,
                100,
                0,
                2359,
                1634504228,
                1634533533,
                0,
                0,
                228,
                235,
                258,
                209,
                565,
                52048,
                1297,
                0,
                468,
                13018,
                66,
                2387,
                30,
                1932,
                0,
                100,
                0,
                0,
                0,
                [],
                [
                  1,
                  7
                ]
              ]
            },
            {
              "start": "2021-10-17T10:46:02Z",
              "end": "2021-10-18T20:57:08Z",
              "index": 1,
              "values": [
                0,
                "N/A",
                0,
                0,
                0,
                500,
                0,
                279,
                228,
                296,
                216,
                0,
                0,
                610,
                48416,
                650.7,
                0,
                442,
                6454,
                51,
                1863,
                117,
                72127,
                47,
                3839,
                100,
                0,
                2359,
                1634504228,
                1634533533,
                0,
                0,
                228,
                235,
                258,
                209,
                565,
                52048,
                1297,
                0,
                468,
                13018,
                66,
                2387,
                30,
                1932,
                0,
                100,
                0,
                0,
                0,
                [],
                [
                  1,
                  7
                ]
              ]
            }
          ]
        }
      },
      "ResponseHistoryChargerExample": {
        "value": {
          "status": "success",
          "fields": [
            "capacity",
            "cells",
            "dischargeVpcStart",
            "dischargeVpcEnd",
            "dischargeBatteryTemperatureStart",
            "dischargeBatteryTemperatureEnd",
            "dischargeBatteryTemperatureMax",
            "dischargeBatteryTemperatureMin",
            "dischargeAh",
            "dischargeWh",
            "dischargeCurrentMax",
            "dischargeVpcMin",
            "dischargeAhI25",
            "dischargeTimeI25",
            "dischargeAhI15",
            "dischargeTimeI15",
            "dischargeAhI0",
            "dischargeTimeI0",
            "dischargeRegeneratedAh",
            "dischargeRegeneratedWh",
            "dischargeStateOfChargeStart",
            "dischargeStateOfChargeEnd",
            "dischargeRegeneratingTime",
            "chargeTimeStart",
            "chargeTimeEnd",
            "chargeVpcStart",
            "chargeVpcEnd",
            "chargeBatteryTemperatureStart",
            "chargeBatteryTemperatureEnd",
            "chargeBatteryTemperatureMax",
            "chargeBatteryTemperatureMin",
            "chargeAh",
            "chargeWh",
            "chargeCurrentMax",
            "chargeVpcMax",
            "chargeAhI25",
            "chargeTimeI25",
            "chargeAhI15",
            "chargeTimeI15",
            "chargeAhI0",
            "chargeTimeI0",
            "chargeStateOfChargeStart",
            "chargeStateOfChargeEnd",
            "algorithmNumber",
            "algorithmName",
            "algorithmVersion",
            "cableResistance",
            "baseLoad",
            "equalizeTime",
            "equalizeAh",
            "equalizeWh",
            "activeAlarms",
            "deviceStatus",
            "dischargeTimeStart",
            "dischargeTimeEnd"
          ],
          "rows": [
            {
              "start": "2022-01-28T11:50:01",
              "end": "2022-01-28-T11:58:00",
              "index": 1,
              "values": [
                6800,
                18,
                2.39,
                1.89,
                26.38889,
                26.88889,
                27.777779,
                23,
                241,
                8684,
                5781,
                1.83,
                83,
                1372,
                61,
                1649,
                97,
                9270,
                1,
                46,
                89,
                50,
                247,
                1538512303,
                1538569647,
                189,
                218,
                26.88889,
                30.055555,
                35.38889,
                26.88889,
                510,
                21771,
                1709,
                2.56,
                55,
                1166,
                274,
                6397,
                180,
                15314,
                50,
                100,
                8,
                "N/A",
                1,
                0,
                0,
                0,
                0,
                0,
                [],
                [],
                1538140453,
                1538512303
              ]
            },
            {
              "start": "2022-01-29T11:50:01",
              "end": "2022-01-29-T11:58:00",
              "index": 1,
              "values": [
                6800,
                18,
                2.39,
                1.89,
                26.38889,
                26.88889,
                27.777779,
                23,
                241,
                8684,
                5781,
                1.83,
                83,
                1372,
                61,
                1649,
                97,
                9270,
                1,
                46,
                89,
                50,
                247,
                1538512303,
                1538569647,
                189,
                218,
                26.88889,
                30.055555,
                35.38889,
                26.88889,
                510,
                21771,
                1709,
                2.56,
                55,
                1166,
                274,
                6397,
                180,
                15314,
                50,
                100,
                8,
                "N/A",
                1,
                0,
                0,
                0,
                0,
                0,
                [],
                [],
                1538140453,
                1538512303
              ]
            }
          ]
        }
      },
      "AlarmSolvedInADayExample": {
        "value": {
          "events": [
            {
              "index": 1,
              "time": 10000,
              "eventType": 0,
              "values": {
                "code": 105,
                "active": true
              }
            },
            {
              "index": 2,
              "time": 10005,
              "eventType": 0,
              "values": {
                "code": 105,
                "active": false
              }
            }
          ]
        }
      },
      "ResponseAlarmSolvedInADayExample": {
        "value": {
          "status": "success",
          "events": [
            {
              "index": 1,
              "time": 10000,
              "eventType": 0,
              "values": {
                "code": 105,
                "active": true
              }
            },
            {
              "index": 2,
              "time": 10005,
              "eventType": 0,
              "values": {
                "code": 105,
                "active": false
              }
            }
          ]
        }
      },
      "BaseloadChangedExample": {
        "value": {
          "events": [
            {
              "index": 3,
              "time": 10000,
              "eventType": 2,
              "values": {
                "index": 5,
                "oldValue": 12,
                "newValue": 13
              }
            }
          ]
        }
      },
      "ResponseBaseloadChangedExample": {
        "value": {
          "status": "success",
          "events": [
            {
              "index": 3,
              "time": 10000,
              "eventType": 2,
              "values": {
                "index": 24,
                "oldValue": 24,
                "newValue": 26
              }
            }
          ]
        }
      },
      "ElectrolyteCalibratedAndFirmwareStartupExample": {
        "value": {
          "events": [
            {
              "index": 4,
              "time": 10000,
              "eventType": 4,
              "values": {
                "type": "electrolyte",
                "oldSlope": 34.3,
                "newSlope": 35.6
              }
            },
            {
              "index": 5,
              "time": 10000,
              "eventType": 1,
              "values": {
                "firmware": {
                  "main": {
                    "type": 1337,
                    "version": 42
                  },
                  "radio": {
                    "type": 1337,
                    "version": 42
                  }
                }
              }
            }
          ]
        }
      },
      "ResponseElectrolyteCalibratedAndFirmwareStartupExample": {
        "value": {
          "status": "success",
          "events": [
            {
              "index": 4,
              "time": 10000,
              "eventType": 4,
              "values": {
                "type": "electrolyte",
                "oldSlope": 34.3,
                "newSlope": 35.6
              }
            },
            {
              "index": 5,
              "time": 10000,
              "eventType": 1,
              "values": {
                "firmware": {
                  "main": {
                    "type": 1337,
                    "version": 42
                  },
                  "radio": {
                    "type": 1337,
                    "version": 42
                  }
                }
              }
            }
          ]
        }
      },
      "InstantChargerExample": {
        "value": {
          "fields": [
            "currentAverage",
            "currentMin",
            "currentMax"
          ],
          "rows": [
            {
              "time": 10000,
              "index": 1,
              "instantLogPeriod": 690,
              "values": [
                19421,
                253.9,
                67190
              ]
            },
            {
              "time": 10001,
              "index": 2,
              "instantLogPeriod": 180,
              "values": [
                19421,
                253.9,
                67190
              ]
            }
          ]
        }
      },
      "ResponseInstantChargerExample": {
        "value": {
          "status": "success",
          "fields": [
            "currentAverage",
            "currentMin",
            "currentMax"
          ],
          "rows": [
            {
              "time": 10000,
              "index": 1,
              "instantLogPeriod": 690,
              "values": [
                19421,
                253.9,
                67190
              ]
            },
            {
              "time": 10001,
              "index": 2,
              "instantLogPeriod": 180,
              "values": [
                19421,
                253.9,
                67190
              ]
            }
          ]
        }
      },
      "InstantBMUExample": {
        "value": {
          "fields": [
            "currentAverage",
            "currentMax",
            "currentMin",
            "voltageAverage",
            "voltageMin",
            "voltageMax",
            "temperatureAverage",
            "temperatureMin",
            "temperatureMax",
            "middleVoltageAverage",
            "stateOfCharge"
          ],
          "rows": [
            {
              "time": 10000,
              "index": 1,
              "instantLogPeriod": 180,
              "values": [
                3991,
                -8082,
                -22822,
                2421,
                2280,
                2574,
                23,
                23,
                23,
                1208,
                72
              ]
            },
            {
              "time": 10001,
              "index": 2,
              "instantLogPeriod": 180,
              "values": [
                3991,
                -8082,
                -22822,
                2421,
                2280,
                2574,
                23,
                23,
                23,
                1208,
                72
              ]
            }
          ]
        }
      },
      "ResponseInstantBMUExample": {
        "value": {
          "status": "success",
          "fields": [
            "currentAverage",
            "currentMax",
            "currentMin",
            "voltageAverage",
            "voltageMin",
            "voltageMax",
            "temperatureAverage",
            "temperatureMin",
            "temperatureMax",
            "middleVoltageAverage",
            "stateOfCharge"
          ],
          "rows": [
            {
              "time": 10000,
              "index": 1,
              "instantLogPeriod": 180,
              "values": [
                3991,
                -8082,
                -22822,
                2421,
                2280,
                2574,
                23,
                23,
                23,
                1208,
                72
              ]
            },
            {
              "time": 10001,
              "index": 2,
              "instantLogPeriod": 180,
              "values": [
                3991,
                -8082,
                -22822,
                2421,
                2280,
                2574,
                23,
                23,
                23,
                1208,
                72
              ]
            }
          ]
        }
      }
    },
    "schemas": {
      "ResponsePostConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "credential": {
                "type": "object",
                "properties": {
                  "cloudUrl": {
                    "type": "string",
                    "description": "The cloud URL"
                  },
                  "cloudUserName": {
                    "type": "string",
                    "description": "The cloud name"
                  }
                }
              },
              "device": {
                "type": "object",
                "properties": {
                  "deviceID": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Device numerical identification, configurable"
                  },
                  "deviceName": {
                    "type": "string",
                    "description": "The name of the device"
                  },
                  "securityCode2": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Security code for second level security"
                  }
                }
              },
              "interval": {
                "type": "object",
                "properties": {
                  "scanNetworkInterval": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The scan for nodes interval"
                  },
                  "collectDataMinInterval": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The collect data minimum interval"
                  },
                  "collectDataMaxInterval": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The collect data maximum interval"
                  },
                  "periodicUpdateInterval": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The periodic update interval"
                  },
                  "removeNodeInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The interval for removing nodes"
                  }
                }
              },
              "log": {
                "type": "object",
                "properties": {
                  "debugLog": {
                    "type": "boolean",
                    "description": "If the debug logs is active"
                  },
                  "debugMpaLog": {
                    "type": "boolean",
                    "description": "If the Micropower ACCESS debug logs is active"
                  }
                }
              },
              "network": {
                "type": "object",
                "properties": {
                  "can": {
                    "type": "object",
                    "properties": {
                      "canBitRate": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "CAN bus speed in bits per second"
                      }
                    }
                  },
                  "ethernet": {
                    "type": "object",
                    "properties": {
                      "ethernetAddress": {
                        "type": "string",
                        "description": "The assigned Ethernet IP address"
                      },
                      "ethernetStatic": {
                        "type": "boolean",
                        "description": "If the Ethernet IP address is static"
                      },
                      "ethernetNetmask": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The assigned Ethernet netmask"
                      },
                      "ethernetGateway": {
                        "type": "string",
                        "description": "Assigned IP address of the ethernet gateway"
                      }
                    }
                  },
                  "wireless": {
                    "type": "object",
                    "properties": {
                      "wirelessAddress": {
                        "type": "string",
                        "description": "The wireless IP address"
                      },
                      "wirelessNetmask": {
                        "type": "string",
                        "description": "The wireless netmask"
                      },
                      "wirelessSsid": {
                        "type": "string",
                        "description": "The wireless SSID"
                      },
                      "wirelessPassword": {
                        "type": "string",
                        "description": "The wireless password"
                      }
                    }
                  }
                }
              },
              "restriction": {
                "type": "object",
                "properties": {
                  "networkRestriction": {
                    "type": "string",
                    "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all"
                  },
                  "nodeRestriction": {
                    "type": "string",
                    "description": "The node restrictions, the node to be focused on, \"\" if all"
                  }
                }
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseGetConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "deviceName": {
                "type": "string",
                "description": "The name of the device"
              },
              "cloudUrl": {
                "type": "string",
                "description": "The cloud URL"
              },
              "cloudUserName": {
                "type": "string",
                "description": "The cloud name"
              },
              "cloudPassword": {
                "type": "string",
                "description": "The cloud password"
              },
              "scanNetworkInterval": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The scan for nodes interval"
              },
              "collectDataMinInterval": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data minimum interval"
              },
              "collectDataMaxInterval": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data maximum interval"
              },
              "periodicUpdateInterval": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The periodic update interval"
              },
              "debugLog": {
                "type": "boolean",
                "description": "If the debug logs is active"
              },
              "debugMpaLog": {
                "type": "boolean",
                "description": "If the Micropower ACCESS debug logs is active"
              },
              "ethernetAddress": {
                "type": "string",
                "description": "The assigned Ethernet IP address"
              },
              "ethernetStatic": {
                "type": "boolean",
                "description": "If the Ethernet IP address is static"
              },
              "ethernetNetmask": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The assigned Ethernet netmask"
              },
              "securityCode2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security"
              },
              "ethernetGateway": {
                "type": "string",
                "description": "Assigned IP address of the ethernet gateway"
              },
              "wirelessAddress": {
                "type": "string",
                "description": "The wireless IP address"
              },
              "wirelessNetmask": {
                "type": "string",
                "description": "The wireless netmask"
              },
              "wirelessSsid": {
                "type": "string",
                "description": "The wireless SSID"
              },
              "wirelessPassword": {
                "type": "string",
                "description": "The wireless password"
              },
              "removeNodeInterval": {
                "type": "integer",
                "format": "int32",
                "description": "The interval for removing nodes"
              },
              "networkRestriction": {
                "type": "string",
                "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all"
              },
              "nodeRestriction": {
                "type": "string",
                "description": "The node restrictions, the node to be focused on, \"\" if all"
              },
              "canBitRate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "CAN bus speed in bits per second"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "deviceName": {
            "type": "string",
            "description": "The name of the device"
          },
          "cloudUrl": {
            "type": "string",
            "description": "The cloud URL"
          },
          "cloudUserName": {
            "type": "string",
            "description": "The cloud name"
          },
          "cloudPassword": {
            "type": "string",
            "description": "The cloud password"
          },
          "scanNetworkInterval": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The scan for nodes interval"
          },
          "collectDataMinInterval": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The collect data minimum interval"
          },
          "collectDataMaxInterval": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The collect data maximum interval"
          },
          "periodicUpdateInterval": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The periodic update interval"
          },
          "debugLog": {
            "type": "boolean",
            "description": "If the debug logs is active"
          },
          "debugMpaLog": {
            "type": "boolean",
            "description": "If the Micropower ACCESS debug logs is active"
          },
          "ethernetAddress": {
            "type": "string",
            "description": "The assigned Ethernet IP address"
          },
          "ethernetStatic": {
            "type": "boolean",
            "description": "If the Ethernet IP address is static"
          },
          "ethernetNetmask": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The assigned Ethernet netmask"
          },
          "securityCode2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security"
          },
          "ethernetGateway": {
            "type": "string",
            "description": "Assigned IP address of the ethernet gateway"
          },
          "wirelessAddress": {
            "type": "string",
            "description": "The wireless IP address"
          },
          "wirelessNetmask": {
            "type": "string",
            "description": "The wireless netmask"
          },
          "wirelessSsid": {
            "type": "string",
            "description": "The wireless SSID"
          },
          "wirelessPassword": {
            "type": "string",
            "description": "The wireless password"
          },
          "removeNodeInterval": {
            "type": "integer",
            "format": "int32",
            "description": "The interval for removing nodes"
          },
          "networkRestriction": {
            "type": "string",
            "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "nodeRestriction": {
            "type": "string",
            "description": "The node restrictions, the node to be focused on, \"\" if all"
          },
          "canBitRate": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "CAN bus speed in bits per second"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseConfigChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "chargingMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "The mode that charger will use to charge the battery"
              },
              "securityCode1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for first level security"
              },
              "securityCode2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security"
              },
              "batteryType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Type of battery"
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "powerGroup": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Power group"
              },
              "mainsCurrentLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Mains current limit"
              },
              "mainsPowerLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Mains power limit"
              },
              "chargingVoltageLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Charging voltage limit (mV)"
              },
              "displayContrast": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Display contrast (%)"
              },
              "ledBrightnessMax": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Led brightness max (%)"
              },
              "ledBrightnessDim": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Led brightness dim (%)"
              },
              "language": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Menu language"
              },
              "timeDateFormat": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Time and date format"
              },
              "buttonF1Func": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "F1 function"
              },
              "buttonF2Func": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "F2 function"
              },
              "remoteInFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Remote in function"
              },
              "remoteOutFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 8,
                "exclusiveMaximum": true,
                "description": "Remote out function"
              },
              "remoteOutAlarmVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Remote out alarm variable (not used)"
              },
              "remoteOutPhaseVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 5,
                "exclusiveMaximum": true,
                "description": "Remote out phase variable"
              },
              "airPumpVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Airpump ON time"
              },
              "airPumpVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Airpump Cycle time"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "parallelControlFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Parallell control function"
              },
              "dplMode": {
                "type": "boolean",
                "description": "DPL function activation"
              },
              "canBps": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "CAN bit rate"
              },
              "dplPowerLimitTotal": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total allowed power consumption Sac(VA) for a DPL group"
              },
              "dplFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "DPL function"
              },
              "dplPriorityFactor": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Charger priority in a DPL group"
              },
              "dplSacLimit_default": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Slave charger default power limit (no master connection)"
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "canMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "CAN function"
              },
              "canNetworkControl": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Not used"
              },
              "radioMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Radio function"
              },
              "radioNetworkSettings": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Radio network settings"
              },
              "backlight_delay": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 10,
                "exclusiveMaximum": true,
                "description": "Backlight time (min)"
              },
              "extraChargeFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Extracharge function"
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "extraChargeVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Extracharge, day"
              },
              "extraChargeVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 23,
                "exclusiveMaximum": true,
                "description": "Extracharge, hour"
              },
              "extraChargeVar3": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 59,
                "exclusiveMaximum": true,
                "description": "Extracharge, minute"
              },
              "airPumpAlarmLow": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "AirPumpAlarmLow"
              },
              "airPumpAlarmHigh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "AirPumpAlarmHigh"
              },
              "canNodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "exclusiveMinimum": true,
                "maximum": 127,
                "exclusiveMaximum": true,
                "description": "CAN Node ID"
              },
              "pinOutSelect": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "array[8] of Selection for Extra outputs"
              },
              "pinInSelect": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "array[8] of Selection for Extra inputs."
              },
              "cecMode": {
                "type": "boolean",
                "description": "California Energy Comission mode active"
              },
              "userParamMode": {
                "type": "boolean",
                "description": "User param function"
              },
              "quietDerate": {
                "type": "boolean",
                "description": "Quiet derate function"
              },
              "batteryTemperatureDefault": {
                "type": "number",
                "description": "Default battery temperature to be used when no real battery temperature is measured"
              },
              "equalizeFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "Setting for the equalize function"
              },
              "equalizeParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter 1 for the equalize function"
              },
              "wateringFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 3,
                "exclusiveMaximum": true,
                "description": "Setting for the watering function"
              },
              "wateringParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter for the watering function"
              },
              "bbcGroup": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "The BBC group"
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "NodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65280,
                "exclusiveMaximum": true,
                "description": "The Access radio node address"
              },
              "curveParamsFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "0 = Off, 1= On"
              },
              "bbcFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "BBC function"
              },
              "equalizeVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Parameter 2 for the equalize function"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "chargingCurves": {
                "type": "string",
                "description": "A list of all available charging curves in the charger"
              },
              "timeRestriction": {
                "type": "boolean",
                "description": "If time restrictions shall be enabled"
              },
              "chargingRestrictions": {
                "type": "string",
                "description": "A list of all charging restrictions, limited to 3 charging restrictions per day"
              },
              "routing": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Use radio routing"
              },
              "remoteOutBbcVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Remote out, relay active criteria for BBC"
              },
              "engineCode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Configuration for selected engine code, from a list of engines"
              },
              "iDcLimit": {
                "type": "number",
                "description": "Charger rated nominal current."
              }
            },
            "required": [
              "timestamp"
            ]
          }
        }
      },
      "ConfigChargerSchema": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "chargingMode": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "The mode that charger will use to charge the battery"
          },
          "securityCode1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for first level security"
          },
          "securityCode2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security"
          },
          "batteryType": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Type of battery"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "powerGroup": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Power group"
          },
          "mainsCurrentLimit": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Mains current limit"
          },
          "mainsPowerLimit": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Mains power limit"
          },
          "chargingVoltageLimit": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Charging voltage limit (mV)"
          },
          "displayContrast": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Display contrast (%)"
          },
          "ledBrightnessMax": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Led brightness max (%)"
          },
          "ledBrightnessDim": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Led brightness dim (%)"
          },
          "language": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Menu language"
          },
          "timeDateFormat": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Time and date format"
          },
          "buttonF1Func": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "F1 function"
          },
          "buttonF2Func": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "F2 function"
          },
          "remoteInFunc": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Remote in function"
          },
          "remoteOutFunc": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 8,
            "exclusiveMaximum": true,
            "description": "Remote out function"
          },
          "remoteOutAlarmVar": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Remote out alarm variable (not used)"
          },
          "remoteOutPhaseVar": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 5,
            "exclusiveMaximum": true,
            "description": "Remote out phase variable"
          },
          "airPumpVar": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Airpump ON time"
          },
          "airPumpVar2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Airpump Cycle time"
          },
          "baseLoad": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging."
          },
          "parallelControlFunc": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Parallell control function"
          },
          "dplMode": {
            "type": "boolean",
            "description": "DPL function activation"
          },
          "canBps": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "CAN bit rate"
          },
          "dplPowerLimitTotal": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total allowed power consumption Sac(VA) for a DPL group"
          },
          "dplFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "DPL function"
          },
          "dplPriorityFactor": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Charger priority in a DPL group"
          },
          "dplSacLimit_default": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Slave charger default power limit (no master connection)"
          },
          "cableResistance": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery."
          },
          "canMode": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "CAN function"
          },
          "canNetworkControl": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Not used"
          },
          "radioMode": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Radio function"
          },
          "radioNetworkSettings": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Radio network settings"
          },
          "backlight_delay": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 10,
            "exclusiveMaximum": true,
            "description": "Backlight time (min)"
          },
          "extraChargeFunc": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Extracharge function"
          },
          "algorithmNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier."
          },
          "extraChargeVar": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Extracharge, day"
          },
          "extraChargeVar2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 23,
            "exclusiveMaximum": true,
            "description": "Extracharge, hour"
          },
          "extraChargeVar3": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 59,
            "exclusiveMaximum": true,
            "description": "Extracharge, minute"
          },
          "airPumpAlarmLow": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "AirPumpAlarmLow"
          },
          "airPumpAlarmHigh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "AirPumpAlarmHigh"
          },
          "canNodeId": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": true,
            "maximum": 127,
            "exclusiveMaximum": true,
            "description": "CAN Node ID"
          },
          "pinOutSelect": {
            "type": "string",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "array[8] of Selection for Extra outputs"
          },
          "pinInSelect": {
            "type": "string",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "array[8] of Selection for Extra inputs."
          },
          "cecMode": {
            "type": "boolean",
            "description": "California Energy Comission mode active"
          },
          "userParamMode": {
            "type": "boolean",
            "description": "User param function"
          },
          "quietDerate": {
            "type": "boolean",
            "description": "Quiet derate function"
          },
          "batteryTemperatureDefault": {
            "type": "number",
            "description": "Default battery temperature to be used when no real battery temperature is measured"
          },
          "equalizeFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "Setting for the equalize function"
          },
          "equalizeParameter": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter 1 for the equalize function"
          },
          "wateringFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 3,
            "exclusiveMaximum": true,
            "description": "Setting for the watering function"
          },
          "wateringParameter": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter for the watering function"
          },
          "bbcGroup": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "The BBC group"
          },
          "PanId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID"
          },
          "Channel": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel"
          },
          "NodeId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65280,
            "exclusiveMaximum": true,
            "description": "The Access radio node address"
          },
          "curveParamsFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "0 = Off, 1= On"
          },
          "bbcFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "BBC function"
          },
          "equalizeVar2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Parameter 2 for the equalize function"
          },
          "cells": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery"
          },
          "capacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery"
          },
          "chargingCurves": {
            "type": "string",
            "description": "A list of all available charging curves in the charger"
          },
          "timeRestriction": {
            "type": "boolean",
            "description": "If time restrictions shall be enabled"
          },
          "chargingRestrictions": {
            "type": "string",
            "description": "A list of all charging restrictions, limited to 3 charging restrictions per day"
          },
          "routing": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Use radio routing"
          },
          "remoteOutBbcVar": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Remote out, relay active criteria for BBC"
          },
          "engineCode": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Configuration for selected engine code, from a list of engines"
          },
          "iDcLimit": {
            "type": "number",
            "description": "Charger rated nominal current."
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseConfigBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "everyDayUpdateHistoryLog": {
                "type": "boolean",
                "description": "Function for writing a history log once each midnight"
              },
              "highHistoryCurrentIdleLimit": {
                "type": "boolean",
                "description": "Setting for current idle limit in history log"
              },
              "temperatureMax": {
                "type": "number",
                "minimum": -3658.611,
                "exclusiveMinimum": true,
                "maximum": 3623.056,
                "exclusiveMaximum": true,
                "description": "The maximum battery temperature"
              },
              "dischargeStateThreshold": {
                "type": "string",
                "description": "Time before entering discharge state"
              },
              "chargeStateThreshold": {
                "type": "string",
                "description": "Time before entering charge state"
              },
              "chargeEfficiency": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Charger efficiency"
              },
              "securityCode1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for first level security"
              },
              "securityCode2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security"
              },
              "batteryType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Type of battery"
              },
              "stateOfChargeLow": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Threshold for low state of charge level"
              },
              "fahrenheitScale": {
                "type": "boolean",
                "description": "Setting for selecting between Celsius or Fahrenheit scaling"
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "cellTap": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Battery middle cell"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "voltageBalanceLimit": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Limit for voltage balance calculation"
              },
              "acidSensor": {
                "type": "boolean",
                "description": "Setting selecting if an acid sensor is available"
              },
              "automaticCalibration": {
                "type": "boolean",
                "description": "Setting selecting if automatic calibration shall be done"
              },
              "batteryTag": {
                "type": "string",
                "description": "Battery alphanumerical description"
              },
              "equalizeFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "Setting for the equalize function"
              },
              "equalizeParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter 1 for the equalize function"
              },
              "wateringFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 3,
                "exclusiveMaximum": true,
                "description": "Setting for the watering function"
              },
              "AhUsed": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Discharged Ah before installation"
              },
              "wateringParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter for the watering function"
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "NodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65280,
                "exclusiveMaximum": true,
                "description": "The Access radio node address"
              },
              "bmuType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "The type of BMU model"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "cyclesAvailable": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charging cycles for battery life time"
              },
              "ahAvailable": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total Ah available for the life time of the battery (0.8 * capacity * cyclesAvailable)"
              }
            }
          }
        },
        "required": [
          "data",
          "status"
        ]
      },
      "ConfigBMUSchema": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "everyDayUpdateHistoryLog": {
            "type": "boolean",
            "description": "Function for writing a history log once each midnight"
          },
          "highHistoryCurrentIdleLimit": {
            "type": "boolean",
            "description": "Setting for current idle limit in history log"
          },
          "temperatureMax": {
            "type": "number",
            "minimum": -3658.611,
            "exclusiveMinimum": true,
            "maximum": 3623.056,
            "exclusiveMaximum": true,
            "description": "The maximum battery temperature"
          },
          "dischargeStateThreshold": {
            "type": "string",
            "description": "Time before entering discharge state"
          },
          "chargeStateThreshold": {
            "type": "string",
            "description": "Time before entering charge state"
          },
          "chargeEfficiency": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Charger efficiency"
          },
          "securityCode1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for first level security"
          },
          "securityCode2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security"
          },
          "batteryType": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Type of battery"
          },
          "stateOfChargeLow": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Threshold for low state of charge level"
          },
          "fahrenheitScale": {
            "type": "boolean",
            "description": "Setting for selecting between Celsius or Fahrenheit scaling"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "cellTap": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Battery middle cell"
          },
          "baseLoad": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging."
          },
          "cableResistance": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery."
          },
          "algorithmNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier."
          },
          "voltageBalanceLimit": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Limit for voltage balance calculation"
          },
          "acidSensor": {
            "type": "boolean",
            "description": "Setting selecting if an acid sensor is available"
          },
          "automaticCalibration": {
            "type": "boolean",
            "description": "Setting selecting if automatic calibration shall be done"
          },
          "batteryTag": {
            "type": "string",
            "description": "Battery alphanumerical description"
          },
          "equalizeFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "Setting for the equalize function"
          },
          "equalizeParameter": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter 1 for the equalize function"
          },
          "wateringFunction": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 3,
            "exclusiveMaximum": true,
            "description": "Setting for the watering function"
          },
          "AhUsed": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Discharged Ah before installation"
          },
          "wateringParameter": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter for the watering function"
          },
          "PanId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID"
          },
          "Channel": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel"
          },
          "NodeId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65280,
            "exclusiveMaximum": true,
            "description": "The Access radio node address"
          },
          "bmuType": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "The type of BMU model"
          },
          "cells": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery"
          },
          "capacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery"
          },
          "cyclesAvailable": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of charging cycles for battery life time"
          },
          "ahAvailable": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The total Ah available for the life time of the battery (0.8 * capacity * cyclesAvailable)"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "StatusGatewaySchema": {
        "type": "object",
        "properties": {
          "device": {
            "type": "object",
            "properties": {
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "buildCommit": {
                "type": "string",
                "description": "The commit number of the firmware or software build"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "foundNodes": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The amount of found nodes"
              },
              "freeStorage": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The free storage space"
              },
              "qtVersion": {
                "type": "string",
                "description": "The version of the Qt framework"
              },
              "rootFsRelease": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Root filesystem release"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number"
              },
              "sshActive": {
                "type": "boolean",
                "description": "If the SSH port is active"
              }
            }
          },
          "firmware": {
            "type": "object",
            "properties": {
              "main": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "type",
                  "version"
                ]
              },
              "radio": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "type",
                  "version"
                ]
              }
            },
            "required": [
              "main"
            ]
          },
          "network": {
            "type": "object",
            "properties": {
              "ethernet": {
                "type": "object",
                "properties": {
                  "ethernetMac": {
                    "type": "string",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The Ethernet MAC address"
                  }
                }
              },
              "wireless": {
                "type": "object",
                "properties": {
                  "wirelessMac": {
                    "type": "string",
                    "description": "The wireless MAC address"
                  },
                  "wirelessSignalStrength": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": -100,
                    "exclusiveMinimum": true,
                    "maximum": 0,
                    "exclusiveMaximum": true,
                    "description": "The strength of the wireless interface"
                  },
                  "wirelessLinkQuality": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 100,
                    "exclusiveMaximum": true,
                    "description": "The quality of the wireless interface"
                  }
                }
              }
            }
          },
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "deviceTime": {
            "type": "string",
            "description": "The current device time in POSIX format"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponsePostStatusGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "device": {
                "type": "object",
                "properties": {
                  "activeAlarms": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "maximum": 116,
                      "exclusiveMaximum": true
                    },
                    "description": "Array of active alarm codes"
                  },
                  "buildCommit": {
                    "type": "string",
                    "description": "The commit number of the firmware or software build"
                  },
                  "deviceStatus": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "minimum": 1,
                      "exclusiveMinimum": true,
                      "maximum": 50,
                      "exclusiveMaximum": true
                    },
                    "description": "Array of device status"
                  },
                  "foundNodes": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The amount of found nodes"
                  },
                  "freeStorage": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The free storage space"
                  },
                  "qtVersion": {
                    "type": "string",
                    "description": "The version of the Qt framework"
                  },
                  "rootFsRelease": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "Root filesystem release"
                  },
                  "serialNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique device serial number"
                  },
                  "sshActive": {
                    "type": "boolean",
                    "description": "If the SSH port is active"
                  }
                }
              },
              "firmware": {
                "type": "object",
                "properties": {
                  "firmwareType": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "firmwareVersion": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "firmwareType",
                  "firmwareVersion"
                ]
              },
              "network": {
                "type": "object",
                "properties": {
                  "ethernet": {
                    "type": "object",
                    "properties": {
                      "ethernetMac": {
                        "type": "string",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The Ethernet MAC address"
                      }
                    }
                  },
                  "wireless": {
                    "type": "object",
                    "properties": {
                      "wirelessMac": {
                        "type": "string",
                        "description": "The wireless MAC address"
                      },
                      "wirelessSignalStrength": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": -100,
                        "exclusiveMinimum": true,
                        "maximum": 0,
                        "exclusiveMaximum": true,
                        "description": "The strength of the wireless interface"
                      },
                      "wirelessLinkQuality": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "maximum": 100,
                        "exclusiveMaximum": true,
                        "description": "The quality of the wireless interface"
                      }
                    }
                  }
                }
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time in POSIX format"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseGetStatusGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "mui": {
                "type": "string",
                "description": "mui is the device's identifier, which could be either a MAC or an MUI."
              },
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "buildCommit": {
                "type": "string",
                "description": "The commit number of the firmware or software build"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "foundNodes": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The amount of found nodes"
              },
              "freeStorage": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The free storage space"
              },
              "qtVersion": {
                "type": "string",
                "description": "The version of the Qt framework"
              },
              "rootFsRelease": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Root filesystem release"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number"
              },
              "sshActive": {
                "type": "boolean",
                "description": "If the SSH port is active"
              },
              "firmwareType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device"
              },
              "firmwareVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device"
              },
              "ethernetMac": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Ethernet MAC address"
              },
              "wirelessMac": {
                "type": "string",
                "description": "The wireless MAC address"
              },
              "wirelessSignalStrength": {
                "type": "integer",
                "format": "int32",
                "minimum": -100,
                "exclusiveMinimum": true,
                "maximum": 0,
                "exclusiveMaximum": true,
                "description": "The strength of the wireless interface"
              },
              "wirelessLinkQuality": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "The quality of the wireless interface"
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time in POSIX format"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "StatusChargerSchema": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "activeAlarms": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "exclusiveMinimum": true,
              "maximum": 116,
              "exclusiveMaximum": true
            },
            "description": "Array of active alarm codes"
          },
          "eventLogDate": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The Timestamp of the last event log in POSIX format"
          },
          "algorithmName": {
            "type": "string",
            "description": "The name of the charging algorithm"
          },
          "algorithmVersion": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The version of the charging algorithm, can be NULL"
          },
          "overVoltageCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of mains over voltage protection activations."
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "deviceStatus": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "exclusiveMinimum": true,
              "maximum": 50,
              "exclusiveMaximum": true
            },
            "description": "Array of device status"
          },
          "baseLoad": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging."
          },
          "cableResistance": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery."
          },
          "algorithmNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier."
          },
          "PanId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID"
          },
          "Channel": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel"
          },
          "UAC_meas": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Measured primary voltage"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Serial number of the device, 8 bytes. PU only use the 5 LSB. CCU only use the 4 LSB."
          },
          "deviceTime": {
            "type": "string",
            "description": "The current device time in POSIX format"
          },
          "cells": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery"
          },
          "actualCapacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Calculated actual battery capacity."
          },
          "cycles2To25": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles26To50": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles51To80": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles81To90": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cyclesAbove90": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "capacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery"
          },
          "totalChargeTime": {
            "type": "string",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent charging since reset of statistics."
          },
          "totalChargeAh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah charged since reset of statistics."
          },
          "historyLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of History logs available in memory."
          },
          "historyLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
          },
          "historyLogDate": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The timestamp of the last history log in POSIX format"
          },
          "eventLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Event logs available in memory."
          },
          "eventLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest event log, logs are stored in a circular buffer"
          },
          "instantLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Instant logs available in memory."
          },
          "instantLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest instant log, logs are stored in a circular buffer"
          },
          "totalAcPowerConsumption": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged from mains supply since reset of statistics."
          },
          "acPowerConsumption": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary mains power consumption."
          },
          "chargerTemperature": {
            "type": "integer",
            "format": "int32",
            "description": "Momentary charger heat sink temperature."
          },
          "chargerCurrent": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary charger measured current."
          },
          "chargerVoltage": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary charger measured voltage."
          },
          "firmware": {
            "type": "object",
            "properties": {
              "main": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "type",
                  "version"
                ]
              },
              "radio": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "type",
                  "version"
                ]
              }
            },
            "required": [
              "main"
            ]
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponsePostStatusChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "mui": {
                "type": "string",
                "description": "mui is the device's identifier, which could be either a MAC or an MUI."
              },
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "eventLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format"
              },
              "algorithmName": {
                "type": "string",
                "description": "The name of the charging algorithm"
              },
              "algorithmVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL"
              },
              "overVoltageCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of mains over voltage protection activations."
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "UAC_meas": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured primary voltage"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Serial number of the device, 8 bytes. PU only use the 5 LSB. CCU only use the 4 LSB."
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time in POSIX format"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "actualCapacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity."
              },
              "cycles2To25": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles26To50": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles51To80": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles81To90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cyclesAbove90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "totalChargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics."
              },
              "totalChargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics."
              },
              "historyLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory."
              },
              "historyLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
              },
              "historyLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format"
              },
              "eventLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory."
              },
              "eventLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer"
              },
              "instantLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory."
              },
              "instantLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer"
              },
              "totalAcPowerConsumption": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics."
              },
              "acPowerConsumption": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary mains power consumption."
              },
              "chargerTemperature": {
                "type": "integer",
                "format": "int32",
                "description": "Momentary charger heat sink temperature."
              },
              "chargerCurrent": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured current."
              },
              "chargerVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured voltage."
              },
              "firmware": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware type number, what kind of firmware is on the device"
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware version number, which version of the firmware type is on the device"
                      }
                    },
                    "required": [
                      "type",
                      "version"
                    ]
                  },
                  "radio": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware type number, what kind of firmware is on the device"
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware version number, which version of the firmware type is on the device"
                      }
                    },
                    "required": [
                      "type",
                      "version"
                    ]
                  }
                },
                "required": [
                  "main"
                ]
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseGetStatusChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "mui": {
                "type": "string",
                "description": "mui is the device's identifier, which could be either a MAC or an MUI."
              },
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "eventLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format"
              },
              "algorithmName": {
                "type": "string",
                "description": "The name of the charging algorithm"
              },
              "algorithmVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL"
              },
              "overVoltageCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of mains over voltage protection activations."
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "UAC_meas": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured primary voltage"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Serial number of the device, 8 bytes. PU only use the 5 LSB. CCU only use the 4 LSB."
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time in POSIX format"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "actualCapacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity."
              },
              "cycles2To25": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles26To50": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles51To80": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles81To90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cyclesAbove90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "totalChargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics."
              },
              "totalChargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics."
              },
              "historyLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory."
              },
              "historyLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
              },
              "historyLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format"
              },
              "eventLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory."
              },
              "eventLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer"
              },
              "instantLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory."
              },
              "instantLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer"
              },
              "totalAcPowerConsumption": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics."
              },
              "acPowerConsumption": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary mains power consumption."
              },
              "chargerTemperature": {
                "type": "integer",
                "format": "int32",
                "description": "Momentary charger heat sink temperature."
              },
              "chargerCurrent": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured current."
              },
              "chargerVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured voltage."
              },
              "firmwareType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device"
              },
              "firmwareVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device"
              },
              "firmwareTypeRadio": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device"
              },
              "firmwareVersionRadio": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "StatusBMUSchema": {
        "type": "object",
        "properties": {
          "deviceID": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable"
          },
          "serialNumber": {
            "type": "integer",
            "format": "int32",
            "description": "Unique device serial number"
          },
          "activeAlarms": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "exclusiveMinimum": true,
              "maximum": 116,
              "exclusiveMaximum": true
            },
            "description": "Array of active alarm codes"
          },
          "eventLogDate": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The Timestamp of the last event log in POSIX format"
          },
          "algorithmName": {
            "type": "string",
            "description": "The name of the charging algorithm"
          },
          "algorithmVersion": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The version of the charging algorithm, can be NULL"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read"
          },
          "deviceStatus": {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 1,
              "exclusiveMinimum": true,
              "maximum": 50,
              "exclusiveMaximum": true
            },
            "description": "Array of device status"
          },
          "baseLoad": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging."
          },
          "cableResistance": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery."
          },
          "algorithmNumber": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier."
          },
          "PanId": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID"
          },
          "Channel": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel"
          },
          "stateOfCharge": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Amount of capacity left in the battery."
          },
          "deviceTime": {
            "type": "string",
            "description": "The current device time in POSIX format"
          },
          "batteryCurrent": {
            "type": "number",
            "description": "Measured battery current."
          },
          "batteryVoltage": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Measured battery voltage."
          },
          "batteryTemperature": {
            "type": "number",
            "description": "Measured battery temperature."
          },
          "batteryLifeTempAverage": {
            "type": "number",
            "description": "Average battery lifetime temperature."
          },
          "cells": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery"
          },
          "actualCapacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Calculated actual battery capacity."
          },
          "ahLeft": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The total remaining Ah available for the life time of the battery"
          },
          "timeLeft": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Days left until battery is considered as end of life."
          },
          "cycles2To25": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles26To50": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles51To80": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cycles81To90": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "cyclesAbove90": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
          },
          "StoppedCyles": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of charge cycles stopped before battery is fully charged."
          },
          "cyclesLeft": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count."
          },
          "capacity": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery"
          },
          "totalDischargeTime": {
            "type": "string",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent discharging since reset of statistics."
          },
          "totalDischargeAh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah discharged since reset of statistics."
          },
          "totalDischargeWh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh discharged since reset of statistics."
          },
          "totalChargeTime": {
            "type": "string",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent charging since reset of statistics."
          },
          "totalChargeAh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah charged since reset of statistics."
          },
          "totalChargeWh": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged since reset of statistics."
          },
          "totalChargeWhAc": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency."
          },
          "ebUnits": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only)."
          },
          "historyLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of History logs available in memory."
          },
          "historyLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
          },
          "historyLogDate": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The timestamp of the last history log in POSIX format"
          },
          "eventLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Event logs available in memory."
          },
          "eventLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest event log, logs are stored in a circular buffer"
          },
          "instantLogCount": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Instant logs available in memory."
          },
          "instantLogIndex": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest instant log, logs are stored in a circular buffer"
          },
          "middleVoltage": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The current middle voltage"
          },
          "electrolyteVoltage": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The current electrolyte voltage"
          },
          "firmware": {
            "type": "object",
            "properties": {
              "main": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware type number, what kind of firmware is on the device"
                  },
                  "version": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "description": "The firmware version number, which version of the firmware type is on the device"
                  }
                },
                "required": [
                  "type",
                  "version"
                ]
              }
            },
            "required": [
              "main"
            ]
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponsePostStatusBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "mui": {
                "type": "string",
                "description": "mui is the device's identifier, which could be either a MAC or an MUI."
              },
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number"
              },
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "eventLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log"
              },
              "algorithmName": {
                "type": "string",
                "description": "The name of the charging algorithm"
              },
              "algorithmVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL"
              },
              "dischargeTimeStart": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "stateOfCharge": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Amount of capacity left in the battery."
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time"
              },
              "batteryCurrent": {
                "type": "number",
                "description": "Measured battery current."
              },
              "batteryVoltage": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured battery voltage."
              },
              "batteryTemperature": {
                "type": "number",
                "description": "Measured battery temperature."
              },
              "batteryLifeTempAverage": {
                "type": "number",
                "description": "Average battery lifetime temperature."
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "actualCapacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity."
              },
              "ahLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total remaining Ah available for the life time of the battery"
              },
              "timeLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Days left until battery is considered as end of life."
              },
              "cycles2To25": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles26To50": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles51To80": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles81To90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cyclesAbove90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "StoppedCyles": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charge cycles stopped before battery is fully charged."
              },
              "cyclesLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count."
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "totalDischargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent discharging since reset of statistics."
              },
              "totalDischargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah discharged since reset of statistics."
              },
              "totalDischargeWh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh discharged since reset of statistics."
              },
              "totalChargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics."
              },
              "totalChargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics."
              },
              "totalChargeWh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged since reset of statistics."
              },
              "totalChargeWhAc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency."
              },
              "ebUnits": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only)."
              },
              "historyLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory."
              },
              "historyLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
              },
              "historyLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log"
              },
              "eventLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory."
              },
              "eventLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer"
              },
              "instantLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory."
              },
              "instantLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer"
              },
              "middleVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current middle voltage"
              },
              "electrolyteVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current electrolyte voltage"
              },
              "firmware": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware type number, what kind of firmware is on the device"
                      },
                      "version": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "exclusiveMinimum": true,
                        "description": "The firmware version number, which version of the firmware type is on the device"
                      }
                    },
                    "required": [
                      "type",
                      "version"
                    ]
                  }
                },
                "required": [
                  "main"
                ]
              }
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "ResponseGetStatusBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "serialNumber": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number"
              },
              "activeAlarms": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 116,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes"
              },
              "eventLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log"
              },
              "algorithmName": {
                "type": "string",
                "description": "The name of the charging algorithm"
              },
              "algorithmVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL"
              },
              "dischargeTimeStart": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "deviceStatus": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "minimum": 1,
                  "exclusiveMinimum": true,
                  "maximum": 50,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "stateOfCharge": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Amount of capacity left in the battery."
              },
              "deviceTime": {
                "type": "string",
                "description": "The current device time"
              },
              "batteryCurrent": {
                "type": "number",
                "description": "Measured battery current."
              },
              "batteryVoltage": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured battery voltage."
              },
              "batteryTemperature": {
                "type": "number",
                "description": "Measured battery temperature."
              },
              "batteryLifeTempAverage": {
                "type": "number",
                "description": "Average battery lifetime temperature."
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "actualCapacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity."
              },
              "ahLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total remaining Ah available for the life time of the battery"
              },
              "timeLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Days left until battery is considered as end of life."
              },
              "cycles2To25": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles26To50": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles51To80": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cycles81To90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "cyclesAbove90": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged."
              },
              "StoppedCyles": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charge cycles stopped before battery is fully charged."
              },
              "cyclesLeft": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count."
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "totalDischargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent discharging since reset of statistics."
              },
              "totalDischargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah discharged since reset of statistics."
              },
              "totalDischargeWh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh discharged since reset of statistics."
              },
              "totalChargeTime": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics."
              },
              "totalChargeAh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics."
              },
              "totalChargeWh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged since reset of statistics."
              },
              "totalChargeWhAc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency."
              },
              "ebUnits": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only)."
              },
              "historyLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory."
              },
              "historyLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed."
              },
              "historyLogDate": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log"
              },
              "eventLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory."
              },
              "eventLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer"
              },
              "instantLogCount": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory."
              },
              "instantLogIndex": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer"
              },
              "middleVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current middle voltage"
              },
              "electrolyteVoltage": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current electrolyte voltage"
              },
              "firmwareType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device"
              },
              "firmwareVersion": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device"
              }
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "HistorySchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                },
                "index": {
                  "type": "integer",
                  "format": "int32"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "object"
                      },
                      {
                        "type": "array"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "ResponseHistorySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "object"
                          },
                          {
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EventSchema": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "eventType": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The type of event, whether it's an alarm (0), startup (1), parameter changed (2), time set (3), calibration (4), cable Ri slope (5), generic (6), charge started (7), charge ended (8), mains state (9), network started (10), network joined (11), assert (12), and time not set (13)"
                },
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time when log was written"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "description": "an incrementing counter that keeps track of the order of log entries, in case of incorrect timestamps"
                },
                "values": {
                  "type": "object",
                  "description": "details about the event, see the Event types section below for details.",
                  "oneOf": [
                    {
                      "description": "Alarm event (type=0) which is generated when an alarm condition is detected as well as when a previously active alarm condition is resolved.",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "description": "The code indicating the type of alarm",
                          "minimum": 0,
                          "maximum": 116,
                          "exclusiveMinimum": true,
                          "exclusiveMaximum": true
                        },
                        "rawCode": {
                          "type": "integer",
                          "description": "the raw code indicating the type of the unknown alarm."
                        },
                        "active": {
                          "type": "boolean",
                          "description": "true when the alarm is triggered, false when a previously active alarm is resolved"
                        }
                      },
                      "required": [
                        "code",
                        "active"
                      ]
                    },
                    {
                      "description": "Startup event (type=1) which consist of a firmware object that specifies the device firmware's types and versions, the main firmware is specified in the main object and radio is specified in radio",
                      "properties": {
                        "firmware": {
                          "type": "object",
                          "properties": {
                            "main": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0,
                                  "exclusiveMinimum": true,
                                  "description": "The firmware type number, what kind of firmware is on the device"
                                },
                                "version": {
                                  "type": "integer",
                                  "format": "int32",
                                  "minimum": 0,
                                  "exclusiveMinimum": true,
                                  "description": "The firmware version number, which version of the firmware type is on the device"
                                }
                              },
                              "required": [
                                "type",
                                "version"
                              ]
                            }
                          },
                          "required": [
                            "main"
                          ]
                        }
                      },
                      "required": [
                        "firmware"
                      ]
                    },
                    {
                      "description": "Parameter changed event (type=2)",
                      "oneOf": [
                        {
                          "properties": {
                            "index": {
                              "type": "integer",
                              "description": "cellCount (5), capacity (6), baseLoad (24), cableResistance (25), algorithmNumber (26)",
                              "minimum": 5,
                              "maximum": 26,
                              "exclusiveMinimum": true,
                              "exclusiveMaximum": true
                            },
                            "oldValue": {
                              "type": "string",
                              "description": "the old parameter value"
                            },
                            "newValue": {
                              "type": "string",
                              "description": "the new parameter value"
                            }
                          }
                        },
                        {
                          "properties": {
                            "index": {
                              "type": "integer",
                              "description": "cellCount (5), capacity (6), baseLoad (24), cableResistance (25), algorithmNumber (26)",
                              "minimum": 5,
                              "maximum": 26,
                              "exclusiveMinimum": true,
                              "exclusiveMaximum": true
                            },
                            "oldValue": {
                              "type": "integer",
                              "description": "the old parameter value"
                            },
                            "newValue": {
                              "type": "integer",
                              "description": "the new parameter value"
                            }
                          }
                        },
                        {
                          "properties": {
                            "index": {
                              "type": "integer",
                              "description": "cellCount (5), capacity (6), baseLoad (24), cableResistance (25), algorithmNumber (26)",
                              "minimum": 5,
                              "maximum": 26,
                              "exclusiveMinimum": true,
                              "exclusiveMaximum": true
                            },
                            "oldValue": {
                              "type": "number",
                              "description": "the old parameter value"
                            },
                            "newValue": {
                              "type": "number",
                              "description": "the new parameter value"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "description": "Time set (type=3)",
                      "properties": {
                        "oldTime": {
                          "type": "string"
                        },
                        "source": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 3,
                          "exclusiveMinimum": true,
                          "exclusiveMaximum": true,
                          "description": "unknown (0), radio (1), device (2), NFC (3)"
                        }
                      },
                      "required": [
                        "oldTime",
                        "source"
                      ]
                    },
                    {
                      "description": "Calibration event (type=4)",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "invalid, voltage, current, middleVoltage, electrolyte"
                        },
                        "oldValue": {
                          "type": "number"
                        },
                        "newValue": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type"
                      ]
                    }
                  ]
                }
              },
              "required": [
                "timestamp",
                "index",
                "type",
                "values"
              ]
            }
          }
        }
      },
      "RequestTimeout": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Request Timeout"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized: You must log in to do this."
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Must supply firmware with main version."
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      },
      "ItemNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Item Not Found"
          }
        }
      },
      "InstantSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time when log was written"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Index of the instant log since start of operation"
                },
                "instantLogPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The amount of seconds between instant logs, 0 = off"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "ResponseInstantSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The time when log was written"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Index of the instant log since start of operation"
                },
                "instantLogPeriod": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The amount of seconds between instant logs, 0 = off"
                },
                "values": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "ResponseIndexSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "integer",
                  "description": "-1 for no result"
                },
                "end": {
                  "type": "integer",
                  "description": "-1 for no result"
                }
              }
            },
            "example": [
              {
                "start": 1,
                "end": 100
              },
              {
                "start": 250,
                "end": 250
              },
              {
                "start": 253,
                "end": 255
              },
              {
                "start": 290,
                "end": 300
              }
            ]
          }
        }
      }
    }
  }
}
