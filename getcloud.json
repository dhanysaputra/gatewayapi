{
  "openapi": "3.0.0",
  "info": {
    "version": "1.1.0",
    "title": "Gateway API Specification",
    "description": "This is an API specification that allows devices to upload data to GET Cloud and obtain existing information on GET Cloud.",
    "termsOfService": "https://docs.micropower-group.com/#!doc/topic:GET_User_Terms_and_conditions",
    "contact": {
      "name": "Micropower Group",
      "email": "micropowergroupab@gmail.com"
    }
  },
  "tags": [
    {
      "name": "indexes"
    },
    {
      "name": "devices"
    },
    {
      "name": "bms"
    },
    {
      "name": "pings"
    },
    {
      "name": "gateways"
    }
  ],
  "servers": [
    {
      "url": "https://getcloudgateway.azurewebsites.net/api/v1/"
    }
  ],
  "paths": {
    "/devices/{mui}/logs/history/indexes": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing history logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of history log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/instant/indexes": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing instant logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of instant log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/event/indexes": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing event logs",
        "responses": {
          "200": {
            "description": "Successfully getting the event of instant log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmscycle/indexes": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing bms cycle logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of bms cycle log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmshistogram/indexes": {
      "get": {
        "tags": [
          "indexes"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get indexes of existing bms histogram logs",
        "responses": {
          "200": {
            "description": "Successfully getting the indexes of bms histogram log.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseIndexSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/software/versions": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "List all available gateway versions (DON'T USE)",
        "responses": {
          "200": {
            "description": "Successfully returning the list of all available gateway versions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1.0.0",
                        "1.1.0"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/software/latest": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the latest gateway software version (DON'T USE)",
        "responses": {
          "200": {
            "description": "Successfully returning the latest gateway software version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "sha256": {
                          "type": "string"
                        }
                      },
                      "example": [
                        "1.1.0",
                        "https://www.get-cloud.com/api/v1/gateway/software/1.1.0/mpg_software_1.1.0.tar.gz",
                        "fa72c2cd95b5ea50a76a0cc4ed1714dc93cc37ec98b3bc41597c573887deae47"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/software/{version}": {
      "get": {
        "tags": [
          "gateways"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "version",
            "in": "path",
            "description": "version is the gateway's version that is to be downloaded.",
            "example": "1.1.0",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get the download path and hash (DON'T USE)",
        "responses": {
          "200": {
            "description": "Successfully returning the detail of the requested gateway software version.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "sha256": {
                          "type": "string"
                        }
                      },
                      "example": [
                        "1.1.0",
                        "https://www.get-cloud.com/api/v1/gateway/software/1.1.0/mpg_software_1.1.0.tar.gz",
                        "fa72c2cd95b5ea50a76a0cc4ed1714dc93cc37ec98b3bc41597c573887deae47"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/ping": {
      "get": {
        "tags": [
          "pings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 562959144425069,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Send ping to server",
        "description": "Make an authenticated get request to this endpoint to signal that the device is up and running, without uploading any logs.",
        "responses": {
          "200": {
            "description": "Successfully pinging the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "pings"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Send ping to server",
        "description": "Make an authenticated get request to this endpoint to signal that the gateway is up and running.",
        "responses": {
          "200": {
            "description": "Successfully pinging the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success or fail",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/status": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid status fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StatusLogsBmuUpload"
                  },
                  {
                    "$ref": "#/components/schemas/StatusLogsChargerUpload"
                  },
                  {
                    "$ref": "#/components/schemas/StatusLogsGatewayUpload"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/statusBMUUploadExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/statusChargerUploadExample"
                },
                "Gateway": {
                  "$ref": "#/components/examples/statusGatewayExample"
                }
              }
            }
          }
        },
        "summary": "Upload status logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the status log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostStatusGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponsePostStatusBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponsePostStatusChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponsePostStatusGatewayExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get the latest status logs",
        "responses": {
          "200": {
            "description": "Successfully showing the status of the given device visible for the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetStatusGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseGetStatusBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseGetStatusChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponseGetStatusGatewayExample"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/config": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Upload config logs",
        "requestBody": {
          "description": "The set of valid configuration fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ConfigBMUSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigChargerSchema"
                  },
                  {
                    "$ref": "#/components/schemas/ConfigGatewaySchema"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/configBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/configChargerExample"
                },
                "Gateway": {
                  "$ref": "#/components/examples/configGatewayExample"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully uploading the config log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseConfigBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseConfigChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponsePostConfigGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseConfigBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseConfigChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponsePostConfigGatewayExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get the latest configuration of a device",
        "summary": "Get the latest config logs",
        "responses": {
          "200": {
            "description": "Successfully showing the configuration of the given device visible for the logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ResponseConfigBMUSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseConfigChargerSchema"
                    },
                    {
                      "$ref": "#/components/schemas/ResponseGetConfigGatewaySchema"
                    }
                  ]
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseConfigBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseConfigChargerExample"
                  },
                  "Gateway": {
                    "$ref": "#/components/examples/ResponseGetConfigGatewayExample"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "408": {
            "description": "Request timeout",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RequestTimeout"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/history": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid configuration fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/HistoryLogsBmuUpload"
                  },
                  {
                    "$ref": "#/components/schemas/HistoryLogsChargerUpload"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/historyBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/historyChargerExample"
                }
              }
            }
          }
        },
        "summary": "Upload history logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the history logs of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHistorySchema"
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseHistoryBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseHistoryChargerExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/event": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The structure of this endpoint always consists of an array of \"events\", each of which element consists of index, timestamp, type, and values. The structure of values depends on the event type. For instance, in the alarm event, each array element in values contains code and active. In the parameterChanged event, each array element in values contains index, oldValue, and newValue. See \"schema\" for more info.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventSchema"
              },
              "examples": {
                "AlarmSolvedInADay": {
                  "$ref": "#/components/examples/AlarmSolvedInADayExample"
                },
                "BaseloadChanged": {
                  "$ref": "#/components/examples/BaseloadChangedExample"
                },
                "ElectrolyteCalibratedAndFirmwareStartup": {
                  "$ref": "#/components/examples/ElectrolyteCalibratedAndFirmwareStartupExample"
                }
              }
            }
          }
        },
        "summary": "Upload event logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the event log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventSchema"
                },
                "examples": {
                  "AlarmSolvedInADay": {
                    "$ref": "#/components/examples/ResponseAlarmSolvedInADayExample"
                  },
                  "BaseloadChanged": {
                    "$ref": "#/components/examples/ResponseBaseloadChangedExample"
                  },
                  "ElectrolyteCalibratedAndFirmwareStartup": {
                    "$ref": "#/components/examples/ResponseElectrolyteCalibratedAndFirmwareStartupExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/instant": {
      "post": {
        "tags": [
          "devices"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": "562959144425069",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid instant log fields depends on the type of device, as documented on the latest<code>A00465</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/InstantBMU"
                  },
                  {
                    "$ref": "#/components/schemas/InstantCharger"
                  }
                ]
              },
              "examples": {
                "BMU": {
                  "$ref": "#/components/examples/InstantBMUExample"
                },
                "Charger": {
                  "$ref": "#/components/examples/InstantChargerExample"
                }
              }
            }
          }
        },
        "summary": "Upload instant logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the instant log of the selected device.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInstantSchema"
                },
                "examples": {
                  "BMU": {
                    "$ref": "#/components/examples/ResponseInstantBMUExample"
                  },
                  "Charger": {
                    "$ref": "#/components/examples/ResponseInstantChargerExample"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmscycle": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "See the <code>Schema</code> section to see the set of valid cycle log fields. This log always comes in pairs (two rows) from the device, charging row and discharging row. Instead of sending as two separate rows, this log sends one row for each pair. The index, cycle number, and cycle logs are always in the form of int32 array with two elements.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSCycleSchema"
              }
            }
          }
        },
        "summary": "Upload cycle logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the cycle logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSCycleSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmsevent": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSEventSchema"
              }
            }
          }
        },
        "summary": "Upload event logs (BMS)",
        "responses": {
          "200": {
            "description": "Successfully uploading the event logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSEventSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmstotals": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSTotalsSchema"
              }
            }
          }
        },
        "summary": "Upload totals logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the totals logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSTotalsSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmsbatteryinfo": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSBatteryinfoSchema"
              }
            }
          }
        },
        "summary": "Upload battery info logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the battery info logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSBatteryinfoSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmsapplicationinfo": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSApplicationinfoSchema"
              }
            }
          }
        },
        "summary": "Upload application info logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the application info logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSApplicationinfoSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmshistogram": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSHistogramSchema"
              }
            }
          }
        },
        "summary": "Upload histogram logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the histogram logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSHistogramSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/devices/{mui}/logs/bmsbrixmapping": {
      "post": {
        "tags": [
          "bms"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mui",
            "in": "path",
            "description": "mui is the device's identifier, which could be either a MAC or an MUI.",
            "example": 65084745308715980,
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The set of valid cycle log fields is documented on the latest<code>A03367</code>document, or see the \"Schema\" section.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BMSBrixmappingSchema"
              }
            }
          }
        },
        "summary": "Upload brix mapping logs",
        "responses": {
          "200": {
            "description": "Successfully uploading the brix mapping logs of the selected BMS.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBMSBrixmappingSchema"
                }
              }
            }
          },
          "400": {
            "description": "BadRequest",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "ItemNotFound",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemNotFound"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerError",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "examples": {
      "statusBMUUploadExample": {
        "value": {
          "10": 9180421615,
          "35": 19047,
          "36": 15,
          "38": 11618022,
          "39": 502,
          "44": 100,
          "45": 1643703827,
          "46": -0.128,
          "47": 39.085,
          "48": 30.7,
          "49": 28.241669,
          "50": 680,
          "51": 1012787,
          "52": 7250,
          "53": 8,
          "54": 10,
          "55": 10,
          "56": 0,
          "57": 0,
          "58": 10,
          "59": 1861,
          "60": 7964303,
          "61": 7213,
          "62": 261986,
          "63": 2191134,
          "64": 9629,
          "65": 411841,
          "66": 433516,
          "67": 30,
          "68": 28,
          "69": 1,
          "70": 1643703827,
          "71": 128,
          "72": 21,
          "73": 20568,
          "74": 35811,
          "80": 13.024,
          "81": 6.437,
          "127": [
            101,
            102
          ],
          "128": 1643703827,
          "219": 1643703827,
          "220": [
            7,
            2,
            4,
            29
          ]
        }
      },
      "statusChargerUploadExample": {
        "value": {
          "1": 223,
          "5": 24,
          "6": 575,
          "24": 0,
          "25": 0.006,
          "26": 1,
          "38": 11618022,
          "39": 502,
          "45": 1643703827,
          "53": 38,
          "54": 7,
          "55": 95,
          "56": 81,
          "57": 7,
          "63": 1565,
          "64": 99230,
          "68": 228,
          "69": 228,
          "70": 1643703827,
          "71": 41,
          "72": 56,
          "73": 0,
          "74": 0,
          "75": 5908850,
          "76": 0,
          "88": 15.4,
          "90": 0,
          "91": 52.723,
          "93": 11618022,
          "94": 502,
          "127": [
            101,
            102
          ],
          "128": 1643703827,
          "129": "1.10-06",
          "130": 4,
          "218": 4,
          "219": 1643703827,
          "220": [
            16,
            17,
            13,
            20,
            14
          ],
          "382": 300,
          "389": 70305543
        }
      },
      "statusGatewayExample": {
        "value": {
          "10": 9180421615,
          "38": 11618004,
          "39": 3,
          "45": 1643703827,
          "93": 11618015,
          "94": 2,
          "96": 16321,
          "101": "Qt 5.9.2 (32 bit)",
          "102": "C4:F3:12:62:E8:A2",
          "103": "98:5D:AD:CD:FA:51",
          "104": 3380,
          "105": 18,
          "106": -100,
          "107": 0,
          "108": true,
          "127": [],
          "219": 1643703827,
          "220": [],
          "248": 16325
        }
      },
      "configBMUExample": {
        "value": {
          "1": 180421615,
          "2": 0,
          "3": "ECOTRUCK",
          "4": 1,
          "5": 18,
          "6": 680,
          "7": 1500,
          "8": 1020000,
          "9": 180,
          "11": false,
          "12": true,
          "13": 51.6,
          "15": 30,
          "16": 30,
          "17": 95,
          "18": 2451,
          "19": 3562,
          "20": 20,
          "21": true,
          "23": 6,
          "24": 0,
          "25": 0,
          "26": 8,
          "27": 1.98,
          "28": false,
          "29": true,
          "30": 2,
          "31": 6,
          "32": 2,
          "33": 1,
          "35": 19047,
          "36": 15,
          "37": 52560,
          "324": 0
        }
      },
      "configChargerExample": {
        "value": {
          "1": 2,
          "2": 0,
          "5": 16,
          "6": 1050,
          "9": 60,
          "18": 2451,
          "19": 3562,
          "24": 0,
          "25": 0,
          "26": 10,
          "30": 0,
          "31": 0,
          "32": 0,
          "33": 10,
          "34": 0,
          "35": null,
          "36": null,
          "37": null,
          "42": 0,
          "43": 5,
          "77": null,
          "78": false,
          "79": [],
          "84": 1,
          "85": 0,
          "97": 128,
          "98": 300,
          "123": 0,
          "222": 0,
          "223": 55,
          "224": 20000,
          "226": 0,
          "227": 80,
          "228": 100,
          "229": 25,
          "230": 0,
          "231": 0,
          "232": 0,
          "233": 0,
          "234": 1,
          "235": 0,
          "236": 0,
          "237": 0,
          "238": 3,
          "239": 15,
          "240": 0,
          "241": false,
          "242": null,
          "243": 0,
          "244": 0,
          "245": 1,
          "246": null,
          "254": 3,
          "255": 0,
          "256": 1,
          "257": 1,
          "258": null,
          "259": 0,
          "260": 0,
          "261": 0,
          "262": 0,
          "263": 5000,
          "264": 14000,
          "265": 44,
          "267": [
            {
              "function": 1,
              "pin": 0,
              "variable": 0
            },
            {
              "function": 1,
              "pin": 3,
              "variable": 0
            }
          ],
          "268": [
            {
              "function": 1,
              "pin": 1
            }
          ],
          "269": false,
          "270": false,
          "271": false,
          "272": 30,
          "406": null
        }
      },
      "configGatewayExample": {
        "value": {
          "1": 190407786,
          "19": 3562,
          "109": "Get Connected",
          "110": "https://www.get-cloud.com",
          "111": 4503608817778280,
          "113": 30,
          "114": 3,
          "116": 10000,
          "124": false,
          "125": false,
          "131": "192.168.2.21",
          "132": false,
          "189": "255.255.255.0",
          "206": "192.168.2.0",
          "212": null,
          "213": null,
          "214": "Iphone von ion",
          "216": 1440,
          "217": null,
          "225": null,
          "247": 125000
        }
      },
      "historyBMUExample": {
        "value": {
          "fields": [
            127,
            129,
            130,
            133,
            134,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            159,
            160,
            161,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            186,
            187,
            220,
            24,
            25,
            26,
            5,
            50
          ],
          "rows": [
            [
              [
                102,
                103,
                104
              ],
              "LK10-04",
              1,
              1643527427,
              1643545427,
              2.03,
              2.2,
              1.9,
              100,
              81,
              25.4,
              18.2,
              25.4,
              18.1,
              422,
              12076,
              0,
              0,
              258,
              11712,
              164,
              23265,
              70,
              1,
              18,
              85.6,
              1643545427,
              1643559827,
              2.2,
              2.1,
              2.21,
              81,
              100,
              18.2,
              20.5,
              20.7,
              18.2,
              54,
              1369,
              1,
              16,
              3,
              113,
              50,
              86271,
              0,
              0,
              0,
              157,
              1,
              [
                1,
                7,
                6,
                16,
                13,
                17,
                18,
                19,
                20,
                14
              ],
              0,
              0,
              2,
              12,
              620
            ],
            [
              [
                102,
                103,
                104
              ],
              "LK10-04",
              1,
              1643703827,
              1643732627,
              2.03,
              2.2,
              1.9,
              100,
              81,
              25.4,
              18.2,
              25.4,
              18.1,
              422,
              12076,
              0,
              0,
              258,
              11712,
              164,
              23265,
              70,
              1,
              18,
              85.6,
              1643732627,
              1643750627,
              2.2,
              2.1,
              2.21,
              81,
              100,
              18.2,
              20.5,
              20.7,
              18.2,
              54,
              1369,
              1,
              16,
              3,
              113,
              50,
              86271,
              0,
              0,
              0,
              157,
              1,
              [
                1,
                7,
                6,
                16,
                13,
                17,
                18,
                19,
                20,
                14
              ],
              0,
              0,
              2,
              12,
              620
            ]
          ]
        }
      },
      "historyChargerExample": {
        "value": {
          "fields": [
            1,
            10,
            118,
            119,
            120,
            123,
            127,
            129,
            130,
            160,
            161,
            165,
            166,
            174,
            175,
            182,
            183,
            184,
            187,
            2,
            203,
            204,
            205,
            207,
            208,
            210,
            220,
            24,
            25,
            26,
            416,
            417,
            5,
            50
          ],
          "rows": [
            [
              6012167,
              200313105,
              11,
              0,
              0,
              1,
              [],
              "12.FCIU",
              0,
              1643545427,
              1643559827,
              2.124,
              2.4,
              54,
              1599,
              0,
              0,
              0,
              42,
              0,
              24.6,
              33.7,
              37.5,
              28,
              28,
              3504,
              [
                16,
                13,
                17,
                18,
                21,
                26
              ],
              0,
              0.002,
              12,
              213333,
              231232,
              12,
              400
            ],
            [
              6012167,
              200313105,
              11,
              0,
              0,
              1,
              [],
              "12.FCIU",
              0,
              1643732627,
              1643750627,
              2.124,
              2.4,
              54,
              1599,
              0,
              0,
              0,
              42,
              0,
              24.6,
              33.7,
              37.5,
              28,
              28,
              3504,
              [
                16,
                13,
                17,
                18,
                21,
                26
              ],
              0,
              0.002,
              12,
              213333,
              231232,
              12,
              400
            ]
          ]
        }
      },
      "ResponsePostStatusBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "10": 9180421615,
            "35": 19047,
            "36": 15,
            "38": 11618022,
            "39": 502,
            "44": 100,
            "45": 1643703827,
            "46": -0.128,
            "47": 39.085,
            "48": 30.7,
            "49": 28.241669,
            "50": 680,
            "51": 1012787,
            "52": 7250,
            "53": 8,
            "54": 10,
            "55": 10,
            "56": 0,
            "57": 0,
            "58": 10,
            "59": 1861,
            "60": 7964303,
            "61": 7213,
            "62": 261986,
            "63": 2191134,
            "64": 9629,
            "65": 411841,
            "66": 433516,
            "67": 30,
            "68": 28,
            "69": 1,
            "70": 1643703827,
            "71": 128,
            "72": 21,
            "73": 20568,
            "74": 35811,
            "80": 13.024,
            "81": 6.437,
            "127": [
              101,
              102
            ],
            "128": 1643703827,
            "219": 1643703827,
            "220": [
              7,
              2,
              4,
              29
            ]
          }
        }
      },
      "ResponseGetStatusBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "10": 9180421615,
            "35": 19047,
            "36": 15,
            "38": 11618022,
            "39": 502,
            "44": 100,
            "45": 1643703827,
            "46": -0.128,
            "47": 39.085,
            "48": 30.7,
            "49": 28.241669,
            "50": 680,
            "51": 1012787,
            "52": 7250,
            "53": 8,
            "54": 10,
            "55": 10,
            "56": 0,
            "57": 0,
            "58": 10,
            "59": 1861,
            "60": 7964303,
            "61": 7213,
            "62": 261986,
            "63": 2191134,
            "64": 9629,
            "65": 411841,
            "66": 433516,
            "67": 30,
            "68": 28,
            "69": 1,
            "70": 1643703827,
            "71": 128,
            "72": 21,
            "73": 20568,
            "74": 35811,
            "80": 13.024,
            "81": 6.437,
            "127": [
              101,
              102
            ],
            "128": 1643703827,
            "219": 1643703827,
            "220": [
              7,
              2,
              4,
              29
            ]
          }
        }
      },
      "ResponsePostStatusChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 223,
            "5": 24,
            "6": 575,
            "24": 0,
            "25": 0.006,
            "26": 1,
            "38": 11618022,
            "39": 502,
            "45": 1643703827,
            "53": 38,
            "54": 7,
            "55": 95,
            "56": 81,
            "57": 7,
            "63": 1565,
            "64": 99230,
            "68": 228,
            "69": 228,
            "70": 1643703827,
            "71": 41,
            "72": 56,
            "73": 0,
            "74": 0,
            "75": 5908850,
            "76": 0,
            "88": 15.4,
            "90": 0,
            "91": 52.723,
            "93": 11618022,
            "94": 502,
            "127": [
              101,
              102
            ],
            "128": 1643703827,
            "129": "1.10-06",
            "130": 4,
            "218": 4,
            "219": 1643703827,
            "220": [
              16,
              17,
              13,
              20,
              14
            ],
            "382": 300,
            "389": 70305543
          }
        }
      },
      "ResponseGetStatusChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 223,
            "5": 24,
            "6": 575,
            "24": 0,
            "25": 0.006,
            "26": 1,
            "38": 11618022,
            "39": 502,
            "45": 1643703827,
            "53": 38,
            "54": 7,
            "55": 95,
            "56": 81,
            "57": 7,
            "63": 1565,
            "64": 99230,
            "68": 228,
            "69": 228,
            "70": 1643703827,
            "71": 41,
            "72": 56,
            "73": 0,
            "74": 0,
            "75": 5908850,
            "76": 0,
            "88": 15.4,
            "90": 0,
            "91": 52.723,
            "93": 11618022,
            "94": 502,
            "127": [
              101,
              102
            ],
            "128": 1643703827,
            "129": "1.10-06",
            "130": 4,
            "218": 4,
            "219": 1643703827,
            "220": [
              16,
              17,
              13,
              20,
              14
            ],
            "382": 300,
            "389": 70305543
          }
        }
      },
      "ResponsePostStatusGatewayExample": {
        "value": {
          "38": 11618004,
          "39": 3,
          "45": 1643703827,
          "93": 11618015,
          "94": 2,
          "96": 16321,
          "101": "Qt 5.9.2 (32 bit)",
          "102": "C4:F3:12:62:E8:A2",
          "103": "98:5D:AD:CD:FA:51",
          "104": 3380,
          "105": 18,
          "106": -100,
          "107": 0,
          "108": true,
          "127": [],
          "219": 1643703827,
          "220": [],
          "248": 16325,
          "status": "success",
          "data": {
            "10": 9180421615
          }
        }
      },
      "ResponseGetStatusGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "10": 9180421615,
            "38": 11618004,
            "39": 3,
            "45": 1643703827,
            "93": 11618015,
            "94": 2,
            "96": 16321,
            "101": "Qt 5.9.2 (32 bit)",
            "102": "C4:F3:12:62:E8:A2",
            "103": "98:5D:AD:CD:FA:51",
            "104": 3380,
            "105": 18,
            "106": -100,
            "107": 0,
            "108": true,
            "127": [],
            "219": 1643703827,
            "220": [],
            "248": 16325
          }
        }
      },
      "ResponseConfigBMUExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 180421615,
            "2": 0,
            "3": "ECOTRUCK",
            "4": 1,
            "5": 18,
            "6": 680,
            "7": 1500,
            "8": 1020000,
            "9": 180,
            "11": false,
            "12": true,
            "13": 51.6,
            "15": 30,
            "16": 30,
            "17": 95,
            "18": 2451,
            "19": 3562,
            "20": 20,
            "21": true,
            "23": 6,
            "24": 0,
            "25": 0,
            "26": 8,
            "27": 1.98,
            "28": false,
            "29": true,
            "30": 2,
            "31": 6,
            "32": 2,
            "33": 1,
            "35": 19047,
            "36": 15,
            "37": 52560,
            "324": 0
          }
        }
      },
      "ResponseConfigChargerExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 2,
            "2": 0,
            "5": 16,
            "6": 1050,
            "9": 60,
            "18": 2451,
            "19": 3562,
            "24": 0,
            "25": 0,
            "26": 10,
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 10,
            "34": 0,
            "35": null,
            "36": null,
            "37": null,
            "42": 0,
            "43": 5,
            "77": null,
            "78": false,
            "79": [],
            "84": 1,
            "85": 0,
            "97": 128,
            "98": 300,
            "123": 0,
            "222": 0,
            "223": 55,
            "224": 20000,
            "226": 0,
            "227": 80,
            "228": 100,
            "229": 25,
            "230": 0,
            "231": 0,
            "232": 0,
            "233": 0,
            "234": 1,
            "235": 0,
            "236": 0,
            "237": 0,
            "238": 3,
            "239": 15,
            "240": 0,
            "241": false,
            "242": null,
            "243": 0,
            "244": 0,
            "245": 1,
            "246": null,
            "254": 3,
            "255": 0,
            "256": 1,
            "257": 1,
            "258": null,
            "259": 0,
            "260": 0,
            "261": 0,
            "262": 0,
            "263": 5000,
            "264": 14000,
            "265": 44,
            "267": [
              {
                "function": 1,
                "pin": 0,
                "variable": 0
              },
              {
                "function": 1,
                "pin": 3,
                "variable": 0
              }
            ],
            "268": [
              {
                "function": 1,
                "pin": 1
              }
            ],
            "269": false,
            "270": false,
            "271": false,
            "272": 30,
            "406": null
          }
        }
      },
      "ResponsePostConfigGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 190407786,
            "19": 3562,
            "109": "Get Connected",
            "110": "https://www.get-cloud.com",
            "111": 4503608817778280,
            "113": 30,
            "114": 3,
            "116": 10000,
            "124": false,
            "125": false,
            "131": "192.168.2.21",
            "132": false,
            "189": "255.255.255.0",
            "206": "192.168.2.0",
            "212": null,
            "213": null,
            "214": "Iphone von ion",
            "216": 1440,
            "217": null,
            "225": null,
            "247": 125000
          }
        }
      },
      "ResponseGetConfigGatewayExample": {
        "value": {
          "status": "success",
          "data": {
            "1": 190407786,
            "19": 3562,
            "109": "Get Connected",
            "110": "https://www.get-cloud.com",
            "111": 4503608817778280,
            "113": 30,
            "114": 3,
            "116": 10000,
            "124": false,
            "125": false,
            "131": "192.168.2.21",
            "132": false,
            "189": "255.255.255.0",
            "206": "192.168.2.0",
            "212": null,
            "213": null,
            "214": "Iphone von ion",
            "216": 1440,
            "217": null,
            "225": null,
            "247": 125000
          }
        }
      },
      "ResponseHistoryBMUExample": {
        "value": {
          "status": "success",
          "fields": [
            127,
            129,
            130,
            133,
            134,
            138,
            139,
            140,
            141,
            142,
            143,
            144,
            145,
            146,
            147,
            148,
            149,
            150,
            151,
            152,
            153,
            154,
            155,
            156,
            157,
            159,
            160,
            161,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            174,
            175,
            176,
            177,
            178,
            179,
            180,
            181,
            182,
            183,
            184,
            186,
            187,
            220,
            24,
            25,
            26,
            5,
            50
          ],
          "rows": [
            [
              [
                102,
                103,
                104
              ],
              "LK10-04",
              1,
              1643527427,
              1643545427,
              2.03,
              2.2,
              1.9,
              100,
              81,
              25.4,
              18.2,
              25.4,
              18.1,
              422,
              12076,
              0,
              0,
              258,
              11712,
              164,
              23265,
              70,
              1,
              18,
              85.6,
              1643545427,
              1643559827,
              2.2,
              2.1,
              2.21,
              81,
              100,
              18.2,
              20.5,
              20.7,
              18.2,
              54,
              1369,
              1,
              16,
              3,
              113,
              50,
              86271,
              0,
              0,
              0,
              157,
              1,
              [
                1,
                7,
                6,
                16,
                13,
                17,
                18,
                19,
                20,
                14
              ],
              0,
              0,
              2,
              12,
              620
            ],
            [
              [
                102,
                103,
                104
              ],
              "LK10-04",
              1,
              1643703827,
              1643732627,
              2.03,
              2.2,
              1.9,
              100,
              81,
              25.4,
              18.2,
              25.4,
              18.1,
              422,
              12076,
              0,
              0,
              258,
              11712,
              164,
              23265,
              70,
              1,
              18,
              85.6,
              1643732627,
              1643750627,
              2.2,
              2.1,
              2.21,
              81,
              100,
              18.2,
              20.5,
              20.7,
              18.2,
              54,
              1369,
              1,
              16,
              3,
              113,
              50,
              86271,
              0,
              0,
              0,
              157,
              1,
              [
                1,
                7,
                6,
                16,
                13,
                17,
                18,
                19,
                20,
                14
              ],
              0,
              0,
              2,
              12,
              620
            ]
          ]
        }
      },
      "ResponseHistoryChargerExample": {
        "value": {
          "status": "success",
          "fields": [
            1,
            10,
            118,
            119,
            120,
            123,
            127,
            129,
            130,
            160,
            161,
            165,
            166,
            174,
            175,
            182,
            183,
            184,
            187,
            2,
            203,
            204,
            205,
            207,
            208,
            210,
            220,
            24,
            25,
            26,
            416,
            417,
            5,
            50
          ],
          "rows": [
            [
              6012167,
              200313105,
              11,
              0,
              0,
              1,
              [],
              "12.FCIU",
              0,
              1643545427,
              1643559827,
              2.124,
              2.4,
              54,
              1599,
              0,
              0,
              0,
              42,
              0,
              24.6,
              33.7,
              37.5,
              28,
              28,
              3504,
              [
                16,
                13,
                17,
                18,
                21,
                26
              ],
              0,
              0.002,
              12,
              213333,
              231232,
              12,
              400
            ],
            [
              6012167,
              200313105,
              11,
              0,
              0,
              1,
              [],
              "12.FCIU",
              0,
              1643732627,
              1643750627,
              2.124,
              2.4,
              54,
              1599,
              0,
              0,
              0,
              42,
              0,
              24.6,
              33.7,
              37.5,
              28,
              28,
              3504,
              [
                16,
                13,
                17,
                18,
                21,
                26
              ],
              0,
              0.002,
              12,
              213333,
              231232,
              12,
              400
            ]
          ]
        }
      },
      "AlarmSolvedInADayExample": {
        "value": [
          {
            "187": 1,
            "188": 0,
            "191": 10000,
            "535": 105,
            "536": true
          },
          {
            "187": 2,
            "188": 0,
            "191": 10005,
            "535": 105,
            "536": false
          }
        ]
      },
      "ResponseAlarmSolvedInADayExample": {
        "value": {
          "status": "success",
          "data": [
            {
              "187": 1,
              "188": 0,
              "191": 10000,
              "535": 105,
              "536": true
            },
            {
              "187": 2,
              "188": 0,
              "191": 10005,
              "535": 105,
              "536": false
            }
          ]
        }
      },
      "BaseloadChangedExample": {
        "value": [
          {
            "187": 3,
            "188": 2,
            "191": 10000,
            "538": 5,
            "541": 12,
            "542": 13
          }
        ]
      },
      "ResponseBaseloadChangedExample": {
        "value": {
          "status": "success",
          "data": [
            {
              "187": 3,
              "188": 2,
              "191": 10000,
              "538": 5,
              "541": 12,
              "542": 13
            }
          ]
        }
      },
      "ElectrolyteCalibratedAndFirmwareStartupExample": {
        "value": [
          {
            "187": 4,
            "188": 4,
            "191": 10000,
            "546": "electrolyte"
          },
          {
            "38": 1337,
            "39": 42,
            "93": 1337,
            "94": 42,
            "187": 5,
            "188": 1,
            "191": 10000
          }
        ]
      },
      "ResponseElectrolyteCalibratedAndFirmwareStartupExample": {
        "value": {
          "status": "success",
          "data": [
            {
              "187": 4,
              "188": 4,
              "191": 10000,
              "546": "electrolyte"
            },
            {
              "38": 1337,
              "39": 42,
              "93": 1337,
              "94": 42,
              "187": 5,
              "188": 1,
              "191": 10000
            }
          ]
        }
      },
      "InstantChargerExample": {
        "value": {
          "fields": [
            127,
            187,
            191,
            88,
            9,
            90,
            91
          ],
          "rows": [
            [
              [],
              1,
              10000,
              25.67,
              180,
              6.5,
              7.5
            ],
            [
              [],
              2,
              10000,
              25.67,
              180,
              6.5,
              7.5
            ]
          ]
        }
      },
      "ResponseInstantChargerExample": {
        "value": {
          "status": "success",
          "fields": [
            127,
            187,
            191,
            88,
            9,
            90,
            91
          ],
          "rows": [
            [
              [],
              1,
              10000,
              25.67,
              180,
              6.5,
              7.5
            ],
            [
              [],
              2,
              10000,
              25.67,
              180,
              6.5,
              7.5
            ]
          ]
        }
      },
      "InstantBMUExample": {
        "value": {
          "fields": [
            187,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            9
          ],
          "rows": [
            [
              1,
              10000,
              100,
              99,
              101,
              5,
              4,
              6,
              25,
              24,
              26,
              100,
              5,
              180
            ],
            [
              2,
              10000,
              100,
              99,
              101,
              5,
              4,
              6,
              25,
              24,
              26,
              100,
              5,
              180
            ]
          ]
        }
      },
      "ResponseInstantBMUExample": {
        "value": {
          "status": "success",
          "fields": [
            187,
            191,
            192,
            193,
            194,
            195,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            9
          ],
          "rows": [
            [
              1,
              10000,
              100,
              99,
              101,
              5,
              4,
              6,
              25,
              24,
              26,
              100,
              5,
              180
            ],
            [
              2,
              10000,
              100,
              99,
              101,
              5,
              4,
              6,
              25,
              24,
              26,
              100,
              5,
              180
            ]
          ]
        }
      }
    },
    "schemas": {
      "StatusLogsBmuUpload": {
        "type": "object",
        "properties": {
          "10": {
            "type": "integer",
            "format": "int32",
            "description": "Unique device serial number [serialNumber]"
          },
          "35": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID [PanId]"
          },
          "36": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel [Channel]"
          },
          "38": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
          },
          "39": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
          },
          "44": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Amount of capacity left in the battery. [stateOfCharge] (in %)"
          },
          "45": {
            "type": "integer",
            "format": "int64",
            "description": "Decive time. [deviceTime]"
          },
          "46": {
            "type": "number",
            "description": "Measured battery current. [batteryCurrent] (in A)"
          },
          "47": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Measured battery voltage. [batteryVoltage] (in V)"
          },
          "48": {
            "type": "number",
            "description": "Measured battery temperature. [batteryTemperature] (in °C)"
          },
          "49": {
            "type": "number",
            "description": "Average battery lifetime temperature. [batteryLifeTempAverage] (in °C)"
          },
          "50": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Calculated actual battery capacity. [actualCapacity] (in Ah)"
          },
          "51": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The total remaining Ah available for the life time of the battery [ahLeft] (in Ah)"
          },
          "52": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Days left until battery is considered as end of life. [timeLeft] (in Days)"
          },
          "53": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
          },
          "54": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
          },
          "55": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
          },
          "56": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
          },
          "57": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
          },
          "58": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of charge cycles stopped before battery is fully charged. [StoppedCyles]"
          },
          "59": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count. [cyclesLeft]"
          },
          "60": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent discharging since reset of statistics. [totalDischargeTime] (in s)"
          },
          "61": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah discharged since reset of statistics. [totalDischargeAh] (in Ah)"
          },
          "62": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh discharged since reset of statistics. [totalDischargeWh] (in Wh)"
          },
          "63": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
          },
          "64": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
          },
          "65": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged since reset of statistics. [totalChargeWh] (in Wh)"
          },
          "66": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency. [totalChargeWhAc] (in Wh)"
          },
          "67": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only). [ebUnits] (in %)"
          },
          "68": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of History logs available in memory. [historyLogCount]"
          },
          "69": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
          },
          "70": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
          },
          "71": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Event logs available in memory. [eventLogCount]"
          },
          "72": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
          },
          "73": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Instant logs available in memory. [instantLogCount]"
          },
          "74": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
          },
          "80": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The current middle voltage [middleVoltage] (in V)"
          },
          "81": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The current electrolyte voltage [electrolyteVoltage] (in V)"
          },
          "127": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 231,
              "exclusiveMaximum": true
            },
            "description": "Array of active alarm codes [activeAlarms]"
          },
          "128": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
          },
          "220": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 74,
              "exclusiveMaximum": true
            },
            "description": "Array of device status [deviceStatus]"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "StatusLogsChargerUpload": {
        "type": "object",
        "properties": {
          "1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable. [deviceID]"
          },
          "5": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery [cells]"
          },
          "6": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery [capacity] (in Ah)"
          },
          "10": {
            "type": "integer",
            "format": "int32",
            "description": "Unique device serial number [serialNumber]"
          },
          "24": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging. [baseLoad] (in A)"
          },
          "25": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery. [cableResistance] (in Ω)"
          },
          "26": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier. [algorithmNumber]"
          },
          "38": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
          },
          "39": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
          },
          "45": {
            "type": "integer",
            "format": "int64",
            "description": "Decive time. [deviceTime]"
          },
          "53": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
          },
          "54": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
          },
          "55": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
          },
          "56": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
          },
          "57": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
          },
          "63": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
          },
          "64": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
          },
          "68": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of History logs available in memory. [historyLogCount]"
          },
          "69": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
          },
          "70": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
          },
          "71": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Event logs available in memory. [eventLogCount]"
          },
          "72": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
          },
          "73": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of Instant logs available in memory. [instantLogCount]"
          },
          "74": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
          },
          "75": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged from mains supply since reset of statistics. [totalAcPowerConsumption] (in Wh)"
          },
          "76": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary mains power consumption. [acPowerConsumption] (in VA)"
          },
          "88": {
            "type": "number",
            "description": "Momentary charger heat sink temperature. [chargerTemperature] (in °C)"
          },
          "90": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary charger measured current. [chargerCurrent] (in A)"
          },
          "91": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Momentary charger measured voltage. [chargerVoltage] (in V)"
          },
          "93": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
          },
          "94": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
          },
          "127": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 231,
              "exclusiveMaximum": true
            },
            "description": "Array of active alarm codes [activeAlarms]"
          },
          "128": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
          },
          "129": {
            "type": "string",
            "description": "The name of the charging algorithm [algorithmName]"
          },
          "130": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The version of the charging algorithm, can be NULL [algorithmVersion]"
          },
          "218": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of mains over voltage protection activations.  [overVoltageCount]"
          },
          "220": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 74,
              "exclusiveMaximum": true
            },
            "description": "Array of device status [deviceStatus]"
          },
          "382": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Measured primary voltage [UAC_meas] (in V)"
          },
          "389": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Serial number of the device, 8 bytes. MP serial numbers are 5 bytes. [serialNumber]"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "StatusLogsGatewayUpload": {
        "type": "object",
        "properties": {
          "10": {
            "type": "integer",
            "format": "int32",
            "description": "Unique device serial number [serialNumber]"
          },
          "38": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
          },
          "39": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
          },
          "45": {
            "type": "integer",
            "format": "int64",
            "description": "Decive time. [deviceTime]"
          },
          "93": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
          },
          "94": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
          },
          "96": {
            "type": "string",
            "description": "The commit number of the firmware or software build [buildCommit]"
          },
          "101": {
            "type": "string",
            "description": "The version of the Qt framework [qtVersion]"
          },
          "102": {
            "type": "string",
            "description": "The wireless MAC address [wirelessMac]"
          },
          "103": {
            "type": "string",
            "description": "The Ethernet MAC address [ethernetMac]"
          },
          "104": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The free storage space [freeStorage] (in Mb)"
          },
          "105": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The amount of found nodes [foundNodes]"
          },
          "106": {
            "description": "The strength of the wireless interface [wirelessSignalStrength]"
          },
          "107": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "The quality of the wireless interface [wirelessLinkQuality]"
          },
          "108": {
            "description": "If the SSH port is active [sshActive]"
          },
          "127": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 231,
              "exclusiveMaximum": true
            },
            "description": "Array of active alarm codes [activeAlarms]"
          },
          "220": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "maximum": 74,
              "exclusiveMaximum": true
            },
            "description": "Array of device status [deviceStatus]"
          },
          "248": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Root filesystem release [rootFsRelease]"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ConfigBMUSchema": {
        "type": "object",
        "properties": {
          "1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable. [deviceID]"
          },
          "2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Type of battery [batteryType]"
          },
          "3": {
            "type": "string",
            "description": "Battery alphanumerical description [batteryTag]"
          },
          "4": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "The type of BMU model [bmuType]"
          },
          "5": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery [cells]"
          },
          "6": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery [capacity] (in Ah)"
          },
          "7": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of charging cycles for battery life time [cyclesAvailable]"
          },
          "8": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The total Ah available for the life time of the battery [ahAvailable] (in Ah)"
          },
          "9": {
            "type": "integer",
            "format": "int32",
            "description": "The amount of seconds between instant logs, 0 = off [instantLogPeriod]"
          },
          "11": {
            "type": "boolean",
            "description": "Function for writing a history log once each midnight [everyDayUpdateHistoryLog]"
          },
          "12": {
            "type": "boolean",
            "description": "Setting for current idle limit in history log [highHistoryCurrentIdleLimit]"
          },
          "13": {
            "type": "number",
            "minimum": -3658.611,
            "exclusiveMinimum": true,
            "maximum": 3623.056,
            "exclusiveMaximum": true,
            "description": "The maximum battery temperature [temperatureMax] (in °C)"
          },
          "15": {
            "type": "integer",
            "format": "int32",
            "description": "Time before entering discharge state [dischargeStateThreshold]"
          },
          "16": {
            "type": "integer",
            "format": "int32",
            "description": "Time before entering charge state [chargeStateThreshold]"
          },
          "17": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Charger efficiency [chargeEfficiency] (in %)"
          },
          "18": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for first level security [securityCode1]"
          },
          "19": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security [securityCode2]"
          },
          "20": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Threshold for low state of charge level [stateOfChargeLow] (in %)"
          },
          "21": {
            "type": "boolean",
            "description": "Setting for selecting between Celsius or Fahrenheit scaling [fahrenheitScale]"
          },
          "23": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Battery middle cell [cellTap]"
          },
          "24": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging. [baseLoad] (in A)"
          },
          "25": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery. [cableResistance] (in Ω)"
          },
          "26": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier. [algorithmNumber]"
          },
          "27": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Limit for voltage balance calculation [voltageBalanceLimit] (in V)"
          },
          "28": {
            "type": "boolean",
            "description": "Setting selecting if an acid sensor is available [acidSensor]"
          },
          "29": {
            "type": "boolean",
            "description": "Setting selecting if automatic calibration shall be done [automaticCalibration]"
          },
          "30": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "Setting for the equalize function [equalizeFunction]"
          },
          "31": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter 1 for the equalize function [equalizeParameter] (in Ah)"
          },
          "32": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 3,
            "exclusiveMaximum": true,
            "description": "Setting for the watering function [wateringFunction]"
          },
          "33": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter for the watering function [wateringParameter]"
          },
          "35": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID [PanId]"
          },
          "36": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel [Channel]"
          },
          "37": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65280,
            "exclusiveMaximum": true,
            "description": "The Access radio node address [NodeId]"
          },
          "219": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read [timestamp]"
          },
          "324": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Discharged Ah before installation [AhUsed] (in Ah)"
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ConfigChargerSchema": {
        "type": "object",
        "properties": {
          "1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable. [deviceID]"
          },
          "2": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Type of battery [batteryType]"
          },
          "5": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Number of cells of the battery [cells]"
          },
          "6": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery [capacity] (in Ah)"
          },
          "9": {
            "type": "integer",
            "format": "int32",
            "description": "The amount of seconds between instant logs, 0 = off [instantLogPeriod]"
          },
          "18": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for first level security [securityCode1]"
          },
          "19": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security [securityCode2]"
          },
          "24": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Current drained from the battery during charging. [baseLoad] (in A)"
          },
          "25": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Resistance in the cables between charger and battery. [cableResistance] (in Ω)"
          },
          "26": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "Charging algorithm identifier. [algorithmNumber]"
          },
          "30": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "Setting for the equalize function [equalizeFunction]"
          },
          "31": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter 1 for the equalize function [equalizeParameter] (in Ah)"
          },
          "32": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 3,
            "exclusiveMaximum": true,
            "description": "Setting for the watering function [wateringFunction]"
          },
          "33": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 255,
            "exclusiveMaximum": true,
            "description": "Parameter for the watering function [wateringParameter]"
          },
          "34": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65535,
            "exclusiveMaximum": true,
            "description": "The BBC group [bbcGroup]"
          },
          "35": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65521,
            "exclusiveMaximum": true,
            "description": "The Access radio PAN ID [PanId]"
          },
          "36": {
            "type": "integer",
            "format": "int32",
            "minimum": 11,
            "exclusiveMinimum": true,
            "maximum": 26,
            "exclusiveMaximum": true,
            "description": "The Access radio channel [Channel]"
          },
          "37": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 65280,
            "exclusiveMaximum": true,
            "description": "The Access radio node address [NodeId]"
          },
          "42": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "BBC function [bbcFunction]"
          },
          "43": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Parameter 2 for the equalize function [equalizeVar2]"
          },
          "77": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "A list of all available charging curves in the charger [chargingCurves]"
          },
          "78": {
            "type": "boolean",
            "description": "If time restrictions shall be enabled [timeRestriction]"
          },
          "79": {
            "description": "A list of all charging restrictions, limited to 3 charging restrictions per day [chargingRestrictions]"
          },
          "84": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Use radio routing [routing]"
          },
          "85": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Remote out, relay active criteria for BBC [remoteOutBbcVar]"
          },
          "97": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Configuration for selected engine code, from a list of engines [engineCode]"
          },
          "98": {
            "type": "number",
            "description": "Charger rated nominal current. [iDcLimit] (in A)"
          },
          "123": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "The mode that charger will use to charge the battery [chargingMode]"
          },
          "219": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read [timestamp]"
          },
          "222": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Power group [powerGroup]"
          },
          "223": {
            "description": "Mains current limit [mainsCurrentLimit] (in A)"
          },
          "224": {
            "description": "Mains power limit [mainsPowerLimit] (in VA)"
          },
          "226": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Charging voltage limit (mV) [chargingVoltageLimit] (in V)"
          },
          "227": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Display contrast (%) [displayContrast] (in %)"
          },
          "228": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Led brightness max (%) [ledBrightnessMax] (in %)"
          },
          "229": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Led brightness dim (%) [ledBrightnessDim] (in %)"
          },
          "230": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Menu language [language]"
          },
          "231": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Time and date format [timeDateFormat]"
          },
          "232": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "F1 function [buttonF1Func]"
          },
          "233": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "F2 function [buttonF2Func]"
          },
          "234": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Remote in function [remoteInFunc]"
          },
          "235": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 8,
            "exclusiveMaximum": true,
            "description": "Remote out function [remoteOutFunc]"
          },
          "236": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Remote out alarm variable (not used) [remoteOutAlarmVar]"
          },
          "237": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 5,
            "exclusiveMaximum": true,
            "description": "Remote out phase variable [remoteOutPhaseVar]"
          },
          "238": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Airpump ON time [airPumpVar]"
          },
          "239": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Airpump Cycle time [airPumpVar2]"
          },
          "240": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Parallell control function [parallelControlFunc]"
          },
          "241": {
            "type": "boolean",
            "description": "DPL function activation [dplMode]"
          },
          "242": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "CAN bit rate [canBps] (in kbps)"
          },
          "243": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total allowed power consumption Sac(VA) for a DPL group [dplPowerLimitTotal] (in VA)"
          },
          "244": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "DPL function [dplFunction]"
          },
          "245": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Charger priority in a DPL group [dplPriorityFactor]"
          },
          "246": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Slave charger default power limit (no master connection) [dplSacLimit_default] (in %)"
          },
          "254": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 4,
            "exclusiveMaximum": true,
            "description": "CAN function [canMode]"
          },
          "255": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Not used [canNetworkControl]"
          },
          "256": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Radio function [radioMode]"
          },
          "257": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 2,
            "exclusiveMaximum": true,
            "description": "Radio network settings [radioNetworkSettings]"
          },
          "258": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 10,
            "exclusiveMaximum": true,
            "description": "Backlight time (min) [backlight_delay]"
          },
          "259": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "Extracharge function [extraChargeFunc]"
          },
          "260": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 6,
            "exclusiveMaximum": true,
            "description": "Extracharge, day [extraChargeVar]"
          },
          "261": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 23,
            "exclusiveMaximum": true,
            "description": "Extracharge, hour [extraChargeVar2]"
          },
          "262": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 59,
            "exclusiveMaximum": true,
            "description": "Extracharge, minute [extraChargeVar3]"
          },
          "263": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "AirPumpAlarmLow [airPumpAlarmLow]"
          },
          "264": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "AirPumpAlarmHigh [airPumpAlarmHigh]"
          },
          "265": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "exclusiveMinimum": true,
            "maximum": 127,
            "exclusiveMaximum": true,
            "description": "CAN Node ID [canNodeId]"
          },
          "267": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "array[8] of Selection for Extra outputs [pinOutSelect]"
          },
          "268": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "array[8] of Selection for Extra inputs. [pinInSelect]"
          },
          "269": {
            "type": "boolean",
            "description": "California Energy Comission mode active [cecMode]"
          },
          "270": {
            "type": "boolean",
            "description": "User param function [userParamMode]"
          },
          "271": {
            "type": "boolean",
            "description": "Quiet derate function [quietDerate]"
          },
          "272": {
            "type": "number",
            "description": "Default battery temperature to be used when no real battery temperature is measured [batteryTemperatureDefault] (in °C)"
          },
          "406": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 1,
            "exclusiveMaximum": true,
            "description": "0 = Off, 1= On [curveParamsFunction]"
          }
        }
      },
      "ConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "1": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Device numerical identification, configurable. [deviceID]"
          },
          "19": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Security code for second level security [securityCode2]"
          },
          "109": {
            "type": "string",
            "description": "The name of the device [deviceName]"
          },
          "110": {
            "type": "string",
            "description": "The cloud URL [cloudUrl]"
          },
          "111": {
            "type": "string",
            "description": "The cloud name [cloudUserName]"
          },
          "112": {
            "type": "string",
            "description": "The cloud password [cloudPassword]"
          },
          "113": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The scan for nodes interval [scanNetworkInterval] (in ms)"
          },
          "114": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The collect data minimum interval [collectDataMinInterval] (in ms)"
          },
          "115": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The collect data maximum interval [collectDataMaxInterval] (in ms)"
          },
          "116": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The periodic update interval [periodicUpdateInterval] (in ms)"
          },
          "124": {
            "type": "boolean",
            "description": "If the debug logs is active [debugLog]"
          },
          "125": {
            "type": "boolean",
            "description": "If the Micropower ACCESS debug logs is active [debugMpaLog]"
          },
          "131": {
            "type": "string",
            "description": "The assigned Ethernet IP address [ethernetAddress]"
          },
          "132": {
            "type": "boolean",
            "description": "If the Ethernet IP address is static [ethernetStatic]"
          },
          "189": {
            "type": "string",
            "description": "The assigned Ethernet netmask [ethernetNetmask]"
          },
          "206": {
            "type": "string",
            "description": "Assigned IP address of the ethernet gateway [ethernetGateway]"
          },
          "212": {
            "type": "string",
            "description": "The wireless IP address [wirelessAddress]"
          },
          "213": {
            "type": "string",
            "description": "The wireless netmask [wirelessNetmask]"
          },
          "214": {
            "type": "string",
            "description": "The wireless SSID [wirelessSsid]"
          },
          "215": {
            "type": "string",
            "description": "The wireless password [wirelessPassword]"
          },
          "216": {
            "type": "integer",
            "format": "int32",
            "description": "The interval for removing nodes [removeNodeInterval]"
          },
          "217": {
            "type": "string",
            "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all [networkRestriction]"
          },
          "219": {
            "type": "string",
            "description": "ISO 8601 extended timestamp for when device data is read [timestamp]"
          },
          "225": {
            "type": "string",
            "description": "The node restrictions, the node to be focused on, \"\" if all [nodeRestriction]"
          },
          "247": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "CAN bus speed in bits per second [canBitRate] (in bps)"
          }
        }
      },
      "HistoryLogsBmuUpload": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The order below can be changed as long as it follows the order of the rows. The list of allowed Device Data Specification IDs are:\n  * `127` - Array of active alarm codes [activeAlarms]\n  * `129` - The name of the charging algorithm [algorithmName]\n  * `130` - The version of the charging algorithm, can be NULL [algorithmVersion]\n  * `133` - The start time of discharge in POSIX format, seconds since 1 Januari 1970 with local time offset [dischargeTimeStart]\n  * `134` - The end time of discharge in POSIX format, seconds since 1 Januari 1970 with local time offset [dischargeTimeEnd]\n  * `138` - Battery cell voltage, 60-90s before entering the discharge state. [dischargeVpcStart]\n  * `139` - Battery cell voltage, 60-90s before entering charge state. [dischargeVpcEnd]\n  * `140` - Minimum battery voltage per cell during discharge. [dischargeVpcMin]\n  * `141` - State of charge at start of discharge. [dischargeStateOfChargeStart]\n  * `142` - State of charge at end of discharge. [dischargeStateOfChargeEnd]\n  * `143` - Battery temperature at discharge start time. [dischargeBatteryTemperatureStart]\n  * `144` - Battery temperature at charge start time. [dischargeBatteryTemperatureEnd]\n  * `145` - The maximum battery temperature being reached during discharge. [dischargeBatteryTemperatureMax]\n  * `146` - The minimum battery temperature being reached during discharge. [dischargeBatteryTemperatureMin]\n  * `147` - Number of Ah discharged between discharge start time and charge start time. [dischargeAh]\n  * `148` - Number of Wh discharged between discharge start time and charge start time. [dischargeWh]\n  * `149` - Ah discharged when current > 25 % of Battery capacity. [dischargeAhI25]\n  * `150` - Discharge time when current > 25 % of Battery capacity. [dischargeTimeI25]\n  * `151` - Ah discharged when 25% ≥ I > 15% of Battery capacity. [dischargeAhI15]\n  * `152` - Discharge time when 25% ≥ I > 15 % of Battery capacity. [dischargeTimeI15]\n  * `153` - Ah discharged when 15% ≥ I > 0% of Battery capacity [dischargeAhI0]\n  * `154` - Discharge time when 15% ≥ I > 0 % of Battery capacity. [dischargeTimeI0]\n  * `155` - Duration of current regeneration during discharge. [dischargeRegeneratingTime]\n  * `156` - Number of Ah being regenerated between Discharge start time and Charge start time. [dischargeRegeneratedAh]\n  * `157` - Number of Wh being regenerated between Discharge start time and Charge start time. [dischargeRegeneratedWh]\n  * `159` - The maximum current during discharge. [dischargeCurrentMax]\n  * `160` - Start datetime of charging in POSIX format, seconds since 1 Januari 1970 with local time offset [chargeTimeStart]\n  * `161` - End datetime of charging in POSIX format, seconds since 1 Januari 1970 with local time offset [chargeTimeEnd]\n  * `165` - Battery cell voltage, 60-90s before entering charge state. [chargeVpcStart]\n  * `166` - Battery cell voltage, 60-90s before entering discharge state. [chargeVpcEnd]\n  * `167` - Maximum voltage per cell during charge. [chargeVpcMax]\n  * `168` - State of charge at start of charge. [chargeStateOfChargeStart]\n  * `169` - State of charge at end of charge. [chargeStateOfChargeEnd]\n  * `170` - Battery temperature at Charge start time. [chargeBatteryTemperatureStart]\n  * `171` - Battery temperature at Charge end time. [chargeBatteryTemperatureEnd]\n  * `172` - The maximum battery temperature being reached during charge. [chargeBatteryTemperatureMax]\n  * `173` - The minimum battery temperature being reached during charge. [chargeBatteryTemperatureMin]\n  * `174` - Ah charged between Charge start time and Charge end time. [chargeAh]\n  * `175` - Wh charged between Charge start time and Charge end time. [chargeWh]\n  * `176` - Ah charged when current > 25 % of capacity. [chargeAhI25]\n  * `177` - Charge time when current > 25 % of capacity. [chargeTimeI25]\n  * `178` - Ah charged when 25% ≥ I > 15% of capacity. [chargeAhI15]\n  * `179` - Charge time when 25% ≥ I > 15 % of capacity. [chargeTimeI15]\n  * `180` - Ah charged when 15% ≥ I > 0% of capacity. [chargeAhI0]\n  * `181` - Charge time when 15% ≥ I > 0 % of capacity. [chargeTimeI0]\n  * `182` - Total time in equalize charging phase. Only relevant if an Access battery charger is connected. [equalizeTime]\n  * `183` - Ah being charged during equalize. Only relevant if an Access battery charger is used. [equalizeAh]\n  * `184` - Wh being charged during equalize. Only relevant if an Access battery charger is used. [equalizeWh]\n  * `186` - Maximum current measured during charge. [chargeCurrentMax]\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `220` - Array of device status [deviceStatus]\n  * `24` - Current drained from the battery during charging. [baseLoad]\n  * `25` - Resistance in the cables between charger and battery. [cableResistance]\n  * `26` - Charging algorithm identifier. [algorithmNumber]\n  * `5` - Number of cells of the battery [cells]\n  * `50` - Calculated actual battery capacity. [actualCapacity]\n"
            },
            "example": [
              127,
              129,
              130,
              133,
              134,
              138,
              139,
              140,
              141,
              142,
              143,
              144,
              145,
              146,
              147,
              148,
              149,
              150,
              151,
              152,
              153,
              154,
              155,
              156,
              157,
              159,
              160,
              161,
              165,
              166,
              167,
              168,
              169,
              170,
              171,
              172,
              173,
              174,
              175,
              176,
              177,
              178,
              179,
              180,
              181,
              182,
              183,
              184,
              186,
              187,
              220,
              24,
              25,
              26,
              5,
              50
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `127` [activeAlarms] - INT32[] [0 - 231]\n  * `129` [algorithmName] - STRING [∞ - ∞]\n  * `130` [algorithmVersion] - INT32 [0 - ∞]\n  * `133` [dischargeTimeStart] - INT32 [0 - ∞]\n  * `134` [dischargeTimeEnd] - INT32 [0 - ∞]\n  * `138` [dischargeVpcStart] - DOUBLE [0 - ∞] (in V)\n  * `139` [dischargeVpcEnd] - DOUBLE [0 - ∞] (in V)\n  * `140` [dischargeVpcMin] - DOUBLE [0 - ∞] (in V)\n  * `141` [dischargeStateOfChargeStart] - INT32 [0 - ∞] (in %)\n  * `142` [dischargeStateOfChargeEnd] - INT32 [0 - ∞] (in %)\n  * `143` [dischargeBatteryTemperatureStart] - DOUBLE [∞ - ∞] (in °C)\n  * `144` [dischargeBatteryTemperatureEnd] - DOUBLE [∞ - ∞] (in °C)\n  * `145` [dischargeBatteryTemperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `146` [dischargeBatteryTemperatureMin] - DOUBLE [∞ - ∞] (in °C)\n  * `147` [dischargeAh] - INT32 [0 - ∞] (in Ah)\n  * `148` [dischargeWh] - INT32 [0 - ∞] (in Wh)\n  * `149` [dischargeAhI25] - INT32 [0 - ∞] (in Ah)\n  * `150` [dischargeTimeI25] - INT32 [0 - ∞] (in s)\n  * `151` [dischargeAhI15] - INT32 [0 - ∞] (in Ah)\n  * `152` [dischargeTimeI15] - INT32 [0 - ∞] (in s)\n  * `153` [dischargeAhI0] - INT32 [0 - ∞] (in Ah)\n  * `154` [dischargeTimeI0] - INT32 [0 - ∞] (in s)\n  * `155` [dischargeRegeneratingTime] - INT32 [0 - ∞] (in s)\n  * `156` [dischargeRegeneratedAh] - INT32 [0 - ∞] (in Ah)\n  * `157` [dischargeRegeneratedWh] - INT32 [0 - ∞] (in Wh)\n  * `159` [dischargeCurrentMax] - DOUBLE [0 - ∞] (in A)\n  * `160` [chargeTimeStart] - INT32 [0 - ∞] (in s)\n  * `161` [chargeTimeEnd] - INT32 [0 - ∞] (in s)\n  * `165` [chargeVpcStart] - DOUBLE [0 - ∞] (in V)\n  * `166` [chargeVpcEnd] - DOUBLE [0 - ∞] (in V)\n  * `167` [chargeVpcMax] - DOUBLE [0 - ∞] (in V)\n  * `168` [chargeStateOfChargeStart] - INT32 [0 - ∞] (in %)\n  * `169` [chargeStateOfChargeEnd] - INT32 [0 - ∞] (in %)\n  * `170` [chargeBatteryTemperatureStart] - DOUBLE [∞ - ∞] (in °C)\n  * `171` [chargeBatteryTemperatureEnd] - DOUBLE [∞ - ∞] (in °C)\n  * `172` [chargeBatteryTemperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `173` [chargeBatteryTemperatureMin] - DOUBLE [∞ - ∞] (in °C)\n  * `174` [chargeAh] - INT32 [0 - ∞] (in Ah)\n  * `175` [chargeWh] - INT32 [0 - ∞] (in Wh)\n  * `176` [chargeAhI25] - INT32 [0 - ∞] (in Ah)\n  * `177` [chargeTimeI25] - INT32 [0 - ∞] (in s)\n  * `178` [chargeAhI15] - INT32 [0 - ∞] (in Ah)\n  * `179` [chargeTimeI15] - INT32 [0 - ∞] (in s)\n  * `180` [chargeAhI0] - INT32 [0 - ∞] (in Ah)\n  * `181` [chargeTimeI0] - INT32 [0 - ∞] (in s)\n  * `182` [equalizeTime] - INT32 [0 - ∞] (in s)\n  * `183` [equalizeAh] - INT32 [0 - ∞] (in Ah)\n  * `184` [equalizeWh] - INT32 [0 - ∞] (in Wh)\n  * `186` [chargeCurrentMax] - DOUBLE [0 - ∞] (in A)\n  * `187` [index] - INT32 [0 - ∞]\n  * `220` [deviceStatus] - INT32[] [0 - 74]\n  * `24` [baseLoad] - DOUBLE [0 - ∞] (in A)\n  * `25` [cableResistance] - DOUBLE [0 - ∞] (in Ω)\n  * `26` [algorithmNumber] - INT32 [0 - 65535]\n  * `5` [cells] - INT32 [0 - ∞]\n  * `50` [actualCapacity] - DOUBLE [0 - ∞] (in Ah)\n",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "HistoryLogsChargerUpload": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The order below can be changed as long as it follows the order of the rows. The list of allowed Device Data Specification IDs are:\n  * `1` - Device numerical identification, configurable. [deviceID]\n  * `10` - Unique device serial number [serialNumber]\n  * `118` - Charged Ah in % of total capacity in main stage [chargeAhP]\n  * `119` - Forklift ID [forkLiftId]\n  * `120` - Battery serial number [batterySerialNumber]\n  * `123` - The mode that charger will use to charge the battery [chargingMode]\n  * `127` - Array of active alarm codes [activeAlarms]\n  * `129` - The name of the charging algorithm [algorithmName]\n  * `130` - The version of the charging algorithm, can be NULL [algorithmVersion]\n  * `161` - End datetime of charging in POSIX format, seconds since 1 Januari 1970 with local time offset [chargeTimeEnd]\n  * `165` - Battery cell voltage, 60-90s before entering charge state. [chargeVpcStart]\n  * `166` - Battery cell voltage, 60-90s before entering discharge state. [chargeVpcEnd]\n  * `174` - Ah charged between Charge start time and Charge end time. [chargeAh]\n  * `175` - Wh charged between Charge start time and Charge end time. [chargeWh]\n  * `182` - Total time in equalize charging phase. Only relevant if an Access battery charger is connected. [equalizeTime]\n  * `183` - Ah being charged during equalize. Only relevant if an Access battery charger is used. [equalizeAh]\n  * `184` - Wh being charged during equalize. Only relevant if an Access battery charger is used. [equalizeWh]\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `2` - Type of battery [batteryType]\n  * `203` - Charger temperature when battery connected before start of charging. [chargerTemperatureStart]\n  * `204` - Charger temperature when battery disconnected. [chargerTemperatureEnd]\n  * `205` - Maximum charger temperature between charge start time and charge end time. [chargerTemperatureMax]\n  * `207` - Event log index at start of charge [eventIndexStart]\n  * `208` - Event log index at end of charge [eventIndexEnd]\n  * `210` - Time when charger ouput power is turned on. [chargeTime]\n  * `220` - Array of device status [deviceStatus]\n  * `24` - Current drained from the battery during charging. [baseLoad]\n  * `25` - Resistance in the cables between charger and battery. [cableResistance]\n  * `26` - Charging algorithm identifier. [algorithmNumber]\n  * `416` - Max power during charge. [LogPeakPower]\n  * `417` - Consumed mains power. [LogConsumedKWh]\n  * `5` - Number of cells of the battery [cells]\n  * `50` - Calculated actual battery capacity. [actualCapacity]\n"
            },
            "example": [
              1,
              10,
              118,
              119,
              120,
              123,
              127,
              129,
              130,
              161,
              165,
              166,
              174,
              175,
              182,
              183,
              184,
              187,
              2,
              203,
              204,
              205,
              207,
              208,
              210,
              220,
              24,
              25,
              26,
              416,
              417,
              5,
              50
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `1` [deviceID] - INT32 [0 - ∞]\n  * `10` [serialNumber] - INT32 [∞ - ∞]\n  * `118` [chargeAhP] - INT32 [0 - ∞] (in %)\n  * `119` [forkLiftId] - INT32 [0 - ∞]\n  * `120` [batterySerialNumber] - INT64 [0 - ∞]\n  * `123` [chargingMode] - INT32 [0 - 4]\n  * `127` [activeAlarms] - INT32[] [0 - 231]\n  * `129` [algorithmName] - STRING [∞ - ∞]\n  * `130` [algorithmVersion] - INT32 [0 - ∞]\n  * `161` [chargeTimeEnd] - INT32 [0 - ∞] (in s)\n  * `165` [chargeVpcStart] - DOUBLE [0 - ∞] (in V)\n  * `166` [chargeVpcEnd] - DOUBLE [0 - ∞] (in V)\n  * `174` [chargeAh] - INT32 [0 - ∞] (in Ah)\n  * `175` [chargeWh] - INT32 [0 - ∞] (in Wh)\n  * `182` [equalizeTime] - INT32 [0 - ∞] (in s)\n  * `183` [equalizeAh] - INT32 [0 - ∞] (in Ah)\n  * `184` [equalizeWh] - INT32 [0 - ∞] (in Wh)\n  * `187` [index] - INT32 [0 - ∞]\n  * `2` [batteryType] - INT32 [0 - 1]\n  * `203` [chargerTemperatureStart] - DOUBLE [∞ - ∞] (in °C)\n  * `204` [chargerTemperatureEnd] - DOUBLE [∞ - ∞] (in °C)\n  * `205` [chargerTemperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `207` [eventIndexStart] - INT32 [0 - ∞]\n  * `208` [eventIndexEnd] - INT32 [0 - ∞]\n  * `210` [chargeTime] - INT32 [0 - ∞] (in s)\n  * `220` [deviceStatus] - INT32[] [0 - 74]\n  * `24` [baseLoad] - DOUBLE [0 - ∞] (in A)\n  * `25` [cableResistance] - DOUBLE [0 - ∞] (in Ω)\n  * `26` [algorithmNumber] - INT32 [0 - 65535]\n  * `416` [LogPeakPower] - INT32 [0 - ∞] (in VA)\n  * `417` [LogConsumedKWh] - INT32 [0 - ∞] (in kWh)\n  * `5` [cells] - INT32 [0 - ∞]\n  * `50` [actualCapacity] - DOUBLE [0 - ∞] (in Ah)\n",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            }
          }
        }
      },
      "ResponsePostStatusBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "35": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID [PanId]"
              },
              "36": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel [Channel]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "44": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Amount of capacity left in the battery. [stateOfCharge] (in %)"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "46": {
                "type": "number",
                "description": "Measured battery current. [batteryCurrent] (in A)"
              },
              "47": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured battery voltage. [batteryVoltage] (in V)"
              },
              "48": {
                "type": "number",
                "description": "Measured battery temperature. [batteryTemperature] (in °C)"
              },
              "49": {
                "type": "number",
                "description": "Average battery lifetime temperature. [batteryLifeTempAverage] (in °C)"
              },
              "50": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity. [actualCapacity] (in Ah)"
              },
              "51": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total remaining Ah available for the life time of the battery [ahLeft] (in Ah)"
              },
              "52": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Days left until battery is considered as end of life. [timeLeft] (in Days)"
              },
              "53": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
              },
              "54": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
              },
              "55": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
              },
              "56": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
              },
              "57": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
              },
              "58": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charge cycles stopped before battery is fully charged. [StoppedCyles]"
              },
              "59": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count. [cyclesLeft]"
              },
              "60": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent discharging since reset of statistics. [totalDischargeTime] (in s)"
              },
              "61": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah discharged since reset of statistics. [totalDischargeAh] (in Ah)"
              },
              "62": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh discharged since reset of statistics. [totalDischargeWh] (in Wh)"
              },
              "63": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
              },
              "64": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
              },
              "65": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged since reset of statistics. [totalChargeWh] (in Wh)"
              },
              "66": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency. [totalChargeWhAc] (in Wh)"
              },
              "67": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only). [ebUnits] (in %)"
              },
              "68": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory. [historyLogCount]"
              },
              "69": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
              },
              "70": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
              },
              "71": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory. [eventLogCount]"
              },
              "72": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
              },
              "73": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory. [instantLogCount]"
              },
              "74": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
              },
              "80": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current middle voltage [middleVoltage] (in V)"
              },
              "81": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current electrolyte voltage [electrolyteVoltage] (in V)"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "128": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              }
            }
          }
        }
      },
      "ResponseGetStatusBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "35": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID [PanId]"
              },
              "36": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel [Channel]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "44": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Amount of capacity left in the battery. [stateOfCharge] (in %)"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "46": {
                "type": "number",
                "description": "Measured battery current. [batteryCurrent] (in A)"
              },
              "47": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured battery voltage. [batteryVoltage] (in V)"
              },
              "48": {
                "type": "number",
                "description": "Measured battery temperature. [batteryTemperature] (in °C)"
              },
              "49": {
                "type": "number",
                "description": "Average battery lifetime temperature. [batteryLifeTempAverage] (in °C)"
              },
              "50": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Calculated actual battery capacity. [actualCapacity] (in Ah)"
              },
              "51": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total remaining Ah available for the life time of the battery [ahLeft] (in Ah)"
              },
              "52": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Days left until battery is considered as end of life. [timeLeft] (in Days)"
              },
              "53": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
              },
              "54": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
              },
              "55": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
              },
              "56": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
              },
              "57": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
              },
              "58": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charge cycles stopped before battery is fully charged. [StoppedCyles]"
              },
              "59": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Cycles left in battery. Calculated as  Available cycles – Total cycle count. [cyclesLeft]"
              },
              "60": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent discharging since reset of statistics. [totalDischargeTime] (in s)"
              },
              "61": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah discharged since reset of statistics. [totalDischargeAh] (in Ah)"
              },
              "62": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh discharged since reset of statistics. [totalDischargeWh] (in Wh)"
              },
              "63": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
              },
              "64": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
              },
              "65": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged since reset of statistics. [totalChargeWh] (in Wh)"
              },
              "66": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. Calculated as Charged Wh total / Charging efficiency. [totalChargeWhAc] (in Wh)"
              },
              "67": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Capacity discharged per 24 h in percent of the rated capacity. Calculated as an average of the last 7 days (BMU2 only). [ebUnits] (in %)"
              },
              "68": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory. [historyLogCount]"
              },
              "69": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
              },
              "70": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
              },
              "71": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory. [eventLogCount]"
              },
              "72": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
              },
              "73": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory. [instantLogCount]"
              },
              "74": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
              },
              "80": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current middle voltage [middleVoltage] (in V)"
              },
              "81": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The current electrolyte voltage [electrolyteVoltage] (in V)"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "128": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              }
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "ResponsePostStatusChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable. [deviceID]"
              },
              "5": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery [cells]"
              },
              "6": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery [capacity] (in Ah)"
              },
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "24": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging. [baseLoad] (in A)"
              },
              "25": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery. [cableResistance] (in Ω)"
              },
              "26": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier. [algorithmNumber]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "53": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
              },
              "54": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
              },
              "55": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
              },
              "56": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
              },
              "57": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
              },
              "63": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
              },
              "64": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
              },
              "68": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory. [historyLogCount]"
              },
              "69": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
              },
              "70": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
              },
              "71": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory. [eventLogCount]"
              },
              "72": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
              },
              "73": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory. [instantLogCount]"
              },
              "74": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
              },
              "75": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. [totalAcPowerConsumption] (in Wh)"
              },
              "76": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary mains power consumption. [acPowerConsumption] (in VA)"
              },
              "88": {
                "type": "number",
                "description": "Momentary charger heat sink temperature. [chargerTemperature] (in °C)"
              },
              "90": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured current. [chargerCurrent] (in A)"
              },
              "91": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured voltage. [chargerVoltage] (in V)"
              },
              "93": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
              },
              "94": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "128": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
              },
              "129": {
                "type": "string",
                "description": "The name of the charging algorithm [algorithmName]"
              },
              "130": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL [algorithmVersion]"
              },
              "218": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of mains over voltage protection activations.  [overVoltageCount]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              },
              "382": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured primary voltage [UAC_meas] (in V)"
              },
              "389": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Serial number of the device, 8 bytes. MP serial numbers are 5 bytes. [serialNumber]"
              }
            }
          }
        }
      },
      "ResponseGetStatusChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable. [deviceID]"
              },
              "5": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery [cells]"
              },
              "6": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery [capacity] (in Ah)"
              },
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "24": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging. [baseLoad] (in A)"
              },
              "25": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery. [cableResistance] (in Ω)"
              },
              "26": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier. [algorithmNumber]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "53": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 25% or less of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles2To25]"
              },
              "54": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 26-50% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles26To50]"
              },
              "55": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 51-80% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles51To80]"
              },
              "56": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where 81-90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cycles81To90]"
              },
              "57": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cycles where more than 90% of the battery capacity have been discharged. In order for the cycle to be counted at least 1Ah must have been discharged. [cyclesAbove90]"
              },
              "63": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total time spent charging since reset of statistics. [totalChargeTime] (in s)"
              },
              "64": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics. [totalChargeAh] (in Ah)"
              },
              "68": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of History logs available in memory. [historyLogCount]"
              },
              "69": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest history log, logs are stored in a circular buffer. To read logs the index is needed. [historyLogIndex]"
              },
              "70": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The timestamp of the last history log in POSIX format [historyLogDate]"
              },
              "71": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Event logs available in memory. [eventLogCount]"
              },
              "72": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest event log, logs are stored in a circular buffer [eventLogIndex]"
              },
              "73": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of Instant logs available in memory. [instantLogCount]"
              },
              "74": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The index of the latest instant log, logs are stored in a circular buffer [instantLogIndex]"
              },
              "75": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged from mains supply since reset of statistics. [totalAcPowerConsumption] (in Wh)"
              },
              "76": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary mains power consumption. [acPowerConsumption] (in VA)"
              },
              "88": {
                "type": "number",
                "description": "Momentary charger heat sink temperature. [chargerTemperature] (in °C)"
              },
              "90": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured current. [chargerCurrent] (in A)"
              },
              "91": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Momentary charger measured voltage. [chargerVoltage] (in V)"
              },
              "93": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
              },
              "94": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "128": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The Timestamp of the last event log in POSIX format [eventLogDate]"
              },
              "129": {
                "type": "string",
                "description": "The name of the charging algorithm [algorithmName]"
              },
              "130": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The version of the charging algorithm, can be NULL [algorithmVersion]"
              },
              "218": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of mains over voltage protection activations.  [overVoltageCount]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              },
              "382": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Measured primary voltage [UAC_meas] (in V)"
              },
              "389": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Serial number of the device, 8 bytes. MP serial numbers are 5 bytes. [serialNumber]"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponsePostStatusGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "93": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
              },
              "94": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
              },
              "96": {
                "type": "string",
                "description": "The commit number of the firmware or software build [buildCommit]"
              },
              "101": {
                "type": "string",
                "description": "The version of the Qt framework [qtVersion]"
              },
              "102": {
                "type": "string",
                "description": "The wireless MAC address [wirelessMac]"
              },
              "103": {
                "type": "string",
                "description": "The Ethernet MAC address [ethernetMac]"
              },
              "104": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The free storage space [freeStorage] (in Mb)"
              },
              "105": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The amount of found nodes [foundNodes]"
              },
              "106": {
                "description": "The strength of the wireless interface [wirelessSignalStrength]"
              },
              "107": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "The quality of the wireless interface [wirelessLinkQuality]"
              },
              "108": {
                "description": "If the SSH port is active [sshActive]"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              },
              "248": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Root filesystem release [rootFsRelease]"
              }
            }
          }
        }
      },
      "ResponseGetStatusGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]"
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
              },
              "45": {
                "type": "integer",
                "format": "int64",
                "description": "Decive time. [deviceTime]"
              },
              "93": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
              },
              "94": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
              },
              "96": {
                "type": "string",
                "description": "The commit number of the firmware or software build [buildCommit]"
              },
              "101": {
                "type": "string",
                "description": "The version of the Qt framework [qtVersion]"
              },
              "102": {
                "type": "string",
                "description": "The wireless MAC address [wirelessMac]"
              },
              "103": {
                "type": "string",
                "description": "The Ethernet MAC address [ethernetMac]"
              },
              "104": {
                "type": "integer",
                "format": "int64",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The free storage space [freeStorage] (in Mb)"
              },
              "105": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The amount of found nodes [foundNodes]"
              },
              "106": {
                "description": "The strength of the wireless interface [wirelessSignalStrength]"
              },
              "107": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "The quality of the wireless interface [wirelessLinkQuality]"
              },
              "108": {
                "description": "If the SSH port is active [sshActive]"
              },
              "127": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 231,
                  "exclusiveMaximum": true
                },
                "description": "Array of active alarm codes [activeAlarms]"
              },
              "220": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 74,
                  "exclusiveMaximum": true
                },
                "description": "Array of device status [deviceStatus]"
              },
              "248": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Root filesystem release [rootFsRelease]"
              }
            }
          }
        }
      },
      "ResponseConfigBMUSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "everyDayUpdateHistoryLog": {
                "type": "boolean",
                "description": "Function for writing a history log once each midnight"
              },
              "highHistoryCurrentIdleLimit": {
                "type": "boolean",
                "description": "Setting for current idle limit in history log"
              },
              "temperatureMax": {
                "type": "number",
                "minimum": -3658.611,
                "exclusiveMinimum": true,
                "maximum": 3623.056,
                "exclusiveMaximum": true,
                "description": "The maximum battery temperature"
              },
              "dischargeStateThreshold": {
                "type": "string",
                "description": "Time before entering discharge state"
              },
              "chargeStateThreshold": {
                "type": "string",
                "description": "Time before entering charge state"
              },
              "chargeEfficiency": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Charger efficiency"
              },
              "securityCode1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for first level security"
              },
              "securityCode2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security"
              },
              "batteryType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Type of battery"
              },
              "stateOfChargeLow": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Threshold for low state of charge level"
              },
              "fahrenheitScale": {
                "type": "boolean",
                "description": "Setting for selecting between Celsius or Fahrenheit scaling"
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "cellTap": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Battery middle cell"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "voltageBalanceLimit": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Limit for voltage balance calculation"
              },
              "acidSensor": {
                "type": "boolean",
                "description": "Setting selecting if an acid sensor is available"
              },
              "automaticCalibration": {
                "type": "boolean",
                "description": "Setting selecting if automatic calibration shall be done"
              },
              "batteryTag": {
                "type": "string",
                "description": "Battery alphanumerical description"
              },
              "equalizeFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "Setting for the equalize function"
              },
              "equalizeParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter 1 for the equalize function"
              },
              "wateringFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 3,
                "exclusiveMaximum": true,
                "description": "Setting for the watering function"
              },
              "AhUsed": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Discharged Ah before installation"
              },
              "wateringParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter for the watering function"
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "NodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65280,
                "exclusiveMaximum": true,
                "description": "The Access radio node address"
              },
              "bmuType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "The type of BMU model"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "cyclesAvailable": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of charging cycles for battery life time"
              },
              "ahAvailable": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The total Ah available for the life time of the battery (0.8 * capacity * cyclesAvailable)"
              }
            }
          }
        },
        "required": [
          "data",
          "status"
        ]
      },
      "ResponseConfigChargerSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "deviceID": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable"
              },
              "chargingMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "The mode that charger will use to charge the battery"
              },
              "securityCode1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for first level security"
              },
              "securityCode2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security"
              },
              "batteryType": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Type of battery"
              },
              "timestamp": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read"
              },
              "powerGroup": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Power group"
              },
              "mainsCurrentLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Mains current limit"
              },
              "mainsPowerLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Mains power limit"
              },
              "chargingVoltageLimit": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Charging voltage limit (mV)"
              },
              "displayContrast": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Display contrast (%)"
              },
              "ledBrightnessMax": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Led brightness max (%)"
              },
              "ledBrightnessDim": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Led brightness dim (%)"
              },
              "language": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Menu language"
              },
              "timeDateFormat": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Time and date format"
              },
              "buttonF1Func": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "F1 function"
              },
              "buttonF2Func": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "F2 function"
              },
              "remoteInFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Remote in function"
              },
              "remoteOutFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 8,
                "exclusiveMaximum": true,
                "description": "Remote out function"
              },
              "remoteOutAlarmVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Remote out alarm variable (not used)"
              },
              "remoteOutPhaseVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 5,
                "exclusiveMaximum": true,
                "description": "Remote out phase variable"
              },
              "airPumpVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Airpump ON time"
              },
              "airPumpVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Airpump Cycle time"
              },
              "baseLoad": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Current drained from the battery during charging."
              },
              "parallelControlFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Parallell control function"
              },
              "dplMode": {
                "type": "boolean",
                "description": "DPL function activation"
              },
              "canBps": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "CAN bit rate"
              },
              "dplPowerLimitTotal": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total allowed power consumption Sac(VA) for a DPL group"
              },
              "dplFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "DPL function"
              },
              "dplPriorityFactor": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Charger priority in a DPL group"
              },
              "dplSacLimit_default": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Slave charger default power limit (no master connection)"
              },
              "cableResistance": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Resistance in the cables between charger and battery."
              },
              "canMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "CAN function"
              },
              "canNetworkControl": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Not used"
              },
              "radioMode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Radio function"
              },
              "radioNetworkSettings": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 2,
                "exclusiveMaximum": true,
                "description": "Radio network settings"
              },
              "backlight_delay": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 10,
                "exclusiveMaximum": true,
                "description": "Backlight time (min)"
              },
              "extraChargeFunc": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Extracharge function"
              },
              "algorithmNumber": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "Charging algorithm identifier."
              },
              "extraChargeVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Extracharge, day"
              },
              "extraChargeVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 23,
                "exclusiveMaximum": true,
                "description": "Extracharge, hour"
              },
              "extraChargeVar3": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 59,
                "exclusiveMaximum": true,
                "description": "Extracharge, minute"
              },
              "airPumpAlarmLow": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "AirPumpAlarmLow"
              },
              "airPumpAlarmHigh": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "AirPumpAlarmHigh"
              },
              "canNodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 1,
                "exclusiveMinimum": true,
                "maximum": 127,
                "exclusiveMaximum": true,
                "description": "CAN Node ID"
              },
              "pinOutSelect": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "array[8] of Selection for Extra outputs"
              },
              "pinInSelect": {
                "type": "string",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "array[8] of Selection for Extra inputs."
              },
              "cecMode": {
                "type": "boolean",
                "description": "California Energy Comission mode active"
              },
              "userParamMode": {
                "type": "boolean",
                "description": "User param function"
              },
              "quietDerate": {
                "type": "boolean",
                "description": "Quiet derate function"
              },
              "batteryTemperatureDefault": {
                "type": "number",
                "description": "Default battery temperature to be used when no real battery temperature is measured"
              },
              "equalizeFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 4,
                "exclusiveMaximum": true,
                "description": "Setting for the equalize function"
              },
              "equalizeParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter 1 for the equalize function"
              },
              "wateringFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 3,
                "exclusiveMaximum": true,
                "description": "Setting for the watering function"
              },
              "wateringParameter": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 255,
                "exclusiveMaximum": true,
                "description": "Parameter for the watering function"
              },
              "bbcGroup": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65535,
                "exclusiveMaximum": true,
                "description": "The BBC group"
              },
              "PanId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65521,
                "exclusiveMaximum": true,
                "description": "The Access radio PAN ID"
              },
              "Channel": {
                "type": "integer",
                "format": "int32",
                "minimum": 11,
                "exclusiveMinimum": true,
                "maximum": 26,
                "exclusiveMaximum": true,
                "description": "The Access radio channel"
              },
              "NodeId": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 65280,
                "exclusiveMaximum": true,
                "description": "The Access radio node address"
              },
              "curveParamsFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "0 = Off, 1= On"
              },
              "bbcFunction": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "BBC function"
              },
              "equalizeVar2": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 6,
                "exclusiveMaximum": true,
                "description": "Parameter 2 for the equalize function"
              },
              "cells": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Number of cells of the battery"
              },
              "capacity": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery"
              },
              "chargingCurves": {
                "type": "string",
                "description": "A list of all available charging curves in the charger"
              },
              "timeRestriction": {
                "type": "boolean",
                "description": "If time restrictions shall be enabled"
              },
              "chargingRestrictions": {
                "type": "string",
                "description": "A list of all charging restrictions, limited to 3 charging restrictions per day"
              },
              "routing": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Use radio routing"
              },
              "remoteOutBbcVar": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 1,
                "exclusiveMaximum": true,
                "description": "Remote out, relay active criteria for BBC"
              },
              "engineCode": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Configuration for selected engine code, from a list of engines"
              },
              "iDcLimit": {
                "type": "number",
                "description": "Charger rated nominal current."
              }
            },
            "required": [
              "timestamp"
            ]
          }
        }
      },
      "ResponsePostConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable. [deviceID]"
              },
              "19": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security [securityCode2]"
              },
              "109": {
                "type": "string",
                "description": "The name of the device [deviceName]"
              },
              "110": {
                "type": "string",
                "description": "The cloud URL [cloudUrl]"
              },
              "111": {
                "type": "string",
                "description": "The cloud name [cloudUserName]"
              },
              "112": {
                "type": "string",
                "description": "The cloud password [cloudPassword]"
              },
              "113": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The scan for nodes interval [scanNetworkInterval] (in ms)"
              },
              "114": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data minimum interval [collectDataMinInterval] (in ms)"
              },
              "115": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data maximum interval [collectDataMaxInterval] (in ms)"
              },
              "116": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The periodic update interval [periodicUpdateInterval] (in ms)"
              },
              "124": {
                "type": "boolean",
                "description": "If the debug logs is active [debugLog]"
              },
              "125": {
                "type": "boolean",
                "description": "If the Micropower ACCESS debug logs is active [debugMpaLog]"
              },
              "131": {
                "type": "string",
                "description": "The assigned Ethernet IP address [ethernetAddress]"
              },
              "132": {
                "type": "boolean",
                "description": "If the Ethernet IP address is static [ethernetStatic]"
              },
              "189": {
                "type": "string",
                "description": "The assigned Ethernet netmask [ethernetNetmask]"
              },
              "206": {
                "type": "string",
                "description": "Assigned IP address of the ethernet gateway [ethernetGateway]"
              },
              "212": {
                "type": "string",
                "description": "The wireless IP address [wirelessAddress]"
              },
              "213": {
                "type": "string",
                "description": "The wireless netmask [wirelessNetmask]"
              },
              "214": {
                "type": "string",
                "description": "The wireless SSID [wirelessSsid]"
              },
              "215": {
                "type": "string",
                "description": "The wireless password [wirelessPassword]"
              },
              "216": {
                "type": "integer",
                "format": "int32",
                "description": "The interval for removing nodes [removeNodeInterval]"
              },
              "217": {
                "type": "string",
                "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all [networkRestriction]"
              },
              "219": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read [timestamp]"
              },
              "225": {
                "type": "string",
                "description": "The node restrictions, the node to be focused on, \"\" if all [nodeRestriction]"
              },
              "247": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "CAN bus speed in bits per second [canBitRate] (in bps)"
              }
            }
          }
        }
      },
      "ResponseGetConfigGatewaySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "1": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Device numerical identification, configurable. [deviceID]"
              },
              "19": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Security code for second level security [securityCode2]"
              },
              "109": {
                "type": "string",
                "description": "The name of the device [deviceName]"
              },
              "110": {
                "type": "string",
                "description": "The cloud URL [cloudUrl]"
              },
              "111": {
                "type": "string",
                "description": "The cloud name [cloudUserName]"
              },
              "112": {
                "type": "string",
                "description": "The cloud password [cloudPassword]"
              },
              "113": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The scan for nodes interval [scanNetworkInterval] (in ms)"
              },
              "114": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data minimum interval [collectDataMinInterval] (in ms)"
              },
              "115": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The collect data maximum interval [collectDataMaxInterval] (in ms)"
              },
              "116": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The periodic update interval [periodicUpdateInterval] (in ms)"
              },
              "124": {
                "type": "boolean",
                "description": "If the debug logs is active [debugLog]"
              },
              "125": {
                "type": "boolean",
                "description": "If the Micropower ACCESS debug logs is active [debugMpaLog]"
              },
              "131": {
                "type": "string",
                "description": "The assigned Ethernet IP address [ethernetAddress]"
              },
              "132": {
                "type": "boolean",
                "description": "If the Ethernet IP address is static [ethernetStatic]"
              },
              "189": {
                "type": "string",
                "description": "The assigned Ethernet netmask [ethernetNetmask]"
              },
              "206": {
                "type": "string",
                "description": "Assigned IP address of the ethernet gateway [ethernetGateway]"
              },
              "212": {
                "type": "string",
                "description": "The wireless IP address [wirelessAddress]"
              },
              "213": {
                "type": "string",
                "description": "The wireless netmask [wirelessNetmask]"
              },
              "214": {
                "type": "string",
                "description": "The wireless SSID [wirelessSsid]"
              },
              "215": {
                "type": "string",
                "description": "The wireless password [wirelessPassword]"
              },
              "216": {
                "type": "integer",
                "format": "int32",
                "description": "The interval for removing nodes [removeNodeInterval]"
              },
              "217": {
                "type": "string",
                "description": "The network restrictions as \"channel:pan ID\" ex \"11:22\", \"\" if all [networkRestriction]"
              },
              "219": {
                "type": "string",
                "description": "ISO 8601 extended timestamp for when device data is read [timestamp]"
              },
              "225": {
                "type": "string",
                "description": "The node restrictions, the node to be focused on, \"\" if all [nodeRestriction]"
              },
              "247": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "CAN bus speed in bits per second [canBitRate] (in bps)"
              }
            }
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "ResponseHistorySchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail"
          },
          "data": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "rows": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    },
                    "index": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "object"
                          },
                          {
                            "type": "array"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "EventSchema": {
        "type": "array",
        "items": {
          "oneOf": [
            {
              "type": "object",
              "description": "Alarm event (type=0) which is generated when an alarm condition is detected as well as when a previously active alarm condition is resolved.",
              "properties": {
                "187": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Index of the history, event or instant log since start of operation. [index]"
                },
                "188": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 12,
                  "exclusiveMaximum": true,
                  "description": "The event type [eventType]"
                },
                "191": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The time when log was written [time] (in s)"
                },
                "535": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Alarm code [notavailable]",
                  "minimum": 0,
                  "maximum": 116,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true
                },
                "536": {
                  "type": "boolean",
                  "description": "Indicates if alarm is active [notavailable]"
                },
                "537": {
                  "type": "integer",
                  "format": "int32",
                  "description": "For unknown alarm codes this can be used to propagate info [notavailable]"
                }
              },
              "required": [
                "187",
                "188",
                "191",
                "535",
                "536"
              ]
            },
            {
              "type": "object",
              "description": "Startup event (type=1) which consist of a firmware object that specifies the device firmware's types and versions, the main firmware is specified in the main object and radio is specified in radio.",
              "properties": {
                "38": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The firmware type number, what kind of firmware is on the device [firmwareType]"
                },
                "39": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
                },
                "93": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The firmware type number, what kind of firmware is on the device [firmwareTypeRadio]"
                },
                "94": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersionRadio]"
                },
                "187": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Index of the history, event or instant log since start of operation. [index]"
                },
                "188": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 12,
                  "exclusiveMaximum": true,
                  "description": "The event type [eventType]"
                },
                "191": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The time when log was written [time] (in s)"
                }
              },
              "required": [
                "187",
                "188",
                "191",
                "38",
                "39"
              ]
            },
            {
              "type": "object",
              "description": "Parameter changed event (type=2)",
              "properties": {
                "187": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Index of the history, event or instant log since start of operation. [index]"
                },
                "188": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 12,
                  "exclusiveMaximum": true,
                  "description": "The event type [eventType]"
                },
                "191": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The time when log was written [time] (in s)"
                },
                "538": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Unique identifier for device data fields [notavailable]"
                },
                "539": {
                  "type": "string",
                  "description": "Generic data to represent the new string value [notavailable]"
                },
                "540": {
                  "type": "string",
                  "description": "Generic data to represent the old string value [notavailable]"
                },
                "541": {
                  "type": "number",
                  "description": "Generic data to represent the new float value [notavailable]"
                },
                "542": {
                  "type": "number",
                  "description": "Generic data to represent the old float value [notavailable]"
                }
              }
            },
            {
              "type": "object",
              "description": "Time set (type=3)",
              "properties": {
                "187": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Index of the history, event or instant log since start of operation. [index]"
                },
                "188": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 12,
                  "exclusiveMaximum": true,
                  "description": "The event type [eventType]"
                },
                "191": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The time when log was written [time] (in s)"
                },
                "540": {
                  "type": "string",
                  "description": "Generic data to represent the old string value [notavailable]"
                },
                "541": {
                  "type": "number",
                  "description": "Generic data to represent the new float value [notavailable]"
                },
                "542": {
                  "type": "number",
                  "description": "Generic data to represent the old float value [notavailable]"
                },
                "544": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "description": "ISO 8601 Time before being set by event [notavailable]"
                },
                "545": {
                  "type": "string",
                  "minimum": 0,
                  "maximum": 3,
                  "exclusiveMinimum": true,
                  "exclusiveMaximum": true,
                  "description": "Identifier for the source that set the time. unknown (0), radio (1), device (2), NFC (3) [notavailable]"
                }
              },
              "required": [
                "187",
                "188",
                "191",
                "544",
                "545"
              ]
            },
            {
              "type": "object",
              "description": "Calibration event (type=4)",
              "properties": {
                "187": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Index of the history, event or instant log since start of operation. [index]"
                },
                "188": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "maximum": 12,
                  "exclusiveMaximum": true,
                  "description": "The event type [eventType]"
                },
                "191": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The time when log was written [time] (in s)"
                },
                "546": {
                  "type": "string",
                  "description": "Which measurement is calibrated. invalid, voltage, current [notavailable]"
                }
              },
              "required": [
                "187",
                "188",
                "191",
                "546"
              ]
            }
          ]
        }
      },
      "InstantBMU": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The list of allowed Device Data Specification IDs are:\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `191` - The time when log was written [time]\n  * `192` - Average current between two instant log samples.  [currentAverage]\n  * `193` - Minimum current between two instant log samples. [currentMin]\n  * `194` - Maximum current between two instant log samples. [currentMax]\n  * `195` - Average battery voltage between two instant log samples.  [voltageAverage]\n  * `196` - Minimum voltage between two instant log samples. [voltageMin]\n  * `197` - Maximum voltage between two instant log samples. [voltageMax]\n  * `198` - Average battery temperature between two instant log samples.  [temperatureAverage]\n  * `199` - Minimum battery temperature between two instant log samples. [temperatureMin]\n  * `200` - Maximum battery temperature between two instant log samples. [temperatureMax]\n  * `201` - Average battery state of charge between two instant log samples (BMU2 only) [stateOfCharge]\n  * `202` - Average center voltage between two instant log samples. [middleVoltageAverage]\n  * `9` - The amount of seconds between instant logs, 0 = off [instantLogPeriod]\n"
            },
            "example": [
              187,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              9
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `187` [index] - INT32 [0 - ∞]\n  * `191` [time] - INT32 [0 - ∞] (in s)\n  * `192` [currentAverage] - DOUBLE [∞ - ∞] (in A)\n  * `193` [currentMin] - DOUBLE [∞ - ∞] (in A)\n  * `194` [currentMax] - DOUBLE [∞ - ∞] (in A)\n  * `195` [voltageAverage] - DOUBLE [0 - ∞] (in V)\n  * `196` [voltageMin] - DOUBLE [0 - ∞] (in V)\n  * `197` [voltageMax] - DOUBLE [0 - ∞] (in V)\n  * `198` [temperatureAverage] - DOUBLE [∞ - ∞] (in °C)\n  * `199` [temperatureMin] - DOUBLE [∞ - ∞] (in °C)\n  * `200` [temperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `201` [stateOfCharge] - INT32 [0 - 100] (in %)\n  * `202` [middleVoltageAverage] - DOUBLE [0 - ∞] (in V)\n  * `9` [instantLogPeriod] - INT32 [∞ - ∞]\n",
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int32"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          }
        }
      },
      "InstantCharger": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The list of allowed Device Data Specification IDs are:\n  * `127` - Array of active alarm codes [activeAlarms]\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `191` - The time when log was written [time]\n  * `88` - Momentary charger heat sink temperature. [chargerTemperature]\n  * `9` - The amount of seconds between instant logs, 0 = off [instantLogPeriod]\n  * `90` - Momentary charger measured current. [chargerCurrent]\n  * `91` - Momentary charger measured voltage. [chargerVoltage]\n"
            },
            "example": [
              127,
              187,
              191,
              88,
              9,
              90,
              91
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `127` [activeAlarms] - INT32[] [0 - 231]\n  * `187` [index] - INT32 [0 - ∞]\n  * `191` [time] - INT32 [0 - ∞] (in s)\n  * `88` [chargerTemperature] - DOUBLE [∞ - ∞] (in °C)\n  * `9` [instantLogPeriod] - INT32 [∞ - ∞]\n  * `90` [chargerCurrent] - DOUBLE [0 - ∞] (in A)\n  * `91` [chargerVoltage] - DOUBLE [0 - ∞] (in V)\n",
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int32"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          }
        }
      },
      "ResponseInstantSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "example": [
              187,
              191,
              192,
              193,
              194,
              195,
              196,
              197,
              198,
              199,
              200,
              201,
              202,
              9
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "integer",
                    "format": "int32"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          }
        }
      },
      "ResponseIndexSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "start": {
                  "type": "integer",
                  "description": "-1 for no result"
                },
                "end": {
                  "type": "integer",
                  "description": "-1 for no result"
                }
              }
            },
            "example": [
              {
                "start": 1,
                "end": 100
              },
              {
                "start": 250,
                "end": 250
              },
              {
                "start": 253,
                "end": 255
              },
              {
                "start": 290,
                "end": 300
              }
            ]
          }
        }
      },
      "BMSCycleSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The list of allowed Device Data Specification IDs are:\n  * `141` - State of charge at start of discharge. [dischargeSocStart]\n  * `145` - The maximum battery temperature being reached during discharge. [dischargeBatteryTemperatureMax]\n  * `146` - The minimum battery temperature being reached during discharge. [dischargeBatteryTemperatureMin]\n  * `147` - Number of Ah discharged between discharge start time and charge start time. [dischargeAh]\n  * `148` - Number of Wh discharged between discharge start time and charge start time. [dischargeWh]\n  * `155` - Duration of current regeneration during discharge. [dischargeRegeneratingTime]\n  * `156` - Number of Ah being regenerated between Discharge start time and Charge start time. [dischargeRegeneratedAh]\n  * `157` - Number of Wh being regenerated between Discharge start time and Charge start time. [dischargeRegeneratedWh]\n  * `162` - Time between Charge start time and Charge end time. [chargeTime]\n  * `168` - State of charge at start of charge. [chargeSocStart]\n  * `169` - State of charge at end of charge. [chargeSocEnd]\n  * `172` - The maximum battery temperature being reached during charge. [chargeBatteryTemperatureMax]\n  * `173` - The minimum battery temperature being reached during charge. [chargeBatteryTemperatureMin]\n  * `174` - Ah charged between Charge start time and Charge end time. [chargeAh]\n  * `175` - Wh charged between Charge start time and Charge end time. [chargeWh]\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `504` - Number of cycle logs written [cycleNr]\n  * `505` - Time when battery was disconnected in ms [dischargeTimeStartMs]\n  * `506` - Time when battery was disconnected in days [dischargeTimeStartDays]\n  * `507` - Duration of discharge in minutes [dischargeTime]\n  * `508` - Time when battery was connected in ms [chargeTimeStartMs]\n  * `509` - Time when battery was connected in days [chargeTimeStartDays]\n  * `510` - Bitcoded charge type  [chargeType]\n  * `511` - Bitcoded error list [cycleError1]\n  * `512` - Bitcoded error list [cycleError2]\n  * `513` - Bitcoded error list [cycleError3]\n"
            },
            "example": [
              141,
              145,
              146,
              147,
              148,
              155,
              156,
              157,
              162,
              168,
              169,
              172,
              173,
              174,
              175,
              187,
              504,
              505,
              506,
              507,
              508,
              509,
              510,
              511,
              512,
              513
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `141` [dischargeSocStart] - INT32 [0 - ∞] (in %)\n  * `145` [dischargeBatteryTemperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `146` [dischargeBatteryTemperatureMin] - DOUBLE [∞ - ∞] (in °C)\n  * `147` [dischargeAh] - INT32 [0 - ∞] (in Ah)\n  * `148` [dischargeWh] - INT32 [0 - ∞] (in Wh)\n  * `155` [dischargeRegeneratingTime] - INT32 [0 - ∞] (in s)\n  * `156` [dischargeRegeneratedAh] - INT32 [0 - ∞] (in Ah)\n  * `157` [dischargeRegeneratedWh] - INT32 [0 - ∞] (in Wh)\n  * `162` [chargeTime] - INT32 [∞ - ∞]\n  * `168` [chargeSocStart] - INT32 [0 - ∞] (in %)\n  * `169` [chargeSocEnd] - INT32 [0 - ∞] (in %)\n  * `172` [chargeBatteryTemperatureMax] - DOUBLE [∞ - ∞] (in °C)\n  * `173` [chargeBatteryTemperatureMin] - DOUBLE [∞ - ∞] (in °C)\n  * `174` [chargeAh] - INT32 [0 - ∞] (in Ah)\n  * `175` [chargeWh] - INT32 [0 - ∞] (in Wh)\n  * `187` [index] - INT32[] [0 - ∞]. ID 187 in this log is always an array of 2. The first element is the index when charging and the second one is the index when discharging.\n  * `504` [cycleNr] - INT32[] [0 - ∞]. ID 504 in this log is always an array of 2. The first element is the cycle_Nr for charging and the second one is the cycle_Nr for discharging.\n  * `505` [dischargeTimeStartMs] - INT32 [0 - ∞] (in ms)\n  * `506` [dischargeTimeStartDays] - INT32 [0 - ∞] (in days)\n  * `507` [dischargeTime] - INT32 [0 - ∞] (in min)\n  * `508` [chargeTimeStartMs] - INT32 [0 - ∞] (in ms)\n  * `509` [chargeTimeStartDays] - INT32 [0 - ∞] (in days)\n  * `510` [chargeType] - INT32 [0 - 2]\n  * `511` [cycleError1] - INT32 [∞ - ∞]. ID 511 in this log is always an array of 2. The first element is the cycleError1 when charging (null if no value) and the second one is the cycleError1 when discharging (null if no value).\n  * `512` [cycleError2] - INT32 [∞ - ∞]. ID 512 in this log is always an array of 2. The first element is the cycleError2 when charging (null if no value) and the second one is the cycleError2 when discharging (null if no value).\n  * `513` [cycleError3] - INT32 [∞ - ∞]. ID 513 in this log is always an array of 2. The first element is the cycleError3 when charging (null if no value) and the second one is the cycleError3 when discharging (null if no value).\n",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            },
            "example": [
              [
                46,
                24,
                22,
                13,
                303,
                0,
                0,
                0,
                2,
                62,
                0,
                28,
                24,
                0,
                0,
                [
                  169,
                  170
                ],
                [
                  169,
                  170
                ],
                67479000,
                13382,
                3,
                57092000,
                13379,
                0,
                [
                  0,
                  0
                ],
                [
                  11,
                  11
                ],
                [
                  0,
                  0
                ]
              ],
              [
                46,
                24,
                22,
                13,
                303,
                0,
                0,
                0,
                2,
                62,
                0,
                28,
                24,
                0,
                0,
                [
                  171,
                  172
                ],
                [
                  171,
                  172
                ],
                67479000,
                13382,
                3,
                57092000,
                13379,
                0,
                [
                  0,
                  0
                ],
                [
                  11,
                  11
                ],
                [
                  0,
                  0
                ]
              ]
            ]
          }
        }
      },
      "ResponseBMSCycleSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "example": [
              141,
              145,
              146,
              147,
              148,
              155,
              156,
              157,
              162,
              168,
              169,
              172,
              173,
              174,
              175,
              187,
              504,
              505,
              506,
              507,
              508,
              509,
              510,
              511,
              512,
              513
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "object"
                  },
                  {
                    "type": "array"
                  }
                ]
              }
            },
            "example": [
              [
                46,
                24,
                22,
                13,
                303,
                0,
                0,
                0,
                2,
                62,
                0,
                28,
                24,
                0,
                0,
                [
                  169,
                  170
                ],
                [
                  169,
                  170
                ],
                67479000,
                13382,
                3,
                57092000,
                13379,
                0,
                [
                  0,
                  0
                ],
                [
                  11,
                  11
                ],
                [
                  0,
                  0
                ]
              ],
              [
                46,
                24,
                22,
                13,
                303,
                0,
                0,
                0,
                2,
                62,
                0,
                28,
                24,
                0,
                0,
                [
                  171,
                  172
                ],
                [
                  171,
                  172
                ],
                67479000,
                13382,
                3,
                57092000,
                13379,
                0,
                [
                  0,
                  0
                ],
                [
                  11,
                  11
                ],
                [
                  0,
                  0
                ]
              ]
            ]
          }
        }
      },
      "BMSEventSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The field must contain exactly these Device Data Specification IDs:\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `499` - Real time when log was written [timestamp]\n  * `500` - Event type coded [bmsEventCode]\n"
            },
            "example": [
              187,
              499,
              500
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `187` [index] - INT32 [0 - ∞]\n  * `499` [timestamp] - INT32 [∞ - ∞]\n  * `500` [bmsEventCode] - INT32 [∞ - ∞]\n",
                "type": "integer",
                "format": "int32"
              },
              "example": [
                [
                  0,
                  1000000,
                  23213
                ],
                [
                  1,
                  1000020,
                  23213
                ],
                [
                  2,
                  1000155,
                  23213
                ],
                [
                  3,
                  1000400,
                  23213
                ]
              ]
            }
          }
        }
      },
      "ResponseBMSEventSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The field must contain exactly these Device Data Specification IDs:\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `499` - Real time when log was written [timestamp]\n  * `500` - Event type coded [bmsEventCode]\n"
            },
            "example": [
              187,
              499,
              500
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `187` [index] - INT32 [0 - ∞]\n  * `499` [timestamp] - INT32 [∞ - ∞]\n  * `500` [bmsEventCode] - INT32 [∞ - ∞]\n",
                "type": "integer",
                "format": "int32"
              },
              "example": [
                [
                  0,
                  1000000,
                  23213
                ],
                [
                  1,
                  1000020,
                  23213
                ],
                [
                  2,
                  1000155,
                  23213
                ],
                [
                  3,
                  1000400,
                  23213
                ]
              ]
            }
          }
        }
      },
      "BMSTotalsSchema": {
        "type": "object",
        "properties": {
          "61": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah discharged since reset of statistics. [dAhTotal] (in Ah)",
            "example": 13
          },
          "62": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh discharged since reset of statistics. [dWhTotal] (in Wh)",
            "example": 303
          },
          "64": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Ah charged since reset of statistics. [cAhTotal] (in Ah)",
            "example": 0
          },
          "65": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total number of Wh charged since reset of statistics. [cWhTotal] (in Wh)",
            "example": 0
          },
          "221": {
            "type": "integer",
            "format": "int32",
            "description": "Total cycle count (cycles2To25+cycles26To50+cycles51To80+cycles81To90+cyclesAbove90) [totalCycleCount]",
            "example": 171
          },
          "499": {
            "type": "integer",
            "format": "int32",
            "description": "Real time when log was written [timestamp]",
            "example": 100000
          },
          "514": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total regenerated ampere-hours [totalRegenAh] (in Ah)",
            "example": 0
          },
          "515": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Total regenerated watt-hours [totalRegenWh] (in Wh)",
            "example": 0
          },
          "516": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Amount of deep discharge cycles [totalDeepDischarge]",
            "example": 0
          },
          "526": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "State of health value in percents.  [stateOfHealth] (in %)",
            "example": 91
          }
        }
      },
      "ResponseBMSTotalsSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "61": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah discharged since reset of statistics. [dAhTotal] (in Ah)",
                "example": 13
              },
              "62": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh discharged since reset of statistics. [dWhTotal] (in Wh)",
                "example": 303
              },
              "64": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Ah charged since reset of statistics. [cAhTotal] (in Ah)",
                "example": 0
              },
              "65": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total number of Wh charged since reset of statistics. [cWhTotal] (in Wh)",
                "example": 0
              },
              "221": {
                "type": "integer",
                "format": "int32",
                "description": "Total cycle count (cycles2To25+cycles26To50+cycles51To80+cycles81To90+cyclesAbove90) [totalCycleCount]",
                "example": 171
              },
              "499": {
                "type": "integer",
                "format": "int32",
                "description": "Real time when log was written [timestamp]",
                "example": 100000
              },
              "514": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total regenerated ampere-hours [totalRegenAh] (in Ah)",
                "example": 0
              },
              "515": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Total regenerated watt-hours [totalRegenWh] (in Wh)",
                "example": 0
              },
              "516": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Amount of deep discharge cycles [totalDeepDischarge]",
                "example": 0
              },
              "526": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "State of health value in percents.  [stateOfHealth] (in %)",
                "example": 91
              }
            }
          }
        }
      },
      "BMSBatteryinfoSchema": {
        "type": "object",
        "properties": {
          "6": {
            "type": "number",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Capacity in Ah of the battery [capacity] (in Ah)",
            "example": 210
          },
          "10": {
            "type": "integer",
            "format": "int32",
            "description": "Unique device serial number [serialNumber]",
            "example": 0
          },
          "38": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware type number, what kind of firmware is on the device [firmwareType]",
            "example": 1001053
          },
          "39": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]",
            "example": 0
          },
          "187": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Index of the history, event or instant log since start of operation. [index]",
            "example": 0
          },
          "450": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Amount of serial cells connected to BMS [sCells]",
            "example": 6
          },
          "451": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Amount of parallel cells connected to BMS [pCells]",
            "example": 1
          },
          "452": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 7,
            "exclusiveMaximum": true,
            "description": "Battery type [machineType]",
            "example": 1
          },
          "453": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 7,
            "exclusiveMaximum": true,
            "description": "Charger CAN configuration [chargerType]",
            "example": 1
          },
          "454": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Bitcoded settings and configuration of BMS.  [auxFull]",
            "example": 8192
          },
          "455": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Max allowed charge C-rate [chargeCRate]",
            "example": 8
          },
          "456": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "High current threshold [hcTrigger] (in A)",
            "example": 15
          },
          "457": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "High current release  [hcRelease] (in A)",
            "example": 5
          },
          "458": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Charger CAN node ID for detection [chargerDetectId]",
            "example": 1836
          },
          "459": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Charger detected through CAN (AGV applications) [chargerDetectBit]",
            "example": 0
          },
          "460": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Timer to battery shut of. PWRD_SOC must be true. [pwrdTmo]",
            "example": 120
          },
          "461": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "maximum": 100,
            "exclusiveMaximum": true,
            "description": "Threshold SOC for battery shut of (PWRD:TMO must be true) [pwrdSoc] (in %)",
            "example": 20
          },
          "462": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "CAN kbps of master processor [canBaudRateMaster] (in kbps)",
            "example": 0
          },
          "463": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "CAN kbps of slave processor [canBaudRateSlave] (in kbps)",
            "example": 0
          },
          "464": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Max hardware discharge regen current [maxHwDcReCurrent] (in A)",
            "example": 325
          },
          "465": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "SP charge C-rate (x10) [spChargeC]",
            "example": 10
          },
          "466": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "SP charge time in seconds [spChargeTmo] (in s)",
            "example": 300
          },
          "467": {
            "type": "integer",
            "format": "int32",
            "description": "Strategy for charging the battery [chargerStrategy]",
            "example": 0
          },
          "468": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Discharge regenerative C-rate [dcReCRate]",
            "example": 20
          },
          "469": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Maximum charge current limited by hardware [maxHwChCurrent] (in A)",
            "example": 325
          },
          "470": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Maximum aux discharge regenerative current  [maxAuxDcReCurrent] (in A)",
            "example": 325
          },
          "471": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Maximum aux charge current  [maxAuxChCurrent] (in A)",
            "example": 325
          },
          "472": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Node ID of CANopen bus [canOpenNodeId]",
            "example": 30
          },
          "473": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Amount of CAN sensors [nrOfCanSensors]",
            "example": 1
          },
          "474": {
            "type": "integer",
            "format": "int32",
            "description": "IO expansion type [ioExpansionType]",
            "example": 0
          },
          "475": {
            "type": "integer",
            "format": "int32",
            "description": "Type of heater used in battery [heaterType]",
            "example": 2
          },
          "476": {
            "type": "integer",
            "format": "int32",
            "description": "Type of cells used in battery [cellType]",
            "example": 0
          },
          "477": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Heater SOC and number of heaters [heaterSocNrOfHeaters]",
            "example": 7680
          },
          "478": {
            "type": "integer",
            "format": "int32",
            "description": "Pin 12V select [pin12VSelect]",
            "example": 4
          },
          "479": {
            "type": "integer",
            "format": "int32",
            "description": "Configuration of contactor [contactorCfg]",
            "example": 0
          },
          "480": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Heater threshold max ; min value [heaterThresholdMaxMin] (in °C)",
            "example": 5135
          },
          "481": {
            "type": "integer",
            "format": "int32",
            "description": "Multiple BMS configuration [multiBmsCfg]",
            "example": 0
          },
          "482": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Charge perfered Tmax offset [chPrefTMaxOffset] (in °C)",
            "example": 0
          },
          "483": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Charge cell voltage target [chVCellTarget] (in V)",
            "example": 4200
          },
          "484": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Discharge cell voltage target [dcVCellTarget] (in V)",
            "example": 0
          },
          "485": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Set temperature for heater [heaterSetTemp] (in °C)",
            "example": 18
          },
          "486": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Set gap time [spGapTime] (in s)",
            "example": 900
          },
          "487": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "BMS part number  [partNr]",
            "example": 0
          },
          "488": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "BMS identifier [id]",
            "example": 0
          },
          "489": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "OEM part number base [oemHwPnBase]",
            "example": 0
          },
          "490": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "OEM part number revision [oemHwPnRev]",
            "example": 0
          },
          "491": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Gain calibrate current 1 [curr1Calib] (in A)",
            "example": 1000
          },
          "492": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Limit check [limitCheck]",
            "example": 0
          },
          "499": {
            "type": "integer",
            "format": "int32",
            "description": "Real time when log was written [timestamp]",
            "example": 100000
          }
        }
      },
      "ResponseBMSBatteryinfoSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "6": {
                "type": "number",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Capacity in Ah of the battery [capacity] (in Ah)",
                "example": 210
              },
              "10": {
                "type": "integer",
                "format": "int32",
                "description": "Unique device serial number [serialNumber]",
                "example": 0
              },
              "38": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware type number, what kind of firmware is on the device [firmwareType]",
                "example": 1001053
              },
              "39": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]",
                "example": 0
              },
              "187": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Index of the history, event or instant log since start of operation. [index]",
                "example": 0
              },
              "450": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Amount of serial cells connected to BMS [sCells]",
                "example": 6
              },
              "451": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Amount of parallel cells connected to BMS [pCells]",
                "example": 1
              },
              "452": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 7,
                "exclusiveMaximum": true,
                "description": "Battery type [machineType]",
                "example": 1
              },
              "453": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 7,
                "exclusiveMaximum": true,
                "description": "Charger CAN configuration [chargerType]",
                "example": 1
              },
              "454": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Bitcoded settings and configuration of BMS.  [auxFull]",
                "example": 8192
              },
              "455": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Max allowed charge C-rate [chargeCRate]",
                "example": 8
              },
              "456": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "High current threshold [hcTrigger] (in A)",
                "example": 15
              },
              "457": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "High current release  [hcRelease] (in A)",
                "example": 5
              },
              "458": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Charger CAN node ID for detection [chargerDetectId]",
                "example": 1836
              },
              "459": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Charger detected through CAN (AGV applications) [chargerDetectBit]",
                "example": 0
              },
              "460": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Timer to battery shut of. PWRD_SOC must be true. [pwrdTmo]",
                "example": 120
              },
              "461": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "maximum": 100,
                "exclusiveMaximum": true,
                "description": "Threshold SOC for battery shut of (PWRD:TMO must be true) [pwrdSoc] (in %)",
                "example": 20
              },
              "462": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "CAN kbps of master processor [canBaudRateMaster] (in kbps)",
                "example": 0
              },
              "463": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "CAN kbps of slave processor [canBaudRateSlave] (in kbps)",
                "example": 0
              },
              "464": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Max hardware discharge regen current [maxHwDcReCurrent] (in A)",
                "example": 325
              },
              "465": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "SP charge C-rate (x10) [spChargeC]",
                "example": 10
              },
              "466": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "SP charge time in seconds [spChargeTmo] (in s)",
                "example": 300
              },
              "467": {
                "type": "integer",
                "format": "int32",
                "description": "Strategy for charging the battery [chargerStrategy]",
                "example": 0
              },
              "468": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Discharge regenerative C-rate [dcReCRate]",
                "example": 20
              },
              "469": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Maximum charge current limited by hardware [maxHwChCurrent] (in A)",
                "example": 325
              },
              "470": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Maximum aux discharge regenerative current  [maxAuxDcReCurrent] (in A)",
                "example": 325
              },
              "471": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Maximum aux charge current  [maxAuxChCurrent] (in A)",
                "example": 325
              },
              "472": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Node ID of CANopen bus [canOpenNodeId]",
                "example": 30
              },
              "473": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Amount of CAN sensors [nrOfCanSensors]",
                "example": 1
              },
              "474": {
                "type": "integer",
                "format": "int32",
                "description": "IO expansion type [ioExpansionType]",
                "example": 0
              },
              "475": {
                "type": "integer",
                "format": "int32",
                "description": "Type of heater used in battery [heaterType]",
                "example": 2
              },
              "476": {
                "type": "integer",
                "format": "int32",
                "description": "Type of cells used in battery [cellType]",
                "example": 0
              },
              "477": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Heater SOC and number of heaters [heaterSocNrOfHeaters]",
                "example": 7680
              },
              "478": {
                "type": "integer",
                "format": "int32",
                "description": "Pin 12V select [pin12VSelect]",
                "example": 4
              },
              "479": {
                "type": "integer",
                "format": "int32",
                "description": "Configuration of contactor [contactorCfg]",
                "example": 0
              },
              "480": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Heater threshold max ; min value [heaterThresholdMaxMin] (in °C)",
                "example": 5135
              },
              "481": {
                "type": "integer",
                "format": "int32",
                "description": "Multiple BMS configuration [multiBmsCfg]",
                "example": 0
              },
              "482": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Charge perfered Tmax offset [chPrefTMaxOffset] (in °C)",
                "example": 0
              },
              "483": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Charge cell voltage target [chVCellTarget] (in V)",
                "example": 4200
              },
              "484": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Discharge cell voltage target [dcVCellTarget] (in V)",
                "example": 0
              },
              "485": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Set temperature for heater [heaterSetTemp] (in °C)",
                "example": 18
              },
              "486": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Set gap time [spGapTime] (in s)",
                "example": 900
              },
              "487": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "BMS part number  [partNr]",
                "example": 0
              },
              "488": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "BMS identifier [id]",
                "example": 0
              },
              "489": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "OEM part number base [oemHwPnBase]",
                "example": 0
              },
              "490": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "OEM part number revision [oemHwPnRev]",
                "example": 0
              },
              "491": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Gain calibrate current 1 [curr1Calib] (in A)",
                "example": 1000
              },
              "492": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Limit check [limitCheck]",
                "example": 0
              },
              "499": {
                "type": "integer",
                "format": "int32",
                "description": "Real time when log was written [timestamp]",
                "example": 100000
              }
            }
          }
        }
      },
      "BMSApplicationinfoSchema": {
        "type": "object",
        "properties": {
          "493": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Master BMS base software [mplMasterHexBase]",
            "example": 1001051
          },
          "494": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Master BMS software revision [mplMasterHexRev]",
            "example": 0
          },
          "495": {
            "type": "integer",
            "format": "int32",
            "description": "Slave BMS base software [mplSlaveHexBase]",
            "example": 1001052
          },
          "496": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Slave BMS software revision [mplSlaveHexRev]",
            "example": 0
          },
          "497": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "exclusiveMinimum": true,
            "description": "Brix Hex [mplBrixHex]",
            "example": 1001053
          },
          "499": {
            "type": "integer",
            "format": "int32",
            "description": "Real time when log was written [timestamp]",
            "example": 1000000
          }
        }
      },
      "ResponseBMSApplicationinfoSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "493": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Master BMS base software [mplMasterHexBase]",
                "example": 1001051
              },
              "494": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Master BMS software revision [mplMasterHexRev]",
                "example": 0
              },
              "495": {
                "type": "integer",
                "format": "int32",
                "description": "Slave BMS base software [mplSlaveHexBase]",
                "example": 1001052
              },
              "496": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Slave BMS software revision [mplSlaveHexRev]",
                "example": 0
              },
              "497": {
                "type": "integer",
                "format": "int32",
                "minimum": 0,
                "exclusiveMinimum": true,
                "description": "Brix Hex [mplBrixHex]",
                "example": 1001053
              },
              "499": {
                "type": "integer",
                "format": "int32",
                "description": "Real time when log was written [timestamp]",
                "example": 1000000
              }
            }
          }
        }
      },
      "BMSHistogramSchema": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "description": "The list of allowed Device Data Specification IDs are:\n  * `187` - Index of the history, event or instant log since start of operation. [index]\n  * `499` - Real time when log was written [timestamp]\n  * `520` - Histogram of different variables measured in the BMS [bmsHistogram]\n  * `521` - Type interpretation of histograms from BMS [bmsHistogramType]\n  * `529` - BMS axis type [bmsAxisType]\n  * `530` - BMS minimum [bmsMinimum]\n  * `531` - BMS maximum [bmsMaximum]\n"
            },
            "example": [
              187,
              499,
              520,
              521,
              528,
              529,
              530,
              531,
              532,
              533
            ]
          },
          "rows": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "description": "The following are the data types, allowed ranges, and units for each ID mentioned in 'fields':\n  * `187` [index] - INT32 [0 - ∞]\n  * `499` [timestamp] - INT32 [∞ - ∞]\n  * `520` [bmsHistogram] - INT32[] [∞ - ∞]\n  * `521` [bmsHistogramType] - INT32[] [∞ - ∞]\n  * `529` [bmsAxisType] - INT32 [∞ - ∞]\n  * `530` [bmsMinimum] - INT32 [∞ - ∞]\n  * `531` [bmsMaximum] - INT32 [∞ - ∞]\n",
                "oneOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                ],
                "example": [
                  [
                    0,
                    1000000,
                    [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    0,
                    3747,
                    3755
                  ],
                  [
                    0,
                    1000000,
                    [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    1,
                    3762,
                    3755
                  ],
                  [
                    0,
                    1000000,
                    [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    2,
                    22,
                    23
                  ],
                  [
                    0,
                    1000000,
                    [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    3,
                    23,
                    24
                  ],
                  [
                    0,
                    1000000,
                    [
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    6,
                    0,
                    0
                  ],
                  [
                    0,
                    1000000,
                    [
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      4626,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0,
                      0
                    ],
                    7,
                    0,
                    0
                  ]
                ]
              }
            }
          }
        }
      },
      "ResponseBMSHistogramSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "object",
            "properties": {
              "fields": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int32"
                },
                "example": [
                  187,
                  499,
                  520,
                  521,
                  528,
                  529,
                  530,
                  531,
                  532,
                  533
                ]
              },
              "rows": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    ],
                    "example": [
                      [
                        0,
                        1000000,
                        [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        0,
                        3747,
                        3755
                      ],
                      [
                        0,
                        1000000,
                        [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        1,
                        3762,
                        3755
                      ],
                      [
                        0,
                        1000000,
                        [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        2,
                        22,
                        23
                      ],
                      [
                        0,
                        1000000,
                        [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        3,
                        23,
                        24
                      ],
                      [
                        0,
                        1000000,
                        [
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        6,
                        0,
                        0
                      ],
                      [
                        0,
                        1000000,
                        [
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          4626,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0,
                          0
                        ],
                        7,
                        0,
                        0
                      ]
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "BMSBrixmappingSchema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "6": {
              "type": "number",
              "minimum": 0,
              "exclusiveMinimum": true,
              "description": "Capacity in Ah of the battery [capacity] (in Ah)"
            },
            "39": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
            },
            "499": {
              "type": "integer",
              "format": "int32",
              "description": "Real time when log was written [timestamp]"
            },
            "517": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "description": "BMS configurated index of modules [brixmapIndex]"
            },
            "518": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "description": "Configured serial number of module [configuredSn]"
            },
            "519": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "exclusiveMinimum": true,
              "description": "Part number of BMS [hwPartNumber]"
            }
          }
        },
        "example": [
          {
            "6": 210,
            "39": 6,
            "499": 1000000,
            "517": 0,
            "518": 10,
            "519": 1337
          },
          {
            "6": 210,
            "39": 0,
            "499": 1000000,
            "517": 1,
            "518": 20,
            "519": 1337
          },
          {
            "6": 210,
            "39": 0,
            "499": 1000000,
            "517": 2,
            "518": 30,
            "519": 1337
          },
          {
            "6": 210,
            "39": 0,
            "499": 1000000,
            "517": 3,
            "518": 40,
            "519": 1337
          },
          {
            "6": 210,
            "39": 0,
            "499": 1000000,
            "517": 4,
            "518": 50,
            "519": 8570073
          },
          {
            "6": 210,
            "39": 0,
            "499": 1000000,
            "517": 5,
            "518": 60,
            "519": 1337
          }
        ]
      },
      "ResponseBMSBrixmappingSchema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "success or fail",
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "6": {
                  "type": "number",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Capacity in Ah of the battery [capacity] (in Ah)"
                },
                "39": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "The firmware version number, which version of the firmware type is on the device [firmwareVersion]"
                },
                "499": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Real time when log was written [timestamp]"
                },
                "517": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "BMS configurated index of modules [brixmapIndex]"
                },
                "518": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Configured serial number of module [configuredSn]"
                },
                "519": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0,
                  "exclusiveMinimum": true,
                  "description": "Part number of BMS [hwPartNumber]"
                }
              }
            },
            "example": [
              {
                "6": 210,
                "39": 6,
                "499": 1000000,
                "517": 0,
                "518": 10,
                "519": 1337
              },
              {
                "6": 210,
                "39": 0,
                "499": 1000000,
                "517": 1,
                "518": 20,
                "519": 1337
              },
              {
                "6": 210,
                "39": 0,
                "499": 1000000,
                "517": 2,
                "518": 30,
                "519": 1337
              },
              {
                "6": 210,
                "39": 0,
                "499": 1000000,
                "517": 3,
                "518": 40,
                "519": 1337
              },
              {
                "6": 210,
                "39": 0,
                "499": 1000000,
                "517": 4,
                "518": 50,
                "519": 8570073
              },
              {
                "6": 210,
                "39": 0,
                "499": 1000000,
                "517": 5,
                "518": 60,
                "519": 1337
              }
            ]
          }
        }
      },
      "RequestTimeout": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Request Timeout"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Unauthorized: You must log in to do this."
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Must supply firmware with main version."
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Internal server error"
          }
        }
      },
      "ItemNotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "fail"
          },
          "message": {
            "type": "string",
            "example": "Item Not Found"
          }
        }
      }
    }
  }
}
